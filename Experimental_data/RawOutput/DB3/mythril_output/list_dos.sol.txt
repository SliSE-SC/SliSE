{"error": null, "issues": [{"address": 1182, "code": "lastTimeOfNewCredit + TWELVE_HOURS", "contract": "Government", "description": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "/sb/list_dos.sol", "function": "fallback", "lineno": 35, "max_gas_used": 36046, "min_gas_used": 1765, "severity": "High", "sourceMap": ":34", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}}, {"address": 1188, "code": "if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {\n             // Return money to sender\n             msg.sender.send(amount);\n             // Sends all contract money to the last creditor\n             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n             corruptElite.send(this.balance);\n             // Reset contract state\n             lastCreditorPayedOut = 0;\n             lastTimeOfNewCredit = block.timestamp;\n             profitFromCrash = 0;\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAddresses = new address[](0);\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAmounts = new uint[](0);\n             round += 1;\n             return false;\n         }\n         else {\n             // the system needs to collect at least 1% of the profit from a crash to stay alive\n             if (amount >= 10 ** 18) {\n                 // the System has received fresh money, it will survive at leat 12h more\n                 lastTimeOfNewCredit = block.timestamp;\n                 // register the new creditor and his amount with 10% interest rate\n                 creditorAddresses.push(msg.sender);\n                 creditorAmounts.push(amount * 110 / 100);\n                 // now the money is distributed\n                 // first the corrupt elite grabs 5% - thieves!\n                 corruptElite.send(amount * 5/100);\n                 // 5% are going into the economy (they will increase the value for the person seeing the crash comming)\n                 if (profitFromCrash < 10000 * 10**18) {\n                     profitFromCrash += amount * 5/100;\n                 }\n                 // if you have a buddy in the government (and he is in the creditor list) he can get 5% of your credits.\n                 // Make a deal with him.\n                 if(buddies[buddy] >= amount) {\n                     buddy.send(amount * 5/100);\n                 }\n                 buddies[msg.sender] += amount * 110 / 100;\n                 // 90% of the money will be used to pay out old creditors\n                 if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash) {\n                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n                     buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\n                     lastCreditorPayedOut += 1;\n                 }\n                 return true;\n             }\n             else {\n                 msg.sender.send(amount);\n                 return false;\n             }\n         }", "contract": "Government", "description": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "/sb/list_dos.sol", "function": "fallback", "lineno": 35, "max_gas_used": 1010, "min_gas_used": 915, "severity": "Low", "sourceMap": "1184:2627", "swc-id": "116", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}}, {"address": 1264, "code": "lendGovernmentMoney(0)", "contract": "Government", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/list_dos.sol", "function": "fallback", "lineno": 90, "max_gas_used": 37634, "min_gas_used": 3353, "severity": "Medium", "sourceMap": ":22::i", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}, {"address": 1264, "code": "function lendGovernmentMoney(address buddy) returns (bool) {\n         uint amount = msg.value;\n         // check if the system already broke down. If for 12h no new creditor gives new credit to the system it will brake down.\n         // 12h are on average = 60*60*12/12.5 = 3456\n         if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {\n             // Return money to sender\n             msg.sender.send(amount);\n             // Sends all contract money to the last creditor\n             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n             corruptElite.send(this.balance);\n             // Reset contract state\n             lastCreditorPayedOut = 0;\n             lastTimeOfNewCredit = block.timestamp;\n             profitFromCrash = 0;\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAddresses = new address[](0);\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAmounts = new uint[](0);\n             round += 1;\n             return false;\n         }\n         else {\n             // the system needs to collect at least 1% of the profit from a crash to stay alive\n             if (amount >= 10 ** 18) {\n                 // the System has received fresh money, it will survive at leat 12h more\n                 lastTimeOfNewCredit = block.timestamp;\n                 // register the new creditor and his amount with 10% interest rate\n                 creditorAddresses.push(msg.sender);\n                 creditorAmounts.push(amount * 110 / 100);\n                 // now the money is distributed\n                 // first the corrupt elite grabs 5% - thieves!\n                 corruptElite.send(amount * 5/100);\n                 // 5% are going into the economy (they will increase the value for the person seeing the crash comming)\n                 if (profitFromCrash < 10000 * 10**18) {\n                     profitFromCrash += amount * 5/100;\n                 }\n                 // if you have a buddy in the government (and he is in the creditor list) he can get 5% of your credits.\n                 // Make a deal with him.\n                 if(buddies[buddy] >= amount) {\n                     buddy.send(amount * 5/100);\n                 }\n                 buddies[msg.sender] += amount * 110 / 100;\n                 // 90% of the money will be used to pay out old creditors\n                 if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash) {\n                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n                     buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\n                     lastCreditorPayedOut += 1;\n                 }\n                 return true;\n             }\n             else {\n                 msg.sender.send(amount);\n                 return false;\n             }\n         }\n     }", "contract": "Government", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/list_dos.sol", "function": "lendGovernmentMoney(address)", "lineno": 31, "max_gas_used": 37980, "min_gas_used": 3699, "severity": "Medium", "sourceMap": "896:2922:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd95a2d42", "input": "0xd95a2d42", "name": "lendGovernmentMoney(address)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 2876, "code": "msg.sender.send(amount)", "contract": "Government", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "/sb/list_dos.sol", "function": "fallback", "lineno": 82, "max_gas_used": 36377, "min_gas_used": 2096, "severity": "Medium", "sourceMap": "3730:23", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd95a2d42", "input": "0xd95a2d42", "name": "lendGovernmentMoney(address)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00000000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 2876, "code": "msg.sender.send(amount)", "contract": "Government", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "/sb/list_dos.sol", "function": "lendGovernmentMoney(address)", "lineno": 82, "max_gas_used": 36738, "min_gas_used": 2176, "severity": "Medium", "sourceMap": "3730:23", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd95a2d42", "input": "0xd95a2d42", "name": "lendGovernmentMoney(address)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd95a2d42", "input": "0xd95a2d42", "name": "lendGovernmentMoney(address)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 3344, "code": "address[] public creditorAddresses", "contract": "Government", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/list_dos.sol", "function": "creditorAddresses(uint256)", "lineno": 16, "max_gas_used": 1307, "min_gas_used": 1212, "severity": "Medium", "sourceMap": "356:34:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xce43b0c0", "input": "0xce43b0c0", "name": "creditorAddresses(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 3548, "code": "uint[] public creditorAmounts", "contract": "Government", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/list_dos.sol", "function": "creditorAmounts(uint256)", "lineno": 17, "max_gas_used": 1373, "min_gas_used": 1278, "severity": "Medium", "sourceMap": "397:29:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a723058206f80c454a172dd640c510c0c486f73ceb7f8855055d91e6951c61e7089bde80a0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xf42d1d30", "input": "0xf42d1d30", "name": "creditorAmounts(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}], "success": true}
