{"error": null, "issues": [{"address": 480, "code": "Game[] public gamesPlayed", "contract": "CryptoRoulette", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/crypto_roulette.sol", "function": "gamesPlayed(uint256)", "lineno": 25, "max_gas_used": 1109, "min_gas_used": 1014, "severity": "Medium", "sourceMap": "750:25:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405267016345785d8a000060025534801561001c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007561007a640100000000026401000000009004565b6100c5565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156100b857fe5b060160ff16600081905550565b6104db806100d46000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063382cf0a61461007a57806341c0e1b5146100ee5780636898f82b146101055780639c675eaa14610125578063c53391321461017c578063cfd8a175146101a7575b005b34801561008657600080fd5b506100a5600480360381019080803590602001909291905050506101d2565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100fa57600080fd5b50610103610225565b005b610123600480360381019080803590602001909291905050506102a8565b005b34801561013157600080fd5b5061013a610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018857600080fd5b50610191610458565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc61045e565b6040518082815260200191505060405180910390f35b6004818154811015156101e157fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102885750620151806001540142115b156102a6573373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060025434101580156102bd5750600a8211155b15156102c857600080fd5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010181905550600481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015550505060005482141561041f573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561041d573d6000803e3d6000fd5b505b610427610464565b426001819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156104a257fe5b060160ff166000819055505600a165627a7a72305820baa1736065f061f9ec756abdbfec601a8ba480d6bba521b575c5fc10fa6e82f40029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x382cf0a6", "input": "0x382cf0a6", "name": "gamesPlayed(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 645, "code": "lastPlayed + 1 days", "contract": "CryptoRoulette", "description": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "/sb/crypto_roulette.sol", "function": "kill()", "lineno": 55, "max_gas_used": 2289, "min_gas_used": 1864, "severity": "High", "sourceMap": ":19", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405267016345785d8a000060025534801561001c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007561007a640100000000026401000000009004565b6100c5565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156100b857fe5b060160ff16600081905550565b6104db806100d46000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063382cf0a61461007a57806341c0e1b5146100ee5780636898f82b146101055780639c675eaa14610125578063c53391321461017c578063cfd8a175146101a7575b005b34801561008657600080fd5b506100a5600480360381019080803590602001909291905050506101d2565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100fa57600080fd5b50610103610225565b005b610123600480360381019080803590602001909291905050506102a8565b005b34801561013157600080fd5b5061013a610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018857600080fd5b50610191610458565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc61045e565b6040518082815260200191505060405180910390f35b6004818154811015156101e157fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102885750620151806001540142115b156102a6573373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060025434101580156102bd5750600a8211155b15156102c857600080fd5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010181905550600481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015550505060005482141561041f573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561041d573d6000803e3d6000fd5b505b610427610464565b426001819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156104a257fe5b060160ff166000819055505600a165627a7a72305820baa1736065f061f9ec756abdbfec601a8ba480d6bba521b575c5fc10fa6e82f40029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x6898f82b", "input": "0x6898f82b", "name": "play(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x16345785d8a0000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x41c0e1b5", "input": "0x41c0e1b5", "name": "kill()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 653, "code": "if (msg.sender == ownerAddr && now > lastPlayed + 1 days) {\n            suicide(msg.sender);\n        }", "contract": "CryptoRoulette", "description": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "/sb/crypto_roulette.sol", "function": "kill()", "lineno": 55, "max_gas_used": 2269, "min_gas_used": 1844, "severity": "Low", "sourceMap": "1582:102", "swc-id": "116", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405267016345785d8a000060025534801561001c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007561007a640100000000026401000000009004565b6100c5565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156100b857fe5b060160ff16600081905550565b6104db806100d46000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063382cf0a61461007a57806341c0e1b5146100ee5780636898f82b146101055780639c675eaa14610125578063c53391321461017c578063cfd8a175146101a7575b005b34801561008657600080fd5b506100a5600480360381019080803590602001909291905050506101d2565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100fa57600080fd5b50610103610225565b005b610123600480360381019080803590602001909291905050506102a8565b005b34801561013157600080fd5b5061013a610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018857600080fd5b50610191610458565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc61045e565b6040518082815260200191505060405180910390f35b6004818154811015156101e157fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102885750620151806001540142115b156102a6573373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060025434101580156102bd5750600a8211155b15156102c857600080fd5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010181905550600481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015550505060005482141561041f573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561041d573d6000803e3d6000fd5b505b610427610464565b426001819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156104a257fe5b060160ff166000819055505600a165627a7a72305820baa1736065f061f9ec756abdbfec601a8ba480d6bba521b575c5fc10fa6e82f40029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x41c0e1b5", "input": "0x41c0e1b5", "name": "kill()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}], "success": true}
