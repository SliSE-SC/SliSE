{
    "file": "0x9a156f934c3542ef6a4443ce9a91d2d768fc01c1.sol",
    "global_structs": [
        {
            "name": "_Prop",
            "fields": {
                "propID": [
                    "integer"
                ],
                "endTime": [
                    "integer"
                ]
            }
        },
        {
            "name": "_Prop",
            "fields": {
                "propID": [
                    "integer"
                ],
                "endTime": [
                    "integer"
                ]
            }
        },
        {
            "name": "_Prop",
            "fields": {
                "propID": [
                    "integer"
                ],
                "endTime": [
                    "integer"
                ]
            }
        },
        {
            "name": "_Proposal",
            "fields": {
                "endTimeOfVoting": [
                    "integer"
                ],
                "executed": [
                    "boolean"
                ],
                "proposalPassed": [
                    "boolean"
                ],
                "numberOfVotes": [
                    "integer"
                ],
                "votesSupport": [
                    "integer"
                ],
                "votesAgainst": [
                    "integer"
                ],
                "recipient": [
                    "integer"
                ],
                "amount": [
                    "integer"
                ],
                "transactionHash": [
                    "integer"
                ],
                "desc": [
                    "unknown"
                ],
                "fullDescHash": [
                    "unknown"
                ]
            }
        },
        {
            "name": "_Prop",
            "fields": {
                "propID": [
                    "integer"
                ],
                "endTime": [
                    "integer"
                ]
            }
        },
        {
            "name": "_Proposal",
            "fields": {
                "endTimeOfVoting": [
                    "integer"
                ],
                "executed": [
                    "boolean"
                ],
                "proposalPassed": [
                    "boolean"
                ],
                "numberOfVotes": [
                    "integer"
                ],
                "votesSupport": [
                    "integer"
                ],
                "votesAgainst": [
                    "integer"
                ],
                "recipient": [
                    "integer"
                ],
                "amount": [
                    "integer"
                ],
                "transactionHash": [
                    "integer"
                ],
                "desc": [
                    "unknown"
                ],
                "fullDescHash": [
                    "unknown"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x180"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x181"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x182"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "newOwner",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "balances",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "allowed",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "integer"
                ]
            ],
            "init": []
        },
        {
            "name": "ChangeOverPeriod",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "integer"
                ]
            ],
            "init": []
        },
        {
            "name": "ownersIndex",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "ActiveProposals",
            "type": [
                "array",
                "_Prop"
            ],
            "init": []
        },
        {
            "name": "voted",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "integer"
                ]
            ],
            "init": []
        },
        {
            "name": "DEX",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tokensIndex",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "dividends",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "integer"
                ]
            ],
            "init": []
        },
        {
            "name": "ownersbal",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "integer"
                ]
            ],
            "init": []
        },
        {
            "name": "AlreadyReceived",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    [
                        "array",
                        "integer",
                        "boolean"
                    ]
                ]
            ],
            "init": []
        },
        {
            "name": "Proposals",
            "type": [
                "array",
                "_Proposal"
            ],
            "init": []
        },
        {
            "name": "defAgent",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Agents",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0x3c"
            ]
        },
        {
            "name": "tokens",
            "type": [
                "array",
                "integer"
            ],
            "init": [
                "0x17e"
            ]
        },
        {
            "name": "totalSupply_",
            "type": [
                "integer"
            ],
            "init": [
                "0x179"
            ]
        },
        {
            "name": "symbol",
            "type": [
                "unknown"
            ],
            "init": [
                "0x176"
            ]
        },
        {
            "name": "owners",
            "type": [
                "array",
                "integer"
            ],
            "init": [
                "0x17c"
            ]
        },
        {
            "name": "name",
            "type": [
                "unknown"
            ],
            "init": [
                "0x175"
            ]
        },
        {
            "name": "start",
            "type": [
                "integer"
            ],
            "init": [
                "0x4e",
                "0x177"
            ]
        },
        {
            "name": "requisiteMajority",
            "type": [
                "integer"
            ],
            "init": [
                "0x174"
            ]
        },
        {
            "name": "period",
            "type": [
                "integer"
            ],
            "init": [
                "0x53",
                "0x178"
            ]
        },
        {
            "name": "debatingPeriodDuration",
            "type": [
                "integer"
            ],
            "init": [
                "0x173"
            ]
        },
        {
            "name": "multiplier",
            "type": [
                "integer"
            ],
            "init": [
                "0x52"
            ]
        },
        {
            "name": "minimumQuorum",
            "type": [
                "integer"
            ],
            "init": [
                "0x172"
            ]
        },
        {
            "name": "minBalance",
            "type": [
                "integer"
            ],
            "init": [
                "0x51"
            ]
        },
        {
            "name": "initialSupply",
            "type": [
                "integer"
            ],
            "init": [
                "0x50"
            ]
        },
        {
            "name": "decimals",
            "type": [
                "integer"
            ],
            "init": [
                "0x4f"
            ]
        },
        {
            "name": "SafeMath",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "DAppDEXI",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20I",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Ownable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "SDADI",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20Base",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Dividends",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "CommonI",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "DAO",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Agent",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "SDAD",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x3c",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4e",
            "instructions": [
                "start = 0"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4f",
            "instructions": [
                "decimals = 8"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x50",
            "instructions": [
                "initialSupply = 10000000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x51",
            "instructions": [
                "minBalance = 1000000000000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x52",
            "instructions": [
                "multiplier = 100000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x53",
            "instructions": [
                "period = 2592000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x172",
            "instructions": [
                "minimumQuorum = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x173",
            "instructions": [
                "debatingPeriodDuration = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x174",
            "instructions": [
                "requisiteMajority = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x175",
            "instructions": [
                "name = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x176",
            "instructions": [
                "symbol = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x177",
            "instructions": [
                "start = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x178",
            "instructions": [
                "period = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x179",
            "instructions": [
                "totalSupply_ = initialSupply"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17a",
            "instructions": [
                "CLR_0 = balances[U]",
                "REF_1097 = CLR_0",
                "balances[0] = totalSupply_",
                "balances[1] = totalSupply_",
                "balances[2] = totalSupply_",
                "balances[3] = totalSupply_",
                "balances[4] = totalSupply_",
                "balances[5] = totalSupply_",
                "balances[6] = totalSupply_",
                "balances[7] = totalSupply_",
                "balances[8] = totalSupply_",
                "balances[9] = totalSupply_"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17b",
            "instructions": [
                "CLR_1 = ownersIndex[U]",
                "REF_1098 = CLR_1",
                "ownersIndex[0] = true",
                "ownersIndex[1] = true",
                "ownersIndex[2] = true",
                "ownersIndex[3] = true",
                "ownersIndex[4] = true",
                "ownersIndex[5] = true",
                "ownersIndex[6] = true",
                "ownersIndex[7] = true",
                "ownersIndex[8] = true",
                "ownersIndex[9] = true"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17c",
            "instructions": [
                "owners = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17d",
            "instructions": [
                "CLR_2 = balances[U]",
                "REF_1099 = CLR_2",
                "CLR_3 = ChangeOverPeriod[U]",
                "REF_1100 = CLR_3",
                "CLR_4 = REF_1100[1]",
                "REF_1101 = CLR_4",
                "REF_1100[1] = REF_1099"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17e",
            "instructions": [
                "tokens = 0"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17f",
            "instructions": [
                "REF_1102 = NEW_VAL integer",
                "TMP_1477 = REF_1102 - 1",
                "tokensIndex[0] = TMP_1477",
                "tokensIndex[1] = TMP_1477",
                "tokensIndex[2] = TMP_1477",
                "tokensIndex[3] = TMP_1477",
                "tokensIndex[4] = TMP_1477",
                "tokensIndex[5] = TMP_1477",
                "tokensIndex[6] = TMP_1477",
                "tokensIndex[7] = TMP_1477",
                "tokensIndex[8] = TMP_1477",
                "tokensIndex[9] = TMP_1477"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x180",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x181",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x182",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "owner",
            "addrs": [
                "0x2",
                "0x3e",
                "0x171"
            ]
        },
        {
            "name": "allowed",
            "addrs": [
                "0x2",
                "0x40",
                "0x127"
            ]
        },
        {
            "name": "ownersIndex",
            "addrs": [
                "0x2",
                "0x41",
                "0x112",
                "0x120"
            ]
        },
        {
            "name": "owners",
            "addrs": [
                "0x2",
                "0x42",
                "0x43",
                "0x11d",
                "0x12d"
            ]
        },
        {
            "name": "tokens",
            "addrs": [
                "0x2",
                "0x45",
                "0x49",
                "0x4c"
            ]
        },
        {
            "name": "tokensIndex",
            "addrs": [
                "0x2",
                "0x47"
            ]
        },
        {
            "name": "dividends",
            "addrs": [
                "0x2",
                "0x5d",
                "0x5f"
            ]
        },
        {
            "name": "ownersbal",
            "addrs": [
                "0x2",
                "0x64",
                "0x65",
                "0x133",
                "0x137"
            ]
        },
        {
            "name": "balances",
            "addrs": [
                "0x2",
                "0x115",
                "0x117",
                "0x123",
                "0x125"
            ]
        },
        {
            "name": "ChangeOverPeriod",
            "addrs": [
                "0x2",
                "0x119",
                "0x11b",
                "0x129",
                "0x12b"
            ]
        },
        {
            "name": "voted",
            "addrs": [
                "0x2",
                "0x130"
            ]
        },
        {
            "name": "AlreadyReceived",
            "addrs": [
                "0x2",
                "0x135",
                "0x13a"
            ]
        },
        {
            "name": "ActiveProposals",
            "addrs": [
                "0x2",
                "0x13d",
                "0x143",
                "0x149",
                "0x14f",
                "0x156"
            ]
        },
        {
            "name": "Proposals",
            "addrs": [
                "0x2",
                "0x140"
            ]
        },
        {
            "name": "newOwner",
            "addrs": [
                "0x2",
                "0x15d"
            ]
        },
        {
            "name": "multiplier",
            "addrs": [
                "0x2",
                "0x15f"
            ]
        },
        {
            "name": "DEX",
            "addrs": [
                "0x2",
                "0x161"
            ]
        },
        {
            "name": "minimumQuorum",
            "addrs": [
                "0x2",
                "0x163"
            ]
        },
        {
            "name": "debatingPeriodDuration",
            "addrs": [
                "0x2",
                "0x165"
            ]
        },
        {
            "name": "requisiteMajority",
            "addrs": [
                "0x2",
                "0x167"
            ]
        },
        {
            "name": "minBalance",
            "addrs": [
                "0x2",
                "0x169"
            ]
        },
        {
            "name": "name",
            "addrs": [
                "0x2",
                "0x16b"
            ]
        },
        {
            "name": "symbol",
            "addrs": [
                "0x2",
                "0x16d"
            ]
        },
        {
            "name": "period",
            "addrs": [
                "0x2",
                "0x16f"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3e",
            "instructions": [
                "CLR_5 = msg.sender",
                "RTMP_1203 = CLR_5 == newOwner",
                "CONDITION RTMP_1203 0x3d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3d",
            "instructions": [
                "owner = newOwner"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x40",
            "instructions": [
                "CLR_6 = msg.sender",
                "CLR_7 = allowed[CLR_6]",
                "REF_792 = CLR_7",
                "CLR_8 = REF_792[U]",
                "REF_793 = CLR_8",
                "RTMP_1204 = REF_793 == 0",
                "CONDITION RTMP_1204 0x3f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3f",
            "instructions": [
                "CLR_9 = msg.sender",
                "CLR_10 = allowed[CLR_9]",
                "REF_790 = CLR_10",
                "CLR_11 = REF_790[U]",
                "REF_791 = CLR_11",
                "REF_790[0] = U",
                "REF_790[1] = U",
                "REF_790[2] = U",
                "REF_790[3] = U",
                "REF_790[4] = U",
                "REF_790[5] = U",
                "REF_790[6] = U",
                "REF_790[7] = U",
                "REF_790[8] = U",
                "REF_790[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x41",
            "instructions": [
                "CLR_12 = owners[U]",
                "REF_794 = CLR_12",
                "CLR_13 = ownersIndex[REF_794]",
                "REF_795 = CLR_13",
                "ownersIndex[REF_794] = false"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x42",
            "instructions": [
                "CLR_14 = owners[U]",
                "REF_796 = CLR_14",
                "owners[0] = owners",
                "owners[1] = owners",
                "owners[2] = owners",
                "owners[3] = owners",
                "owners[4] = owners",
                "owners[5] = owners",
                "owners[6] = owners",
                "owners[7] = owners",
                "owners[8] = owners",
                "owners[9] = owners"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x43",
            "instructions": [
                "REF_797 = NEW_VAL integer",
                "TMP_1205 = REF_797 - 1",
                "NCV_0 = NEW_VAL integer",
                "owners.length = NCV_0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x45",
            "instructions": [
                "CLR_15 = msg.sender",
                "RTMP_1215 = CLR_15 == DEX",
                "CONDITION RTMP_1215 0x44 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x44",
            "instructions": [
                "tokens = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x47",
            "instructions": [
                "CLR_16 = msg.sender",
                "RTMP_1217 = CLR_16 == DEX",
                "CONDITION RTMP_1217 0x46 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x46",
            "instructions": [
                "REF_806 = NEW_VAL integer",
                "TMP_1216 = REF_806 - 1",
                "tokensIndex[0] = TMP_1216",
                "tokensIndex[1] = TMP_1216",
                "tokensIndex[2] = TMP_1216",
                "tokensIndex[3] = TMP_1216",
                "tokensIndex[4] = TMP_1216",
                "tokensIndex[5] = TMP_1216",
                "tokensIndex[6] = TMP_1216",
                "tokensIndex[7] = TMP_1216",
                "tokensIndex[8] = TMP_1216",
                "tokensIndex[9] = TMP_1216"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x49",
            "instructions": [
                "CLR_17 = msg.sender",
                "RTMP_1218 = CLR_17 == DEX",
                "CONDITION RTMP_1218 0x4a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4a",
            "instructions": [
                "CLR_18 = tokensIndex[U]",
                "REF_809 = CLR_18",
                "CLR_19 = tokens[REF_809]",
                "REF_810 = CLR_19",
                "RTMP_1219 = REF_810 != 0",
                "CONDITION RTMP_1219 0x48 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x48",
            "instructions": [
                "CLR_20 = tokensIndex[U]",
                "REF_807 = CLR_20",
                "CLR_21 = tokens[REF_807]",
                "REF_808 = CLR_21",
                "tokens[REF_807] = tokens"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4c",
            "instructions": [
                "CLR_22 = msg.sender",
                "RTMP_1221 = CLR_22 == DEX",
                "CONDITION RTMP_1221 0x4d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4d",
            "instructions": [
                "CLR_23 = tokensIndex[U]",
                "REF_812 = CLR_23",
                "CLR_24 = tokens[REF_812]",
                "REF_813 = CLR_24",
                "RTMP_1222 = REF_813 != 0",
                "CONDITION RTMP_1222 0x4b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4b",
            "instructions": [
                "REF_811 = NEW_VAL integer",
                "TMP_1220 = REF_811 - 1",
                "NCV_1 = NEW_VAL integer",
                "tokens.length = NCV_1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5d",
            "instructions": [
                "CLR_25 = block.timestamp",
                "TMP_1231 = CLR_25 - start",
                "RTMP_1232 = TMP_1231 > 0",
                "CONDITION RTMP_1232 0x5c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5c",
            "instructions": [
                "CLR_26 = dividends[U]",
                "REF_826 = CLR_26",
                "CLR_27 = tokens[U]",
                "REF_827 = CLR_27",
                "CLR_28 = REF_826[REF_827]",
                "REF_828 = CLR_28",
                "REF_826[REF_827] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5f",
            "instructions": [
                "CLR_29 = block.timestamp",
                "TMP_1233 = CLR_29 - start",
                "RTMP_1234 = TMP_1233 > 0",
                "CONDITION RTMP_1234 0x5e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5e",
            "instructions": [
                "CLR_30 = dividends[U]",
                "REF_829 = CLR_30",
                "CLR_31 = tokens[U]",
                "REF_830 = CLR_31",
                "CLR_32 = REF_829[REF_830]",
                "REF_831 = CLR_32",
                "REF_829[REF_830] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x64",
            "instructions": [
                "CLR_33 = msg.sender",
                "CLR_34 = ownersbal[CLR_33]",
                "REF_840 = CLR_34",
                "CLR_35 = REF_840[U]",
                "REF_841 = CLR_35",
                "REF_840[0] = U",
                "REF_840[1] = U",
                "REF_840[2] = U",
                "REF_840[3] = U",
                "REF_840[4] = U",
                "REF_840[5] = U",
                "REF_840[6] = U",
                "REF_840[7] = U",
                "REF_840[8] = U",
                "REF_840[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x65",
            "instructions": [
                "CLR_36 = msg.sender",
                "CLR_37 = ownersbal[CLR_36]",
                "REF_842 = CLR_37",
                "CLR_38 = REF_842[U]",
                "REF_843 = CLR_38",
                "REF_842[0] = U",
                "REF_842[1] = U",
                "REF_842[2] = U",
                "REF_842[3] = U",
                "REF_842[4] = U",
                "REF_842[5] = U",
                "REF_842[6] = U",
                "REF_842[7] = U",
                "REF_842[8] = U",
                "REF_842[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x112",
            "instructions": [
                "REF_1018 = NEW_VAL integer",
                "RTMP_1403 = 0 < REF_1018",
                "RTMP_1404 = 0 < REF_1018",
                "RTMP_1405 = RTMP_1403 || RTMP_1404",
                "CONDITION RTMP_1405 0x1 0x113"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x113",
            "instructions": [
                "CLR_39 = ownersIndex[U]",
                "REF_1019 = CLR_39",
                "RTMP_1406 = REF_1019 == false",
                "CONDITION RTMP_1406 0x111 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x111",
            "instructions": [
                "CLR_40 = ownersIndex[U]",
                "REF_1017 = CLR_40",
                "ownersIndex[0] = true",
                "ownersIndex[1] = true",
                "ownersIndex[2] = true",
                "ownersIndex[3] = true",
                "ownersIndex[4] = true",
                "ownersIndex[5] = true",
                "ownersIndex[6] = true",
                "ownersIndex[7] = true",
                "ownersIndex[8] = true",
                "ownersIndex[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x115",
            "instructions": [
                "REF_1021 = NEW_VAL integer",
                "RTMP_1407 = 0 < REF_1021",
                "RTMP_1408 = 0 < REF_1021",
                "RTMP_1409 = RTMP_1407 || RTMP_1408",
                "CONDITION RTMP_1409 0x1 0x114"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x114",
            "instructions": [
                "CLR_41 = msg.sender",
                "CLR_42 = balances[CLR_41]",
                "REF_1020 = CLR_42",
                "CLR_43 = msg.sender",
                "balances[CLR_43] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x117",
            "instructions": [
                "REF_1023 = NEW_VAL integer",
                "RTMP_1410 = 0 < REF_1023",
                "RTMP_1411 = 0 < REF_1023",
                "RTMP_1412 = RTMP_1410 || RTMP_1411",
                "CONDITION RTMP_1412 0x1 0x116"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x116",
            "instructions": [
                "CLR_44 = balances[U]",
                "REF_1022 = CLR_44",
                "balances[0] = U",
                "balances[1] = U",
                "balances[2] = U",
                "balances[3] = U",
                "balances[4] = U",
                "balances[5] = U",
                "balances[6] = U",
                "balances[7] = U",
                "balances[8] = U",
                "balances[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x119",
            "instructions": [
                "REF_1026 = NEW_VAL integer",
                "RTMP_1413 = 0 < REF_1026",
                "RTMP_1414 = 0 < REF_1026",
                "RTMP_1415 = RTMP_1413 || RTMP_1414",
                "CONDITION RTMP_1415 0x1 0x118"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x118",
            "instructions": [
                "CLR_45 = msg.sender",
                "CLR_46 = ChangeOverPeriod[CLR_45]",
                "REF_1024 = CLR_46",
                "CLR_47 = REF_1024[U]",
                "REF_1025 = CLR_47",
                "REF_1024[0] = U",
                "REF_1024[1] = U",
                "REF_1024[2] = U",
                "REF_1024[3] = U",
                "REF_1024[4] = U",
                "REF_1024[5] = U",
                "REF_1024[6] = U",
                "REF_1024[7] = U",
                "REF_1024[8] = U",
                "REF_1024[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11b",
            "instructions": [
                "REF_1029 = NEW_VAL integer",
                "RTMP_1416 = 0 < REF_1029",
                "RTMP_1417 = 0 < REF_1029",
                "RTMP_1418 = RTMP_1416 || RTMP_1417",
                "CONDITION RTMP_1418 0x1 0x11a"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11a",
            "instructions": [
                "CLR_48 = ChangeOverPeriod[U]",
                "REF_1027 = CLR_48",
                "CLR_49 = REF_1027[U]",
                "REF_1028 = CLR_49",
                "REF_1027[0] = U",
                "REF_1027[1] = U",
                "REF_1027[2] = U",
                "REF_1027[3] = U",
                "REF_1027[4] = U",
                "REF_1027[5] = U",
                "REF_1027[6] = U",
                "REF_1027[7] = U",
                "REF_1027[8] = U",
                "REF_1027[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11d",
            "instructions": [
                "REF_1030 = NEW_VAL integer",
                "RTMP_1419 = 0 < REF_1030",
                "RTMP_1420 = 0 < REF_1030",
                "RTMP_1421 = RTMP_1419 || RTMP_1420",
                "CONDITION RTMP_1421 0x1 0x11e"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11e",
            "instructions": [
                "CLR_50 = ownersIndex[U]",
                "REF_1031 = CLR_50",
                "RTMP_1422 = REF_1031 == false",
                "CONDITION RTMP_1422 0x11c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11c",
            "instructions": [
                "owners = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x120",
            "instructions": [
                "REF_1033 = NEW_VAL integer",
                "RTMP_1423 = 0 < REF_1033",
                "RTMP_1424 = 0 < REF_1033",
                "RTMP_1425 = RTMP_1423 || RTMP_1424",
                "CONDITION RTMP_1425 0x1 0x121"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x121",
            "instructions": [
                "CLR_51 = ownersIndex[U]",
                "REF_1034 = CLR_51",
                "RTMP_1426 = REF_1034 == false",
                "CONDITION RTMP_1426 0x11f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11f",
            "instructions": [
                "CLR_52 = ownersIndex[U]",
                "REF_1032 = CLR_52",
                "ownersIndex[0] = true",
                "ownersIndex[1] = true",
                "ownersIndex[2] = true",
                "ownersIndex[3] = true",
                "ownersIndex[4] = true",
                "ownersIndex[5] = true",
                "ownersIndex[6] = true",
                "ownersIndex[7] = true",
                "ownersIndex[8] = true",
                "ownersIndex[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x123",
            "instructions": [
                "REF_1036 = NEW_VAL integer",
                "RTMP_1427 = 0 < REF_1036",
                "RTMP_1428 = 0 < REF_1036",
                "RTMP_1429 = RTMP_1427 || RTMP_1428",
                "CONDITION RTMP_1429 0x1 0x122"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x122",
            "instructions": [
                "CLR_53 = balances[U]",
                "REF_1035 = CLR_53",
                "balances[0] = U",
                "balances[1] = U",
                "balances[2] = U",
                "balances[3] = U",
                "balances[4] = U",
                "balances[5] = U",
                "balances[6] = U",
                "balances[7] = U",
                "balances[8] = U",
                "balances[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x125",
            "instructions": [
                "REF_1038 = NEW_VAL integer",
                "RTMP_1430 = 0 < REF_1038",
                "RTMP_1431 = 0 < REF_1038",
                "RTMP_1432 = RTMP_1430 || RTMP_1431",
                "CONDITION RTMP_1432 0x1 0x124"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x124",
            "instructions": [
                "CLR_54 = balances[U]",
                "REF_1037 = CLR_54",
                "balances[0] = U",
                "balances[1] = U",
                "balances[2] = U",
                "balances[3] = U",
                "balances[4] = U",
                "balances[5] = U",
                "balances[6] = U",
                "balances[7] = U",
                "balances[8] = U",
                "balances[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x127",
            "instructions": [
                "REF_1041 = NEW_VAL integer",
                "RTMP_1433 = 0 < REF_1041",
                "RTMP_1434 = 0 < REF_1041",
                "RTMP_1435 = RTMP_1433 || RTMP_1434",
                "CONDITION RTMP_1435 0x1 0x126"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x126",
            "instructions": [
                "CLR_55 = allowed[U]",
                "REF_1039 = CLR_55",
                "CLR_56 = msg.sender",
                "CLR_57 = REF_1039[CLR_56]",
                "REF_1040 = CLR_57",
                "CLR_58 = msg.sender",
                "REF_1039[CLR_58] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x129",
            "instructions": [
                "REF_1044 = NEW_VAL integer",
                "RTMP_1436 = 0 < REF_1044",
                "RTMP_1437 = 0 < REF_1044",
                "RTMP_1438 = RTMP_1436 || RTMP_1437",
                "CONDITION RTMP_1438 0x1 0x128"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x128",
            "instructions": [
                "CLR_59 = ChangeOverPeriod[U]",
                "REF_1042 = CLR_59",
                "CLR_60 = REF_1042[U]",
                "REF_1043 = CLR_60",
                "REF_1042[0] = U",
                "REF_1042[1] = U",
                "REF_1042[2] = U",
                "REF_1042[3] = U",
                "REF_1042[4] = U",
                "REF_1042[5] = U",
                "REF_1042[6] = U",
                "REF_1042[7] = U",
                "REF_1042[8] = U",
                "REF_1042[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12b",
            "instructions": [
                "REF_1047 = NEW_VAL integer",
                "RTMP_1439 = 0 < REF_1047",
                "RTMP_1440 = 0 < REF_1047",
                "RTMP_1441 = RTMP_1439 || RTMP_1440",
                "CONDITION RTMP_1441 0x1 0x12a"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12a",
            "instructions": [
                "CLR_61 = ChangeOverPeriod[U]",
                "REF_1045 = CLR_61",
                "CLR_62 = REF_1045[U]",
                "REF_1046 = CLR_62",
                "REF_1045[0] = U",
                "REF_1045[1] = U",
                "REF_1045[2] = U",
                "REF_1045[3] = U",
                "REF_1045[4] = U",
                "REF_1045[5] = U",
                "REF_1045[6] = U",
                "REF_1045[7] = U",
                "REF_1045[8] = U",
                "REF_1045[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12d",
            "instructions": [
                "REF_1048 = NEW_VAL integer",
                "RTMP_1442 = 0 < REF_1048",
                "RTMP_1443 = 0 < REF_1048",
                "RTMP_1444 = RTMP_1442 || RTMP_1443",
                "CONDITION RTMP_1444 0x1 0x12e"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12e",
            "instructions": [
                "CLR_63 = ownersIndex[U]",
                "REF_1049 = CLR_63",
                "RTMP_1445 = REF_1049 == false",
                "CONDITION RTMP_1445 0x12c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12c",
            "instructions": [
                "owners = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x130",
            "instructions": [
                "CLR_64 = msg.sender",
                "CLR_65 = balances[CLR_64]",
                "REF_1052 = CLR_65",
                "RTMP_1446 = REF_1052 > 0",
                "CONDITION RTMP_1446 0x131 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x131",
            "instructions": [
                "CLR_66 = Proposals[U]",
                "REF_1053 = CLR_66",
                "CLR_67 = REF_1053.endTimeOfVoting",
                "REF_1054 = CLR_67",
                "RTMP_1447 = now <= REF_1054",
                "CONDITION RTMP_1447 0x12f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12f",
            "instructions": [
                "CLR_68 = voted[U]",
                "REF_1050 = CLR_68",
                "CLR_69 = msg.sender",
                "CLR_70 = REF_1050[CLR_69]",
                "REF_1051 = CLR_70",
                "CLR_71 = msg.sender",
                "REF_1050[CLR_71] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x133",
            "instructions": [
                "CLR_72 = dividends[U]",
                "REF_1058 = CLR_72",
                "CLR_73 = REF_1058[U]",
                "REF_1059 = CLR_73",
                "RTMP_1448 = REF_1059 > 0",
                "CONDITION RTMP_1448 0x132 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x132",
            "instructions": [
                "CLR_74 = owners[U]",
                "REF_1055 = CLR_74",
                "CLR_75 = ownersbal[REF_1055]",
                "REF_1056 = CLR_75",
                "CLR_76 = REF_1056[U]",
                "REF_1057 = CLR_76",
                "REF_1056[0] = U",
                "REF_1056[1] = U",
                "REF_1056[2] = U",
                "REF_1056[3] = U",
                "REF_1056[4] = U",
                "REF_1056[5] = U",
                "REF_1056[6] = U",
                "REF_1056[7] = U",
                "REF_1056[8] = U",
                "REF_1056[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x135",
            "instructions": [
                "CLR_77 = dividends[U]",
                "REF_1064 = CLR_77",
                "CLR_78 = REF_1064[U]",
                "REF_1065 = CLR_78",
                "RTMP_1449 = REF_1065 > 0",
                "CONDITION RTMP_1449 0x134 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x134",
            "instructions": [
                "CLR_79 = AlreadyReceived[U]",
                "REF_1060 = CLR_79",
                "CLR_80 = REF_1060[U]",
                "REF_1061 = CLR_80",
                "CLR_81 = owners[U]",
                "REF_1062 = CLR_81",
                "CLR_82 = REF_1061[REF_1062]",
                "REF_1063 = CLR_82",
                "REF_1061[REF_1062] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x137",
            "instructions": [
                "CLR_83 = dividends[U]",
                "REF_1068 = CLR_83",
                "CLR_84 = REF_1068[U]",
                "REF_1069 = CLR_84",
                "RTMP_1450 = REF_1069 > 0",
                "CONDITION RTMP_1450 0x138 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x138",
            "instructions": [
                "CLR_85 = AlreadyReceived[U]",
                "REF_1070 = CLR_85",
                "CLR_86 = REF_1070[U]",
                "REF_1071 = CLR_86",
                "CLR_87 = msg.sender",
                "CLR_88 = REF_1071[CLR_87]",
                "REF_1072 = CLR_88",
                "RTMP_1451 = ! REF_1072",
                "CONDITION RTMP_1451 0x136 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x136",
            "instructions": [
                "CLR_89 = msg.sender",
                "CLR_90 = ownersbal[CLR_89]",
                "REF_1066 = CLR_90",
                "CLR_91 = REF_1066[U]",
                "REF_1067 = CLR_91",
                "REF_1066[0] = U",
                "REF_1066[1] = U",
                "REF_1066[2] = U",
                "REF_1066[3] = U",
                "REF_1066[4] = U",
                "REF_1066[5] = U",
                "REF_1066[6] = U",
                "REF_1066[7] = U",
                "REF_1066[8] = U",
                "REF_1066[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13a",
            "instructions": [
                "CLR_92 = dividends[U]",
                "REF_1076 = CLR_92",
                "CLR_93 = REF_1076[U]",
                "REF_1077 = CLR_93",
                "RTMP_1452 = REF_1077 > 0",
                "CONDITION RTMP_1452 0x13b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13b",
            "instructions": [
                "CLR_94 = AlreadyReceived[U]",
                "REF_1078 = CLR_94",
                "CLR_95 = REF_1078[U]",
                "REF_1079 = CLR_95",
                "CLR_96 = msg.sender",
                "CLR_97 = REF_1079[CLR_96]",
                "REF_1080 = CLR_97",
                "RTMP_1453 = ! REF_1080",
                "CONDITION RTMP_1453 0x139 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x139",
            "instructions": [
                "CLR_98 = AlreadyReceived[U]",
                "REF_1073 = CLR_98",
                "CLR_99 = REF_1073[U]",
                "REF_1074 = CLR_99",
                "CLR_100 = msg.sender",
                "CLR_101 = REF_1074[CLR_100]",
                "REF_1075 = CLR_101",
                "CLR_102 = msg.sender",
                "REF_1074[CLR_102] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13d",
            "instructions": [
                "CLR_103 = msg.sender",
                "CLR_104 = balances[CLR_103]",
                "REF_1081 = CLR_104",
                "RTMP_1454 = REF_1081 > 0",
                "CONDITION RTMP_1454 0x13e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13e",
            "instructions": [
                "CLR_105 = msg.sender",
                "CLR_106 = balances[CLR_105]",
                "REF_1082 = CLR_106",
                "RTMP_1455 = REF_1082 > minBalance",
                "CONDITION RTMP_1455 0x13c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13c",
            "instructions": [
                "ActiveProposals = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x140",
            "instructions": [
                "CLR_107 = msg.sender",
                "CLR_108 = balances[CLR_107]",
                "REF_1083 = CLR_108",
                "RTMP_1456 = REF_1083 > 0",
                "CONDITION RTMP_1456 0x141 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x141",
            "instructions": [
                "CLR_109 = msg.sender",
                "CLR_110 = balances[CLR_109]",
                "REF_1084 = CLR_110",
                "RTMP_1457 = REF_1084 > minBalance",
                "CONDITION RTMP_1457 0x13f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13f",
            "instructions": [
                "Proposals = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x143",
            "instructions": [
                "CLR_111 = Proposals[U]",
                "REF_1085 = CLR_111",
                "CLR_112 = REF_1085.endTimeOfVoting",
                "REF_1086 = CLR_112",
                "RTMP_1458 = now > REF_1086",
                "CONDITION RTMP_1458 0x144 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x144",
            "instructions": [
                "CLR_113 = Proposals[U]",
                "REF_1087 = CLR_113",
                "CLR_114 = REF_1087.executed",
                "REF_1088 = CLR_114",
                "RTMP_1459 = ! REF_1088",
                "CONDITION RTMP_1459 0x145 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x145",
            "instructions": [
                "CLR_115 = Proposals[U]",
                "REF_1089 = CLR_115",
                "CLR_116 = REF_1089.numberOfVotes",
                "REF_1090 = CLR_116",
                "RTMP_1460 = REF_1090 >= minimumQuorum",
                "CONDITION RTMP_1460 0x146 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x146",
            "instructions": [
                "CLR_117 = ActiveProposals[U]",
                "REF_799 = CLR_117",
                "CLR_118 = REF_799.endTime",
                "REF_800 = CLR_118",
                "RTMP_1206 = REF_800 < now",
                "CONDITION RTMP_1206 0x147 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x147",
            "instructions": [
                "REF_801 = NEW_VAL integer",
                "RTMP_1207 = 0 < REF_801",
                "RTMP_1208 = 0 < REF_801",
                "RTMP_1209 = RTMP_1207 || RTMP_1208",
                "CONDITION RTMP_1209 0x142 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x142",
            "instructions": [
                "CLR_119 = ActiveProposals[U]",
                "REF_798 = CLR_119",
                "ActiveProposals[0] = ActiveProposals",
                "ActiveProposals[1] = ActiveProposals",
                "ActiveProposals[2] = ActiveProposals",
                "ActiveProposals[3] = ActiveProposals",
                "ActiveProposals[4] = ActiveProposals",
                "ActiveProposals[5] = ActiveProposals",
                "ActiveProposals[6] = ActiveProposals",
                "ActiveProposals[7] = ActiveProposals",
                "ActiveProposals[8] = ActiveProposals",
                "ActiveProposals[9] = ActiveProposals"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x149",
            "instructions": [
                "CLR_120 = Proposals[U]",
                "REF_1091 = CLR_120",
                "CLR_121 = REF_1091.endTimeOfVoting",
                "REF_1092 = CLR_121",
                "RTMP_1461 = now > REF_1092",
                "CONDITION RTMP_1461 0x14a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14a",
            "instructions": [
                "CLR_122 = Proposals[U]",
                "REF_1093 = CLR_122",
                "CLR_123 = REF_1093.executed",
                "REF_1094 = CLR_123",
                "RTMP_1462 = ! REF_1094",
                "CONDITION RTMP_1462 0x14b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14b",
            "instructions": [
                "CLR_124 = Proposals[U]",
                "REF_1095 = CLR_124",
                "CLR_125 = REF_1095.numberOfVotes",
                "REF_1096 = CLR_125",
                "RTMP_1463 = REF_1096 >= minimumQuorum",
                "CONDITION RTMP_1463 0x14c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14c",
            "instructions": [
                "CLR_126 = ActiveProposals[U]",
                "REF_803 = CLR_126",
                "CLR_127 = REF_803.endTime",
                "REF_804 = CLR_127",
                "RTMP_1211 = REF_804 < now",
                "CONDITION RTMP_1211 0x14d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14d",
            "instructions": [
                "REF_805 = NEW_VAL integer",
                "RTMP_1212 = 0 < REF_805",
                "RTMP_1213 = 0 < REF_805",
                "RTMP_1214 = RTMP_1212 || RTMP_1213",
                "CONDITION RTMP_1214 0x148 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x148",
            "instructions": [
                "REF_802 = NEW_VAL integer",
                "TMP_1210 = REF_802 - 1",
                "NCV_2 = NEW_VAL integer",
                "ActiveProposals.length = NCV_2"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14f",
            "instructions": [
                "CLR_128 = Proposals[U]",
                "REF_1085 = CLR_128",
                "CLR_129 = REF_1085.endTimeOfVoting",
                "REF_1086 = CLR_129",
                "RTMP_1458 = now > REF_1086",
                "CONDITION RTMP_1458 0x150 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x150",
            "instructions": [
                "CLR_130 = Proposals[U]",
                "REF_1087 = CLR_130",
                "CLR_131 = REF_1087.executed",
                "REF_1088 = CLR_131",
                "RTMP_1459 = ! REF_1088",
                "CONDITION RTMP_1459 0x151 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x151",
            "instructions": [
                "CLR_132 = Proposals[U]",
                "REF_1089 = CLR_132",
                "CLR_133 = REF_1089.numberOfVotes",
                "REF_1090 = CLR_133",
                "RTMP_1460 = REF_1090 >= minimumQuorum",
                "CONDITION RTMP_1460 0x152 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x152",
            "instructions": [
                "CLR_134 = ActiveProposals[U]",
                "REF_799 = CLR_134",
                "CLR_135 = REF_799.endTime",
                "REF_800 = CLR_135",
                "RTMP_1206 = REF_800 < now",
                "CONDITION RTMP_1206 0x153 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x153",
            "instructions": [
                "REF_801 = NEW_VAL integer",
                "RTMP_1207 = 0 < REF_801",
                "RTMP_1208 = 0 < REF_801",
                "RTMP_1209 = RTMP_1207 || RTMP_1208",
                "CONDITION RTMP_1209 0x154 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x154",
            "instructions": [
                "CLR_136 = msg.sender",
                "RTMP_1464 = CLR_136 == owner",
                "CONDITION RTMP_1464 0x14e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14e",
            "instructions": [
                "CLR_137 = ActiveProposals[U]",
                "REF_798 = CLR_137",
                "ActiveProposals[0] = ActiveProposals",
                "ActiveProposals[1] = ActiveProposals",
                "ActiveProposals[2] = ActiveProposals",
                "ActiveProposals[3] = ActiveProposals",
                "ActiveProposals[4] = ActiveProposals",
                "ActiveProposals[5] = ActiveProposals",
                "ActiveProposals[6] = ActiveProposals",
                "ActiveProposals[7] = ActiveProposals",
                "ActiveProposals[8] = ActiveProposals",
                "ActiveProposals[9] = ActiveProposals"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x156",
            "instructions": [
                "CLR_138 = Proposals[U]",
                "REF_1091 = CLR_138",
                "CLR_139 = REF_1091.endTimeOfVoting",
                "REF_1092 = CLR_139",
                "RTMP_1461 = now > REF_1092",
                "CONDITION RTMP_1461 0x157 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x157",
            "instructions": [
                "CLR_140 = Proposals[U]",
                "REF_1093 = CLR_140",
                "CLR_141 = REF_1093.executed",
                "REF_1094 = CLR_141",
                "RTMP_1462 = ! REF_1094",
                "CONDITION RTMP_1462 0x158 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x158",
            "instructions": [
                "CLR_142 = Proposals[U]",
                "REF_1095 = CLR_142",
                "CLR_143 = REF_1095.numberOfVotes",
                "REF_1096 = CLR_143",
                "RTMP_1463 = REF_1096 >= minimumQuorum",
                "CONDITION RTMP_1463 0x159 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x159",
            "instructions": [
                "CLR_144 = ActiveProposals[U]",
                "REF_803 = CLR_144",
                "CLR_145 = REF_803.endTime",
                "REF_804 = CLR_145",
                "RTMP_1211 = REF_804 < now",
                "CONDITION RTMP_1211 0x15a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15a",
            "instructions": [
                "REF_805 = NEW_VAL integer",
                "RTMP_1212 = 0 < REF_805",
                "RTMP_1213 = 0 < REF_805",
                "RTMP_1214 = RTMP_1212 || RTMP_1213",
                "CONDITION RTMP_1214 0x15b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15b",
            "instructions": [
                "CLR_146 = msg.sender",
                "RTMP_1465 = CLR_146 == owner",
                "CONDITION RTMP_1465 0x155 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x155",
            "instructions": [
                "REF_802 = NEW_VAL integer",
                "TMP_1210 = REF_802 - 1",
                "NCV_3 = NEW_VAL integer",
                "ActiveProposals.length = NCV_3"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15d",
            "instructions": [
                "CLR_147 = msg.sender",
                "RTMP_1466 = CLR_147 == owner",
                "CONDITION RTMP_1466 0x15c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15c",
            "instructions": [
                "newOwner = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15f",
            "instructions": [
                "CLR_148 = msg.sender",
                "RTMP_1467 = CLR_148 == owner",
                "CONDITION RTMP_1467 0x15e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15e",
            "instructions": [
                "multiplier = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x161",
            "instructions": [
                "CLR_149 = msg.sender",
                "RTMP_1468 = CLR_149 == owner",
                "CONDITION RTMP_1468 0x160 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x160",
            "instructions": [
                "DEX = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x163",
            "instructions": [
                "CLR_150 = msg.sender",
                "RTMP_1469 = CLR_150 == owner",
                "CONDITION RTMP_1469 0x162 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x162",
            "instructions": [
                "minimumQuorum = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x165",
            "instructions": [
                "CLR_151 = msg.sender",
                "RTMP_1470 = CLR_151 == owner",
                "CONDITION RTMP_1470 0x164 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x164",
            "instructions": [
                "debatingPeriodDuration = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x167",
            "instructions": [
                "CLR_152 = msg.sender",
                "RTMP_1471 = CLR_152 == owner",
                "CONDITION RTMP_1471 0x166 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x166",
            "instructions": [
                "requisiteMajority = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x169",
            "instructions": [
                "CLR_153 = msg.sender",
                "RTMP_1472 = CLR_153 == owner",
                "CONDITION RTMP_1472 0x168 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x168",
            "instructions": [
                "minBalance = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16b",
            "instructions": [
                "CLR_154 = msg.sender",
                "RTMP_1473 = CLR_154 == owner",
                "CONDITION RTMP_1473 0x16a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16a",
            "instructions": [
                "name = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16d",
            "instructions": [
                "CLR_155 = msg.sender",
                "RTMP_1474 = CLR_155 == owner",
                "CONDITION RTMP_1474 0x16c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16c",
            "instructions": [
                "symbol = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16f",
            "instructions": [
                "CLR_156 = msg.sender",
                "RTMP_1475 = CLR_156 == owner",
                "CONDITION RTMP_1475 0x16e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16e",
            "instructions": [
                "period = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x171",
            "instructions": [
                "CLR_157 = msg.sender",
                "RTMP_1476 = CLR_157 == owner",
                "CONDITION RTMP_1476 0x170 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x170",
            "instructions": [
                "CLR_158 = this.address",
                "owner = CLR_158"
            ]
        }
    ],
    "root_addr": "0x188",
    "dest_addrs": [],
    "normal_blocks": [
        {
            "scope": "executeProposal",
            "addr": "0x183",
            "instructions": [
                "CLR_159 = p.recipient",
                "REF_700 = CLR_159",
                "CLR_160 = p.amount",
                "REF_703 = CLR_160",
                "ATTACK",
                "TMP_925 = NEW_VAL boolean",
                "JUMP 0x184"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x185",
            "instructions": [
                "CLR_161 = Proposals[_proposalID]",
                "REF_691 = CLR_161",
                "p = REF_691",
                "CLR_162 = p.endTimeOfVoting",
                "REF_692 = CLR_162",
                "TMP_913 = now > REF_692",
                "CLR_163 = p.executed",
                "REF_693 = CLR_163",
                "TMP_914 = ! REF_693",
                "TMP_915 = TMP_913 && TMP_914",
                "CLR_164 = p.transactionHash",
                "REF_694 = CLR_164",
                "CLR_165 = p.recipient",
                "REF_696 = CLR_165",
                "CLR_166 = p.amount",
                "REF_697 = CLR_166",
                "TMP_916 = NEW_VAL integer",
                "TMP_917 = CALL1 keccak TMP_916",
                "TMP_918 = REF_694 == TMP_917",
                "TMP_919 = TMP_915 && TMP_918",
                "CLR_167 = p.numberOfVotes",
                "REF_698 = CLR_167",
                "TMP_920 = REF_698 >= minimumQuorum",
                "TMP_921 = TMP_919 && TMP_920",
                "CONDITION TMP_921 0x185_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x185_r0",
            "instructions": [
                "JUMP 0x186"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x186",
            "instructions": [
                "CLR_168 = p.votesSupport",
                "REF_699 = CLR_168",
                "TMP_923 = REF_699 > requisiteMajority",
                "CONDITION TMP_923 0x183 0x187"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x188",
            "instructions": [
                "NOP",
                "_transactionByteCode = NEW_VAL integer",
                "_propID = NEW_VAL integer",
                "p = NEW_VAL _Proposal",
                "k = NEW_VAL integer",
                "_proposalID = NEW_VAL integer",
                "JUMP 0x185"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x184",
            "instructions": [
                "NOP",
                "x = NEW_VAL integer",
                "N = NEW_VAL integer",
                "lock = NEW_VAL integer",
                "z = NEW_VAL integer",
                "y = NEW_VAL integer",
                "y = NEW_VAL integer",
                "_to = NEW_VAL integer",
                "z = NEW_VAL integer",
                "_value = NEW_VAL integer",
                "k = NEW_VAL integer",
                "x = NEW_VAL integer",
                "JUMP 0x189"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x189",
            "instructions": [
                "TMP_707 = 0",
                "TMP_708 = _to != TMP_707",
                "CONDITION TMP_708 0x189_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x189_r0",
            "instructions": [
                "JUMP 0x18a"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x18a",
            "instructions": [
                "lock = 0",
                "k = 0",
                "JUMP 0x18b"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x18b",
            "instructions": [
                "NOP",
                "REF_494 = LENGTH ActiveProposals",
                "TMP_710 = k < REF_494",
                "CONDITION TMP_710 0x18c 0x18d"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x18c",
            "instructions": [
                "CLR_169 = ActiveProposals[k]",
                "REF_495 = CLR_169",
                "CLR_170 = REF_495.endTime",
                "REF_496 = CLR_170",
                "TMP_711 = REF_496 > now",
                "CONDITION TMP_711 0x18e 0x187"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x18d",
            "instructions": [
                "NOP",
                "JUMP 0x18f"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x190",
            "instructions": [
                "TMP_715 = TMP_714 >= _value",
                "CONDITION TMP_715 0x190_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x190_r0",
            "instructions": [
                "JUMP 0x191"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x191",
            "instructions": [
                "CLR_171 = ownersIndex[_to]",
                "REF_506 = CLR_171",
                "TMP_717 = REF_506 == false",
                "TMP_718 = _value > 0",
                "TMP_719 = TMP_717 && TMP_718",
                "CONDITION TMP_719 0x192 0x187"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x192",
            "instructions": [
                "CLR_172 = ownersIndex[_to]",
                "REF_507 = CLR_172",
                "ownersIndex[_to] = true",
                "NOP",
                "TMP_720 = LENGTH owners",
                "JUMP 0x193"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x193",
            "instructions": [
                "NOP",
                "JUMP 0x194"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x195",
            "instructions": [
                "balances[_to] = TMP_722",
                "N = 1",
                "CLR_173 = block.timestamp",
                "TMP_723 = CLR_173 > start",
                "CONDITION TMP_723 0x196 0x187"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x196",
            "instructions": [
                "CLR_174 = block.timestamp",
                "TMP_724 = CLR_174 - start",
                "TMP_725 = TMP_724 \/ period",
                "TMP_726 = TMP_725 + 1",
                "N = TMP_726",
                "JUMP 0x197"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x197",
            "instructions": [
                "NOP",
                "JUMP 0x198"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x198",
            "instructions": [
                "CLR_175 = msg.sender",
                "CLR_176 = ChangeOverPeriod[CLR_175]",
                "REF_513 = CLR_176",
                "CLR_177 = REF_513[N]",
                "REF_514 = CLR_177",
                "CLR_178 = msg.sender",
                "CLR_179 = ChangeOverPeriod[CLR_178]",
                "REF_515 = CLR_179",
                "CLR_180 = REF_515[N]",
                "REF_516 = CLR_180",
                "TMP_727 = NEW_VAL unknown",
                "TMP_728 = REF_516 - TMP_727",
                "REF_513[N] = TMP_728",
                "CLR_181 = ChangeOverPeriod[_to]",
                "REF_517 = CLR_181",
                "CLR_182 = REF_517[N]",
                "REF_518 = CLR_182",
                "CLR_183 = ChangeOverPeriod[_to]",
                "REF_519 = CLR_183",
                "CLR_184 = REF_519[N]",
                "REF_520 = CLR_184",
                "TMP_729 = NEW_VAL unknown",
                "TMP_730 = REF_520 + TMP_729",
                "REF_517[N] = TMP_730",
                "NOP",
                "JUMP 0x199"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x199",
            "instructions": [
                "NOP",
                "JUMP 0x19a"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x18e",
            "instructions": [
                "CLR_185 = ActiveProposals[k]",
                "REF_497 = CLR_185",
                "CLR_186 = REF_497.propID",
                "REF_498 = CLR_186",
                "CLR_187 = voted[REF_498]",
                "REF_499 = CLR_187",
                "CLR_188 = msg.sender",
                "CLR_189 = REF_499[CLR_188]",
                "REF_500 = CLR_189",
                "TMP_712 = lock < REF_500",
                "CONDITION TMP_712 0x19b 0x187"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x19c",
            "instructions": [
                "NOP",
                "JUMP 0x19d"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x19d",
            "instructions": [
                "TMP_713 = k",
                "k = k + 1",
                "JUMP 0x18b"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x19b",
            "instructions": [
                "CLR_190 = ActiveProposals[k]",
                "REF_501 = CLR_190",
                "CLR_191 = REF_501.propID",
                "REF_502 = CLR_191",
                "CLR_192 = voted[REF_502]",
                "REF_503 = CLR_192",
                "CLR_193 = msg.sender",
                "CLR_194 = REF_503[CLR_193]",
                "REF_504 = CLR_194",
                "lock = REF_504",
                "JUMP 0x19e"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x19e",
            "instructions": [
                "NOP",
                "JUMP 0x19c"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x19f",
            "instructions": [
                "NOP",
                "JUMP 0x1a0"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a0",
            "instructions": [
                "TMP_669 = y <= x",
                "CONDITION TMP_669 0x1a0_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a0_r0",
            "instructions": [
                "JUMP 0x1a1"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a1",
            "instructions": [
                "TMP_671 = x - y",
                "z = TMP_671",
                "TMP_1104 = z",
                "JUMP 0x1a2"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x18f",
            "instructions": [
                "CLR_195 = msg.sender",
                "CLR_196 = balances[CLR_195]",
                "REF_505 = CLR_196",
                "x = REF_505",
                "y = lock",
                "JUMP 0x19f"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a2",
            "instructions": [
                "TMP_714 = TMP_1104",
                "JUMP 0x190"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a3",
            "instructions": [
                "NOP",
                "JUMP 0x1a4"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a4",
            "instructions": [
                "TMP_669 = y <= x",
                "CONDITION TMP_669 0x1a4_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a4_r0",
            "instructions": [
                "JUMP 0x1a5"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a5",
            "instructions": [
                "TMP_671 = x - y",
                "z = TMP_671",
                "TMP_1104 = z",
                "JUMP 0x1a6"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x194",
            "instructions": [
                "CLR_197 = msg.sender",
                "CLR_198 = balances[CLR_197]",
                "REF_509 = CLR_198",
                "CLR_199 = msg.sender",
                "CLR_200 = balances[CLR_199]",
                "REF_510 = CLR_200",
                "x = REF_510",
                "y = _value",
                "JUMP 0x1a3"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a6",
            "instructions": [
                "TMP_721 = TMP_1104",
                "JUMP 0x1a7"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a8",
            "instructions": [
                "NOP",
                "JUMP 0x1a9"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a9",
            "instructions": [
                "TMP_672 = x + y",
                "z = TMP_672",
                "TMP_673 = z >= x",
                "CONDITION TMP_673 0x1a9_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a9_r0",
            "instructions": [
                "JUMP 0x1aa"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1aa",
            "instructions": [
                "TMP_1105 = z",
                "JUMP 0x1ab"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1a7",
            "instructions": [
                "CLR_201 = msg.sender",
                "balances[CLR_201] = TMP_721",
                "CLR_202 = balances[_to]",
                "REF_511 = CLR_202",
                "CLR_203 = balances[_to]",
                "REF_512 = CLR_203",
                "x = REF_512",
                "y = _value",
                "JUMP 0x1a8"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x1ab",
            "instructions": [
                "TMP_722 = TMP_1105",
                "JUMP 0x195"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1ac",
            "instructions": [
                "NOP",
                "JUMP 0x1ad"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x19a",
            "instructions": [
                "CONDITION TMP_925 0x19a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x19a_r0",
            "instructions": [
                "JUMP 0x1ae"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1ae",
            "instructions": [
                "CLR_204 = p.proposalPassed",
                "REF_704 = CLR_204",
                "p.proposalPassed = true",
                "JUMP 0x1ac"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1af",
            "instructions": [
                "NOP",
                "JUMP 0x1b0"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b0",
            "instructions": [
                "k = 0",
                "JUMP 0x1b1"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b1",
            "instructions": [
                "NOP",
                "REF_571 = LENGTH ActiveProposals",
                "TMP_776 = k < REF_571",
                "CONDITION TMP_776 0x1b2 0x187"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b2",
            "instructions": [
                "CLR_205 = ActiveProposals[k]",
                "REF_572 = CLR_205",
                "CLR_206 = REF_572.propID",
                "REF_573 = CLR_206",
                "TMP_777 = REF_573 == _propID",
                "CONDITION TMP_777 0x1b3 0x1b4"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b3",
            "instructions": [
                "CLR_207 = ActiveProposals[k]",
                "REF_574 = CLR_207",
                "CLR_208 = REF_574.endTime",
                "REF_575 = CLR_208",
                "TMP_778 = REF_575 < now",
                "CONDITION TMP_778 0x1b3_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b3_r0",
            "instructions": [
                "JUMP 0x1b5"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b4",
            "instructions": [
                "TMP_782 = k",
                "k = k + 1",
                "JUMP 0x1b6"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b6",
            "instructions": [
                "NOP",
                "JUMP 0x1b1"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1b5",
            "instructions": [
                "CLR_209 = ActiveProposals[k]",
                "REF_576 = CLR_209",
                "REF_577 = LENGTH ActiveProposals",
                "TMP_780 = REF_577 - 1",
                "CLR_210 = ActiveProposals[TMP_780]",
                "REF_578 = CLR_210",
                "ActiveProposals[k] = REF_578",
                "REF_579 = LENGTH ActiveProposals",
                "REF_580 = LENGTH ActiveProposals",
                "TMP_781 = REF_580 - 1",
                "REF_579 = TMP_781",
                "JUMP 0x1b6"
            ]
        },
        {
            "scope": "executeProposal",
            "addr": "0x1ad",
            "instructions": [
                "CLR_211 = p.executed",
                "REF_706 = CLR_211",
                "p.executed = true",
                "_propID = _proposalID",
                "JUMP 0x1af"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x187",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}