{
    "file_name": "dao_symex_path_3.json",
    "from_function": "withdraw",
    "to_function": "withdraw",
    "bug_type": "dao",
    "src_node": "\"BlockID: 401\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 424\nCall context: \nNone\nREF_100 -> balances[msg.sender]\nREF_100 = REF_100 - _amount\""
    ],
    "executable_instructions": 61,
    "state_variable": "balances",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file ..\/..\/output\/0xf6dbe88ba55f1793ff0773c9b1275300f830914f\/dao_symex_path_3.json\n# attack type: range\n# solver type: cvc4\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x3@__GLOBAL__\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x5@__GLOBAL__\n    > adding global block: 0x6@__GLOBAL__\n    > adding global block: 0x15@__GLOBAL__\n    > adding global block: 0x16@__GLOBAL__\n    > adding global block: 0x18@__GLOBAL__\n    > adding global block: 0x2b@__GLOBAL__\n    > adding global block: 0x2c@__GLOBAL__\n    > adding global block: 0x2d@__GLOBAL__\n    > adding global block: 0x45@__GLOBAL__\n    > adding global block: 0x46@__GLOBAL__\n    > adding global block: 0x47@__GLOBAL__\n    > adding global block: 0x65@__GLOBAL__\n    > adding global block: 0x66@__GLOBAL__\n    > adding global block: 0x67@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: name\n    > initializing global variable: name\n\n    > declaring global variable: symbol\n    > initializing global variable: symbol\n\n    > declaring global variable: decimals\n    > initializing global variable: decimals\n\n    > declaring global variable: INITIAL_SUPPLY\n    > initializing global variable: INITIAL_SUPPLY\n\n    > declaring global variable: _guardCounter\n    > initializing global variable: _guardCounter\n    > declaring global variable: health\n    > initializing global variable: health\n    > declaring global variable: mana\n    > initializing global variable: mana\n    > declaring global variable: secret\n    > initializing global variable: secret\n    > declaring global variable: highestBidder\n    > initializing global variable: highestBidder\n    > declaring global variable: highestBid\n    > initializing global variable: highestBid\n    > declaring global variable: refunds\n    > initializing global variable: refunds\n    > declaring global variable: balances\n    > initializing global variable: balances\n    > declaring global variable: allowed\n    > initializing global variable: allowed\n    > declaring global variable: version\n    > initializing global variable: version\n\n    > declaring global variable: totalSupply_\n    > initializing global variable: totalSupply_\n\n    > declaring global variable: ReentrancyGuard\n    > initializing global variable: ReentrancyGuard\n    > declaring global variable: PublicData\n    > initializing global variable: PublicData\n    > declaring global variable: auction\n    > initializing global variable: auction\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n    > declaring global variable: ERC20Basic\n    > initializing global variable: ERC20Basic\n    > declaring global variable: ERC20\n    > initializing global variable: ERC20\n    > declaring global variable: BasicToken\n    > initializing global variable: BasicToken\n    > declaring global variable: StandardToken\n    > initializing global variable: StandardToken\n    > declaring global variable: Asiandragon\n    > initializing global variable: Asiandragon\n# building ranges\n  > start adding range variables\n    > adding: allowed -> (0x2@__RANGE__ 0x14@__RANGE__ 0x26@__RANGE__ 0x27@__RANGE__ 0x28@__RANGE__ 0x2a@__RANGE__)\n    > adding: balances -> (0x2@__RANGE__ 0x17@__RANGE__ 0x22@__RANGE__ 0x23@__RANGE__ 0x24@__RANGE__ 0x25@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x14@__RANGE__ 0x24@__RANGE__ 0x22@__RANGE__ 0x27@__RANGE__ 0x23@__RANGE__ 0x2a@__RANGE__ 0x26@__RANGE__ 0x25@__RANGE__ 0x17@__RANGE__ 0x28@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x22@__RANGE__\n    > adding range block: 0x23@__RANGE__\n    > adding range block: 0x24@__RANGE__\n    > adding range block: 0x25@__RANGE__\n    > adding range block: 0x26@__RANGE__\n    > adding range block: 0x27@__RANGE__\n    > adding range block: 0x28@__RANGE__\n    > adding range block: 0x2a@__RANGE__\n# building normal scopes\n  > root addr: 0x68\n  > dest addrs: (0x77)\n  > loading normal blocks\n    > adding normal block: 0x68\n    > adding normal block: 0x69\n    > adding normal block: 0x6a\n    > adding normal block: 0x6c\n    > adding normal block: 0x6d\n    > adding normal block: 0x6e\n    > adding normal block: 0x70\n    > adding normal block: 0x6f\n    > adding normal block: 0x72\n    > adding normal block: 0x73\n    > adding normal block: 0x74\n    > adding normal block: 0x71\n    > adding normal block: 0x75\n    > adding normal block: 0x76\n    > adding normal block: 0x77\n    > adding normal block: 0x6b\n# start interpretation of normal blocks...\n\n# asserts size: 21\n# using solver: #<cvc4>\n# result: #t\n"
}