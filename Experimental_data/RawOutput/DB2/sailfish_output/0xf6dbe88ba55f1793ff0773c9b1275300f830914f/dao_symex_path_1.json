{
    "file": "0xf6dbe88ba55f1793ff0773c9b1275300f830914f.sol",
    "global_structs": [
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x2b"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x2c"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x2d"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "name",
            "type": [
                "unknown"
            ],
            "init": [
                "0x3"
            ]
        },
        {
            "name": "symbol",
            "type": [
                "unknown"
            ],
            "init": [
                "0x6"
            ]
        },
        {
            "name": "decimals",
            "type": [
                "integer"
            ],
            "init": [
                "0x5"
            ]
        },
        {
            "name": "INITIAL_SUPPLY",
            "type": [
                "integer"
            ],
            "init": [
                "0x4"
            ]
        },
        {
            "name": "_guardCounter",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "health",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "mana",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "secret",
            "type": [
                "unknown"
            ],
            "init": []
        },
        {
            "name": "highestBidder",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "highestBid",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "refunds",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "balances",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "allowed",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "integer"
                ]
            ],
            "init": []
        },
        {
            "name": "version",
            "type": [
                "unknown"
            ],
            "init": [
                "0x18"
            ]
        },
        {
            "name": "totalSupply_",
            "type": [
                "integer"
            ],
            "init": [
                "0x15"
            ]
        },
        {
            "name": "ReentrancyGuard",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "PublicData",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "auction",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "SafeMath",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20Basic",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "BasicToken",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "StandardToken",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Asiandragon",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x3",
            "instructions": [
                "name = NEW_VAL unknown"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4",
            "instructions": [
                "INITIAL_SUPPLY = 500000000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5",
            "instructions": [
                "decimals = 8"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6",
            "instructions": [
                "symbol = NEW_VAL unknown"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x15",
            "instructions": [
                "totalSupply_ = 500000000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x16",
            "instructions": [
                "CLR_0 = balances[msg_sender]",
                "REF_107 = CLR_0",
                "balances[msg_sender] = 500000000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x18",
            "instructions": [
                "version = NEW_VAL unknown"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "allowed",
            "addrs": [
                "0x2",
                "0x14",
                "0x26",
                "0x27",
                "0x28",
                "0x2a"
            ]
        },
        {
            "name": "balances",
            "addrs": [
                "0x2",
                "0x17",
                "0x22",
                "0x23",
                "0x24",
                "0x25"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "CLR_1 = msg.sender",
                "CLR_2 = allowed[CLR_1]",
                "REF_105 = CLR_2",
                "CLR_3 = REF_105[U]",
                "REF_106 = CLR_3",
                "REF_105[0] = U",
                "REF_105[1] = U",
                "REF_105[2] = U",
                "REF_105[3] = U",
                "REF_105[4] = U",
                "REF_105[5] = U",
                "REF_105[6] = U",
                "REF_105[7] = U",
                "REF_105[8] = U",
                "REF_105[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "CLR_4 = msg.sender",
                "balances[CLR_4] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x22",
            "instructions": [
                "CLR_5 = msg.sender",
                "CLR_6 = balances[CLR_5]",
                "REF_120 = CLR_6",
                "CLR_7 = msg.sender",
                "balances[CLR_7] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x23",
            "instructions": [
                "CLR_8 = balances[U]",
                "REF_121 = CLR_8",
                "balances[0] = U",
                "balances[1] = U",
                "balances[2] = U",
                "balances[3] = U",
                "balances[4] = U",
                "balances[5] = U",
                "balances[6] = U",
                "balances[7] = U",
                "balances[8] = U",
                "balances[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x24",
            "instructions": [
                "CLR_9 = balances[U]",
                "REF_122 = CLR_9",
                "balances[0] = U",
                "balances[1] = U",
                "balances[2] = U",
                "balances[3] = U",
                "balances[4] = U",
                "balances[5] = U",
                "balances[6] = U",
                "balances[7] = U",
                "balances[8] = U",
                "balances[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x25",
            "instructions": [
                "CLR_10 = balances[U]",
                "REF_123 = CLR_10",
                "balances[0] = U",
                "balances[1] = U",
                "balances[2] = U",
                "balances[3] = U",
                "balances[4] = U",
                "balances[5] = U",
                "balances[6] = U",
                "balances[7] = U",
                "balances[8] = U",
                "balances[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x26",
            "instructions": [
                "CLR_11 = allowed[U]",
                "REF_124 = CLR_11",
                "CLR_12 = msg.sender",
                "CLR_13 = REF_124[CLR_12]",
                "REF_125 = CLR_13",
                "CLR_14 = msg.sender",
                "REF_124[CLR_14] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x27",
            "instructions": [
                "CLR_15 = msg.sender",
                "CLR_16 = allowed[CLR_15]",
                "REF_126 = CLR_16",
                "CLR_17 = REF_126[U]",
                "REF_127 = CLR_17",
                "REF_126[0] = 0",
                "REF_126[1] = 0",
                "REF_126[2] = 0",
                "REF_126[3] = 0",
                "REF_126[4] = 0",
                "REF_126[5] = 0",
                "REF_126[6] = 0",
                "REF_126[7] = 0",
                "REF_126[8] = 0",
                "REF_126[9] = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x28",
            "instructions": [
                "CLR_18 = msg.sender",
                "CLR_19 = allowed[CLR_18]",
                "REF_128 = CLR_19",
                "CLR_20 = REF_128[U]",
                "REF_129 = CLR_20",
                "REF_128[0] = U",
                "REF_128[1] = U",
                "REF_128[2] = U",
                "REF_128[3] = U",
                "REF_128[4] = U",
                "REF_128[5] = U",
                "REF_128[6] = U",
                "REF_128[7] = U",
                "REF_128[8] = U",
                "REF_128[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2a",
            "instructions": [
                "CLR_21 = msg.sender",
                "CLR_22 = allowed[CLR_21]",
                "REF_132 = CLR_22",
                "CLR_23 = REF_132[U]",
                "REF_133 = CLR_23",
                "REF_132[0] = U",
                "REF_132[1] = U",
                "REF_132[2] = U",
                "REF_132[3] = U",
                "REF_132[4] = U",
                "REF_132[5] = U",
                "REF_132[6] = U",
                "REF_132[7] = U",
                "REF_132[8] = U",
                "REF_132[9] = U"
            ]
        }
    ],
    "root_addr": "0x32",
    "dest_addrs": [
        "0x44"
    ],
    "normal_blocks": [
        {
            "scope": "withdraw",
            "addr": "0x2e",
            "instructions": [
                "CLR_24 = msg.sender",
                "CLR_25 = balances[CLR_24]",
                "REF_97 = CLR_25",
                "TMP_78 = REF_97 >= _amount",
                "CONDITION TMP_78 0x2f 0x30"
            ]
        },
        {
            "scope": "withdraw",
            "addr": "0x2f",
            "instructions": [
                "ATTACK",
                "TMP_80 = NEW_VAL boolean",
                "JUMP 0x31"
            ]
        },
        {
            "scope": "withdraw",
            "addr": "0x32",
            "instructions": [
                "NOP",
                "_amount = NEW_VAL integer",
                "JUMP 0x2e"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x31",
            "instructions": [
                "NOP",
                "_to = NEW_VAL integer",
                "a = NEW_VAL integer",
                "a = NEW_VAL integer",
                "_value = NEW_VAL integer",
                "b = NEW_VAL integer",
                "b = NEW_VAL integer",
                "c = NEW_VAL integer",
                "JUMP 0x33"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x33",
            "instructions": [
                "TMP_52 = 0",
                "TMP_53 = _to != TMP_52",
                "CONDITION TMP_53 0x33_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x33_r0",
            "instructions": [
                "JUMP 0x34"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x34",
            "instructions": [
                "CLR_26 = msg.sender",
                "CLR_27 = balances[CLR_26]",
                "REF_54 = CLR_27",
                "TMP_55 = _value <= REF_54",
                "CONDITION TMP_55 0x34_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x34_r0",
            "instructions": [
                "JUMP 0x35"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x36",
            "instructions": [
                "balances[_to] = TMP_58",
                "NOP",
                "JUMP 0x37"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x37",
            "instructions": [
                "NOP",
                "JUMP 0x38"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x39",
            "instructions": [
                "NOP",
                "JUMP 0x3a"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3a",
            "instructions": [
                "TMP_13 = b <= a",
                "CONDITION TMP_13 0x3a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3a_r0",
            "instructions": [
                "JUMP 0x3b"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3b",
            "instructions": [
                "TMP_15 = a - b",
                "TMP_91 = TMP_15",
                "JUMP 0x3c"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x35",
            "instructions": [
                "CLR_28 = msg.sender",
                "CLR_29 = balances[CLR_28]",
                "REF_55 = CLR_29",
                "CLR_30 = msg.sender",
                "CLR_31 = balances[CLR_30]",
                "REF_56 = CLR_31",
                "a = REF_56",
                "b = _value",
                "JUMP 0x39"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3c",
            "instructions": [
                "TMP_57 = TMP_91",
                "JUMP 0x3d"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3e",
            "instructions": [
                "NOP",
                "JUMP 0x3f"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3f",
            "instructions": [
                "TMP_16 = a + b",
                "c = TMP_16",
                "TMP_17 = c >= a",
                "CONDITION TMP_17 0x3f_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3f_r0",
            "instructions": [
                "JUMP 0x40"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x40",
            "instructions": [
                "TMP_92 = c",
                "JUMP 0x41"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x3d",
            "instructions": [
                "CLR_32 = msg.sender",
                "balances[CLR_32] = TMP_57",
                "CLR_33 = balances[_to]",
                "REF_58 = CLR_33",
                "CLR_34 = balances[_to]",
                "REF_59 = CLR_34",
                "a = REF_59",
                "b = _value",
                "JUMP 0x3e"
            ]
        },
        {
            "scope": "transfer",
            "addr": "0x41",
            "instructions": [
                "TMP_58 = TMP_92",
                "JUMP 0x36"
            ]
        },
        {
            "scope": "withdraw",
            "addr": "0x38",
            "instructions": [
                "CONDITION TMP_80 0x42 0x30"
            ]
        },
        {
            "scope": "withdraw",
            "addr": "0x42",
            "instructions": [
                "NOP",
                "JUMP 0x43"
            ]
        },
        {
            "scope": "withdraw",
            "addr": "0x43",
            "instructions": [
                "NOP",
                "JUMP 0x44"
            ]
        },
        {
            "scope": "withdraw",
            "addr": "0x44",
            "instructions": [
                "CLR_35 = msg.sender",
                "CLR_36 = balances[CLR_35]",
                "REF_100 = CLR_36",
                "CLR_37 = msg.sender",
                "WRP_0 = REF_100 - _amount",
                "balances[CLR_37] = WRP_0"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x30",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}