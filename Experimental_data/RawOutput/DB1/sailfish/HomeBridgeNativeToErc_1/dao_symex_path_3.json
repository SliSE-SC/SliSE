{
    "file": "HomeBridgeNativeToErc_1.sol",
    "global_structs": [
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0xd4"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0xd5"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0xd6"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "uintStorage",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "stringStorage",
            "type": [
                "array",
                "integer",
                "unknown"
            ],
            "init": []
        },
        {
            "name": "addressStorage",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "bytesStorage",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "boolStorage",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "intStorage",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "SafeMath",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IBridgeValidators",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Message",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "EternalStorage",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Validatable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20Basic",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "BasicBridge",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "BasicHomeBridge",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "HomeBridgeNativeToErc",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x46",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x47",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x48",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x8c",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x8d",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x8e",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd4",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd5",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd6",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "uintStorage",
            "addrs": [
                "0x2",
                "0x8",
                "0xe",
                "0x10",
                "0x12",
                "0x14",
                "0x16",
                "0x18",
                "0x19",
                "0x1a",
                "0x1b",
                "0x1c",
                "0x1e",
                "0x2b",
                "0x2e",
                "0x43",
                "0x45"
            ]
        },
        {
            "name": "boolStorage",
            "addrs": [
                "0x2",
                "0xa",
                "0x29",
                "0x3f"
            ]
        },
        {
            "name": "addressStorage",
            "addrs": [
                "0x2",
                "0xc"
            ]
        },
        {
            "name": "bytesStorage",
            "addrs": [
                "0x2",
                "0x3c",
                "0x41"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8",
            "instructions": [
                "CLR_0 = uintStorage[U]",
                "REF_205 = CLR_0",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "CLR_1 = boolStorage[U]",
                "REF_206 = CLR_1",
                "RTMP_586 = ! REF_206",
                "CONDITION RTMP_586 0x9 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "CLR_2 = boolStorage[U]",
                "REF_199 = CLR_2",
                "boolStorage[0] = true",
                "boolStorage[1] = true",
                "boolStorage[2] = true",
                "boolStorage[3] = true",
                "boolStorage[4] = true",
                "boolStorage[5] = true",
                "boolStorage[6] = true",
                "boolStorage[7] = true",
                "boolStorage[8] = true",
                "boolStorage[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "CLR_3 = boolStorage[U]",
                "REF_208 = CLR_3",
                "RTMP_587 = ! REF_208",
                "CONDITION RTMP_587 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "CLR_4 = addressStorage[U]",
                "REF_207 = CLR_4",
                "addressStorage[0] = U",
                "addressStorage[1] = U",
                "addressStorage[2] = U",
                "addressStorage[3] = U",
                "addressStorage[4] = U",
                "addressStorage[5] = U",
                "addressStorage[6] = U",
                "addressStorage[7] = U",
                "addressStorage[8] = U",
                "addressStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "CLR_5 = boolStorage[U]",
                "REF_210 = CLR_5",
                "RTMP_588 = ! REF_210",
                "CONDITION RTMP_588 0xd 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "CLR_6 = uintStorage[U]",
                "REF_209 = CLR_6",
                "CLR_7 = block.number",
                "uintStorage[0] = CLR_7",
                "uintStorage[1] = CLR_7",
                "uintStorage[2] = CLR_7",
                "uintStorage[3] = CLR_7",
                "uintStorage[4] = CLR_7",
                "uintStorage[5] = CLR_7",
                "uintStorage[6] = CLR_7",
                "uintStorage[7] = CLR_7",
                "uintStorage[8] = CLR_7",
                "uintStorage[9] = CLR_7"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "CLR_8 = boolStorage[U]",
                "REF_212 = CLR_8",
                "RTMP_589 = ! REF_212",
                "CONDITION RTMP_589 0xf 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xf",
            "instructions": [
                "CLR_9 = uintStorage[U]",
                "REF_211 = CLR_9",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "CLR_10 = boolStorage[U]",
                "REF_214 = CLR_10",
                "RTMP_590 = ! REF_214",
                "CONDITION RTMP_590 0x11 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "CLR_11 = uintStorage[U]",
                "REF_213 = CLR_11",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "CLR_12 = boolStorage[U]",
                "REF_216 = CLR_12",
                "RTMP_591 = ! REF_216",
                "CONDITION RTMP_591 0x13 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_13 = uintStorage[U]",
                "REF_215 = CLR_13",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "CLR_14 = boolStorage[U]",
                "REF_218 = CLR_14",
                "RTMP_592 = ! REF_218",
                "CONDITION RTMP_592 0x15 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15",
            "instructions": [
                "CLR_15 = uintStorage[U]",
                "REF_217 = CLR_15",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "CLR_16 = boolStorage[U]",
                "REF_220 = CLR_16",
                "RTMP_593 = ! REF_220",
                "CONDITION RTMP_593 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "CLR_17 = uintStorage[U]",
                "REF_219 = CLR_17",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x19",
            "instructions": [
                "CLR_18 = uintStorage[U]",
                "REF_221 = CLR_18",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1a",
            "instructions": [
                "CLR_19 = uintStorage[U]",
                "REF_222 = CLR_19",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1b",
            "instructions": [
                "CLR_20 = uintStorage[U]",
                "REF_223 = CLR_20",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1c",
            "instructions": [
                "CLR_21 = uintStorage[U]",
                "REF_224 = CLR_21",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1e",
            "instructions": [
                "CLR_22 = msg.value",
                "RTMP_594 = CLR_22 > 0",
                "CONDITION RTMP_594 0x1f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1f",
            "instructions": [
                "CLR_23 = msg.data",
                "REF_225 = CLR_23",
                "REF_226 = NEW_VAL integer",
                "RTMP_595 = REF_226 == 0",
                "CONDITION RTMP_595 0x1d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1d",
            "instructions": [
                "CLR_24 = uintStorage[U]",
                "REF_198 = CLR_24",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x29",
            "instructions": [
                "CLR_25 = boolStorage[U]",
                "REF_230 = CLR_25",
                "RTMP_605 = ! REF_230",
                "CONDITION RTMP_605 0x28 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x28",
            "instructions": [
                "CLR_26 = boolStorage[U]",
                "REF_193 = CLR_26",
                "boolStorage[0] = true",
                "boolStorage[1] = true",
                "boolStorage[2] = true",
                "boolStorage[3] = true",
                "boolStorage[4] = true",
                "boolStorage[5] = true",
                "boolStorage[6] = true",
                "boolStorage[7] = true",
                "boolStorage[8] = true",
                "boolStorage[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2e",
            "instructions": [
                "CLR_27 = boolStorage[U]",
                "REF_232 = CLR_27",
                "RTMP_610 = ! REF_232",
                "CONDITION RTMP_610 0x2f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2f",
            "instructions": [
                "RTMP_611 = ! false",
                "RTMP_612 = ! false",
                "RTMP_613 = RTMP_611 || RTMP_612",
                "CONDITION RTMP_613 0x2d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2d",
            "instructions": [
                "CLR_28 = uintStorage[U]",
                "REF_194 = CLR_28",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3c",
            "instructions": [
                "CLR_29 = uintStorage[U]",
                "REF_234 = CLR_29",
                "RTMP_630 = REF_234 > 1",
                "CONDITION RTMP_630 0x1 0x3d"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3d",
            "instructions": [
                "RTMP_631 = ! false",
                "RTMP_632 = ! false",
                "RTMP_633 = RTMP_631 || RTMP_632",
                "CONDITION RTMP_633 0x3b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3b",
            "instructions": [
                "CLR_30 = bytesStorage[U]",
                "REF_196 = CLR_30",
                "bytesStorage[0] = U",
                "bytesStorage[1] = U",
                "bytesStorage[2] = U",
                "bytesStorage[3] = U",
                "bytesStorage[4] = U",
                "bytesStorage[5] = U",
                "bytesStorage[6] = U",
                "bytesStorage[7] = U",
                "bytesStorage[8] = U",
                "bytesStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3f",
            "instructions": [
                "RTMP_634 = ! false",
                "RTMP_635 = ! false",
                "RTMP_636 = RTMP_634 || RTMP_635",
                "CONDITION RTMP_636 0x3e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3e",
            "instructions": [
                "CLR_31 = boolStorage[U]",
                "REF_192 = CLR_31",
                "boolStorage[0] = true",
                "boolStorage[1] = true",
                "boolStorage[2] = true",
                "boolStorage[3] = true",
                "boolStorage[4] = true",
                "boolStorage[5] = true",
                "boolStorage[6] = true",
                "boolStorage[7] = true",
                "boolStorage[8] = true",
                "boolStorage[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x41",
            "instructions": [
                "RTMP_637 = ! false",
                "RTMP_638 = ! false",
                "RTMP_639 = RTMP_637 || RTMP_638",
                "CONDITION RTMP_639 0x40 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x40",
            "instructions": [
                "CLR_32 = bytesStorage[U]",
                "REF_195 = CLR_32",
                "bytesStorage[0] = U",
                "bytesStorage[1] = U",
                "bytesStorage[2] = U",
                "bytesStorage[3] = U",
                "bytesStorage[4] = U",
                "bytesStorage[5] = U",
                "bytesStorage[6] = U",
                "bytesStorage[7] = U",
                "bytesStorage[8] = U",
                "bytesStorage[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x45",
            "instructions": [
                "RTMP_643 = ! false",
                "RTMP_644 = ! false",
                "RTMP_645 = RTMP_643 || RTMP_644",
                "CONDITION RTMP_645 0x44 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x44",
            "instructions": [
                "CLR_33 = uintStorage[U]",
                "REF_197 = CLR_33",
                "uintStorage[0] = U",
                "uintStorage[1] = U",
                "uintStorage[2] = U",
                "uintStorage[3] = U",
                "uintStorage[4] = U",
                "uintStorage[5] = U",
                "uintStorage[6] = U",
                "uintStorage[7] = U",
                "uintStorage[8] = U",
                "uintStorage[9] = U"
            ]
        }
    ],
    "root_addr": "0xdb",
    "dest_addrs": [
        "0x11a"
    ],
    "normal_blocks": [
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xd7",
            "instructions": [
                "ATTACK",
                "TMP_472 = NEW_VAL boolean",
                "JUMP 0xd8"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xd9",
            "instructions": [
                "NOP",
                "JUMP 0xda"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xdb",
            "instructions": [
                "NOP",
                "value = NEW_VAL integer",
                "_withdrawal = NEW_VAL integer",
                "_number = NEW_VAL integer",
                "_value = NEW_VAL integer",
                "transactionHash = NEW_VAL integer",
                "hashSender = NEW_VAL integer",
                "_status = NEW_VAL boolean",
                "_withdrawal = NEW_VAL integer",
                "_v = NEW_VAL integer",
                "_withdrawal = NEW_VAL integer",
                "_number = NEW_VAL integer",
                "signed = NEW_VAL integer",
                "recipient = NEW_VAL integer",
                "_withdrawal = NEW_VAL integer",
                "_recipient = NEW_VAL integer",
                "hashMsg = NEW_VAL integer",
                "JUMP 0xd9"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xdc",
            "instructions": [
                "TMP_471 = TMP_488",
                "JUMP 0xd7"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xda",
            "instructions": [
                "TMP_249 = NEW_VAL integer",
                "TMP_250 = CALL1 keccak TMP_249",
                "CLR_34 = addressStorage[TMP_250]",
                "REF_95 = CLR_34",
                "TMP_251 = NEW_VAL unknown",
                "TMP_488 = TMP_251",
                "JUMP 0xdc"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xd8",
            "instructions": [
                "NOP",
                "value = NEW_VAL integer",
                "_withdrawal = NEW_VAL integer",
                "_number = NEW_VAL integer",
                "_value = NEW_VAL integer",
                "transactionHash = NEW_VAL integer",
                "hashSender = NEW_VAL integer",
                "_status = NEW_VAL boolean",
                "_withdrawal = NEW_VAL integer",
                "_v = NEW_VAL integer",
                "_withdrawal = NEW_VAL integer",
                "_number = NEW_VAL integer",
                "signed = NEW_VAL integer",
                "recipient = NEW_VAL integer",
                "_withdrawal = NEW_VAL integer",
                "_recipient = NEW_VAL integer",
                "hashMsg = NEW_VAL integer",
                "JUMP 0xdd"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xde",
            "instructions": [
                "NOP",
                "JUMP 0xdf"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe0",
            "instructions": [
                "TMP_259 = ! TMP_258",
                "CONDITION TMP_259 0xe0_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe0_r0",
            "instructions": [
                "JUMP 0xe1"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe2",
            "instructions": [
                "TMP_264 = ! TMP_263",
                "CONDITION TMP_264 0xe2_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe2_r0",
            "instructions": [
                "JUMP 0xe3"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe4",
            "instructions": [
                "NOP",
                "JUMP 0xe5"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe6",
            "instructions": [
                "TMP_270 = signed >= TMP_269",
                "CONDITION TMP_270 0xe8 0xe7"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe9",
            "instructions": [
                "NOP",
                "JUMP 0xea"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xeb",
            "instructions": [
                "CONDITION TMP_273 0xeb_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xeb_r0",
            "instructions": [
                "JUMP 0xec"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xec",
            "instructions": [
                "NOP",
                "JUMP 0xe9"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xed",
            "instructions": [
                "TMP_472 = NEW_VAL boolean",
                "JUMP 0xee"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xee",
            "instructions": [
                "CONDITION TMP_472 0xee_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xee_r0",
            "instructions": [
                "JUMP 0xef"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xdd",
            "instructions": [
                "NOP",
                "JUMP 0xf0"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf0",
            "instructions": [
                "TMP_249 = NEW_VAL integer",
                "TMP_250 = CALL1 keccak TMP_249",
                "CLR_35 = addressStorage[TMP_250]",
                "REF_95 = CLR_35",
                "TMP_251 = NEW_VAL unknown",
                "TMP_488 = TMP_251",
                "JUMP 0xf1"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf1",
            "instructions": [
                "TMP_471 = TMP_488",
                "JUMP 0xed"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xef",
            "instructions": [
                "NOP",
                "JUMP 0xde"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf2",
            "instructions": [
                "NOP",
                "JUMP 0xf3"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf3",
            "instructions": [
                "TMP_319 = NEW_VAL integer",
                "TMP_320 = CALL1 keccak TMP_319",
                "CLR_36 = boolStorage[TMP_320]",
                "REF_113 = CLR_36",
                "TMP_553 = REF_113",
                "JUMP 0xf4"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xdf",
            "instructions": [
                "TMP_254 = NEW_VAL integer",
                "TMP_255 = CALL1 keccak TMP_254",
                "hashMsg = TMP_255",
                "TMP_256 = NEW_VAL integer",
                "TMP_257 = CALL1 keccak TMP_256",
                "hashSender = TMP_257",
                "_withdrawal = hashSender",
                "JUMP 0xf2"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf4",
            "instructions": [
                "TMP_258 = TMP_553",
                "JUMP 0xe0"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf5",
            "instructions": [
                "NOP",
                "JUMP 0xf6"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf6",
            "instructions": [
                "TMP_315 = NEW_VAL integer",
                "TMP_316 = CALL1 keccak TMP_315",
                "CLR_37 = boolStorage[TMP_316]",
                "REF_109 = CLR_37",
                "boolStorage[TMP_316] = _status",
                "JUMP 0xf7"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe1",
            "instructions": [
                "_withdrawal = hashSender",
                "_status = true",
                "JUMP 0xf5"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf8",
            "instructions": [
                "NOP",
                "JUMP 0xf9"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf9",
            "instructions": [
                "TMP_313 = NEW_VAL integer",
                "TMP_314 = CALL1 keccak TMP_313",
                "CLR_38 = uintStorage[TMP_314]",
                "REF_107 = CLR_38",
                "TMP_550 = REF_107",
                "JUMP 0xfa"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xf7",
            "instructions": [
                "_withdrawal = hashMsg",
                "JUMP 0xf8"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xfa",
            "instructions": [
                "TMP_262 = TMP_550",
                "JUMP 0xfb"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xfc",
            "instructions": [
                "NOP",
                "JUMP 0xfd"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xfd",
            "instructions": [
                "TMP_339 = 2 ** 255",
                "TMP_340 = _number & TMP_339",
                "TMP_341 = 2 ** 255",
                "TMP_342 = TMP_340 == TMP_341",
                "TMP_563 = TMP_342",
                "JUMP 0xfe"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xfb",
            "instructions": [
                "signed = TMP_262",
                "_number = signed",
                "JUMP 0xfc"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xfe",
            "instructions": [
                "TMP_263 = TMP_563",
                "JUMP 0xe2"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xff",
            "instructions": [
                "NOP",
                "JUMP 0x100"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x100",
            "instructions": [
                "TMP_317 = NEW_VAL integer",
                "TMP_318 = CALL1 keccak TMP_317",
                "CLR_39 = uintStorage[TMP_318]",
                "REF_111 = CLR_39",
                "uintStorage[TMP_318] = _number",
                "JUMP 0xe4"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe3",
            "instructions": [
                "TMP_266 = signed + 1",
                "signed = TMP_266",
                "_withdrawal = hashMsg",
                "_number = signed",
                "JUMP 0xff"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe5",
            "instructions": [
                "NOP",
                "JUMP 0x101"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x102",
            "instructions": [
                "TMP_253 = NEW_VAL integer",
                "JUMP 0x103"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x103",
            "instructions": [
                "TMP_545 = TMP_253",
                "JUMP 0x104"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x101",
            "instructions": [
                "NOP",
                "JUMP 0x105"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x105",
            "instructions": [
                "TMP_249 = NEW_VAL integer",
                "TMP_250 = CALL1 keccak TMP_249",
                "CLR_40 = addressStorage[TMP_250]",
                "REF_95 = CLR_40",
                "TMP_251 = NEW_VAL unknown",
                "TMP_544 = TMP_251",
                "JUMP 0x106"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x106",
            "instructions": [
                "TMP_252 = TMP_544",
                "JUMP 0x102"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x104",
            "instructions": [
                "TMP_269 = TMP_545",
                "JUMP 0xe6"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x107",
            "instructions": [
                "NOP",
                "JUMP 0x108"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x108",
            "instructions": [
                "TMP_337 = 2 ** 255",
                "TMP_338 = _v | TMP_337",
                "TMP_562 = TMP_338",
                "JUMP 0x109"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0xe8",
            "instructions": [
                "_v = signed",
                "JUMP 0x107"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x109",
            "instructions": [
                "TMP_271 = TMP_562",
                "JUMP 0x10a"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x10b",
            "instructions": [
                "NOP",
                "JUMP 0x10c"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x10c",
            "instructions": [
                "TMP_317 = NEW_VAL integer",
                "TMP_318 = CALL1 keccak TMP_317",
                "CLR_41 = uintStorage[TMP_318]",
                "REF_111 = CLR_41",
                "uintStorage[TMP_318] = _number",
                "JUMP 0x10d"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x10a",
            "instructions": [
                "_withdrawal = hashMsg",
                "_number = TMP_271",
                "JUMP 0x10b"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x10e",
            "instructions": [
                "NOP",
                "JUMP 0x10f"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x10f",
            "instructions": [
                "CLR_42 = this.balance",
                "WRP_0 = CLR_42 - _value",
                "this.balance = WRP_0",
                "JUMP 0x110"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x110",
            "instructions": [
                "TMP_585 = true",
                "JUMP 0x111"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x10d",
            "instructions": [
                "_recipient = recipient",
                "_value = value",
                "JUMP 0x10e"
            ]
        },
        {
            "scope": "executeAffirmation_v2",
            "addr": "0x111",
            "instructions": [
                "TMP_273 = TMP_585",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x112",
            "instructions": [
                "TMP_258 = TMP_553",
                "JUMP 0x113"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x114",
            "instructions": [
                "TMP_254 = NEW_VAL integer",
                "TMP_255 = CALL1 keccak TMP_254",
                "hashMsg = TMP_255",
                "TMP_256 = NEW_VAL integer",
                "TMP_257 = CALL1 keccak TMP_256",
                "hashSender = TMP_257",
                "_withdrawal = hashSender",
                "JUMP 0x115"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x116",
            "instructions": [
                "TMP_319 = NEW_VAL integer",
                "TMP_320 = CALL1 keccak TMP_319",
                "CLR_43 = boolStorage[TMP_320]",
                "REF_113 = CLR_43",
                "TMP_553 = REF_113",
                "JUMP 0x112"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x115",
            "instructions": [
                "NOP",
                "JUMP 0x116"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x117",
            "instructions": [
                "NOP",
                "JUMP 0x118"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xea",
            "instructions": [
                "CONDITION TMP_472 0xea_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0xea_r0",
            "instructions": [
                "JUMP 0x117"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x119",
            "instructions": [
                "TMP_264 = ! TMP_263",
                "CONDITION TMP_264 0x119_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x119_r0",
            "instructions": [
                "JUMP 0x11a"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x113",
            "instructions": [
                "TMP_259 = ! TMP_258",
                "CONDITION TMP_259 0x113_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x113_r0",
            "instructions": [
                "JUMP 0x11b"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x118",
            "instructions": [
                "NOP",
                "JUMP 0x114"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x11c",
            "instructions": [
                "TMP_263 = TMP_563",
                "JUMP 0x119"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x11d",
            "instructions": [
                "signed = TMP_262",
                "_number = signed",
                "JUMP 0x11e"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x11f",
            "instructions": [
                "TMP_339 = 2 ** 255",
                "TMP_340 = _number & TMP_339",
                "TMP_341 = 2 ** 255",
                "TMP_342 = TMP_340 == TMP_341",
                "TMP_563 = TMP_342",
                "JUMP 0x11c"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x11e",
            "instructions": [
                "NOP",
                "JUMP 0x11f"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x120",
            "instructions": [
                "TMP_262 = TMP_550",
                "JUMP 0x11d"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x11a",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x121",
            "instructions": [
                "_withdrawal = hashMsg",
                "JUMP 0x122"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x123",
            "instructions": [
                "TMP_313 = NEW_VAL integer",
                "TMP_314 = CALL1 keccak TMP_313",
                "CLR_44 = uintStorage[TMP_314]",
                "REF_107 = CLR_44",
                "TMP_550 = REF_107",
                "JUMP 0x120"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x122",
            "instructions": [
                "NOP",
                "JUMP 0x123"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x11b",
            "instructions": [
                "_withdrawal = hashSender",
                "_status = true",
                "JUMP 0x124"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x125",
            "instructions": [
                "TMP_315 = NEW_VAL integer",
                "TMP_316 = CALL1 keccak TMP_315",
                "CLR_45 = boolStorage[TMP_316]",
                "REF_109 = CLR_45",
                "boolStorage[TMP_316] = _status",
                "JUMP 0x121"
            ]
        },
        {
            "scope": "executeAffirmation_v1",
            "addr": "0x124",
            "instructions": [
                "NOP",
                "JUMP 0x125"
            ]
        },
        {
            "scope": "trap",
            "addr": "0xe7",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}