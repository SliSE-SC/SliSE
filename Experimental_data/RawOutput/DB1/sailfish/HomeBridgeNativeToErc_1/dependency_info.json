{
    "HomeBridgeNativeToErc_1.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "executeAffirmation"
            ],
            "from_function": "executeAffirmation",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 547\nFunction: setAffirmationsSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(affirmationsSigned,_withdrawal))] = _status\nIRS: \nREF_109 := _status\"",
                        "\"BlockID: 259\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! affirmationsSigned(hashSender))\nIRS: \nTMP_260 = SOLIDITY_CALL require(bool)(TMP_259)\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 527\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! affirmationsSigned(hashSender))\nIRS: \nTMP_260 = SOLIDITY_CALL require(bool)(TMP_259)\"",
                        "\"BlockID: 279\nFunction: setAffirmationsSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(affirmationsSigned,_withdrawal))] = _status\nIRS: \nREF_109 := _status\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 552\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 558\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 552\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 558\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 528\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 528\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 530\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 530\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "executeAffirmation"
            ],
            "from_function": "executeAffirmation",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 561\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 563\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "submitSignature"
            ],
            "from_function": "submitSignature",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 324\nFunction: setMessagesSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(messagesSigned,_hash))] = _status\nIRS: \nREF_105 := _status\"",
                        "\"BlockID: 259\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! affirmationsSigned(hashSender))\nIRS: \nTMP_260 = SOLIDITY_CALL require(bool)(TMP_259)\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 301\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! messagesSigned(hashSender))\nIRS: \nTMP_295 = SOLIDITY_CALL require(bool)(TMP_294)\"",
                        "\"BlockID: 279\nFunction: setAffirmationsSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(affirmationsSigned,_withdrawal))] = _status\nIRS: \nREF_109 := _status\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "submitSignature"
            ],
            "from_function": "submitSignature",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "initialize"
            ],
            "from_function": "initialize",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 469\nFunction: setInitialize\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(isInitialized))] = _status\nIRS: \nREF_148 := _status\"",
                        "\"BlockID: 259\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! affirmationsSigned(hashSender))\nIRS: \nTMP_260 = SOLIDITY_CALL require(bool)(TMP_259)\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 460\nFunction: initialize\nNode: \nEXPRESSION require(bool)(! isInitialized())\nIRS: \nTMP_428 = SOLIDITY_CALL require(bool)(TMP_427)\"",
                        "\"BlockID: 279\nFunction: setAffirmationsSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(affirmationsSigned,_withdrawal))] = _status\nIRS: \nREF_109 := _status\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 496\nFunction: fallback\nNode: \nEXPRESSION require(bool)(withinLimit(msg.value))\nIRS: \nTMP_463 = SOLIDITY_CALL require(bool)(TMP_462)\"",
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 496\nFunction: fallback\nNode: \nEXPRESSION require(bool)(withinLimit(msg.value))\nIRS: \nTMP_463 = SOLIDITY_CALL require(bool)(TMP_462)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "executeAffirmation",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "executeAffirmation",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 496\nFunction: fallback\nNode: \nEXPRESSION require(bool)(withinLimit(msg.value))\nIRS: \nTMP_463 = SOLIDITY_CALL require(bool)(TMP_462)\"",
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "executeAffirmation"
            ],
            "from_function": "executeAffirmation",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 290\nFunction: setNumAffirmationsSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numAffirmationsSigned,_withdrawal))] = _number\nIRS: \nREF_111 := _number\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: setAffirmationsSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(affirmationsSigned,_withdrawal))] = _status\nIRS: \nREF_109 := _status\"",
                        "\"BlockID: 301\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! messagesSigned(hashSender))\nIRS: \nTMP_295 = SOLIDITY_CALL require(bool)(TMP_294)\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 259\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! affirmationsSigned(hashSender))\nIRS: \nTMP_260 = SOLIDITY_CALL require(bool)(TMP_259)\"",
                        "\"BlockID: 324\nFunction: setMessagesSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(messagesSigned,_hash))] = _status\nIRS: \nREF_105 := _status\""
                    ],
                    "state_variable": "boolStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "executeAffirmation"
            ],
            "from_function": "executeAffirmation",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 260\nFunction: executeAffirmation\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_265 = SOLIDITY_CALL require(bool)(TMP_264)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: executeAffirmation\nNode: \nIF signed >= requiredSignatures()\nIRS: \nCONDITION TMP_270\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "submitSignature"
            ],
            "from_function": "submitSignature",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 633\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 639\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 633\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 639\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 633\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 639\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 633\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 639\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 633\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 639\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 595\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 595\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 596\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 596\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 599\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 599\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 627\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 627\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 630\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 630\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 625\nFunction: setMessagesSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(messagesSigned,_hash))] = _status\nIRS: \nREF_105 := _status\"",
                        "\"BlockID: 301\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! messagesSigned(hashSender))\nIRS: \nTMP_295 = SOLIDITY_CALL require(bool)(TMP_294)\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 602\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! messagesSigned(hashSender))\nIRS: \nTMP_295 = SOLIDITY_CALL require(bool)(TMP_294)\"",
                        "\"BlockID: 324\nFunction: setMessagesSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(messagesSigned,_hash))] = _status\nIRS: \nREF_105 := _status\""
                    ],
                    "state_variable": "boolStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "submitSignature"
            ],
            "from_function": "submitSignature",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 642\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 643\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 646\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 674\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 677\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "initialize"
            ],
            "from_function": "initialize",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 475\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(deployedAtBlock))] = block.number\nIRS: \nREF_167 := block.number\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(dailyLimit))] = _dailyLimit\nIRS: \nREF_169 := _dailyLimit\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(maxPerTx))] = _maxPerTx\nIRS: \nREF_171 := _maxPerTx\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 484\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(minPerTx))] = _minPerTx\nIRS: \nREF_173 := _minPerTx\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(gasPrice))] = _homeGasPrice\nIRS: \nREF_175 := _homeGasPrice\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 490\nFunction: initialize\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(requiredBlockConfirmations))] = _requiredBlockConfirmations\nIRS: \nREF_177 := _requiredBlockConfirmations\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 469\nFunction: setInitialize\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(isInitialized))] = _status\nIRS: \nREF_148 := _status\"",
                        "\"BlockID: 301\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! messagesSigned(hashSender))\nIRS: \nTMP_295 = SOLIDITY_CALL require(bool)(TMP_294)\""
                    ],
                    "state_variable": "boolStorage"
                },
                {
                    "path": [
                        "\"BlockID: 460\nFunction: initialize\nNode: \nEXPRESSION require(bool)(! isInitialized())\nIRS: \nTMP_428 = SOLIDITY_CALL require(bool)(TMP_427)\"",
                        "\"BlockID: 324\nFunction: setMessagesSigned\nNode: \nEXPRESSION boolStorage[keccak256()(abi.encodePacked(messagesSigned,_hash))] = _status\nIRS: \nREF_105 := _status\""
                    ],
                    "state_variable": "boolStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 294\nFunction: submitSignature\nNode: \nEXPRESSION require(bool)(! isAlreadyProcessed(signed))\nIRS: \nTMP_290 = SOLIDITY_CALL require(bool)(TMP_289)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 295\nFunction: submitSignature\nNode: \nIF signed > 1\nIRS: \nCONDITION TMP_292\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 298\nFunction: submitSignature\nNode: \nIF signed >= reqSigs\nIRS: \nCONDITION TMP_305\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 326\nFunction: setSignatures\nNode: \nEXPRESSION bytesStorage[keccak256()(abi.encodePacked(signatures,_hash))] = _signature\nIRS: \nTMP_331 = SOLIDITY_CALL keccak256()(TMP_330)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 512\nFunction: setTotalSpentPerDay\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(totalSpentPerDay,_day))] = _value\nIRS: \nREF_140 := _value\"",
                        "\"BlockID: 329\nFunction: submitSignature\nNode: \nNEW VARIABLE signIdx = keccak256()(abi.encodePacked(hashMsg,(signed - 1)))\nIRS: \nTMP_300 = SOLIDITY_CALL keccak256()(TMP_299)\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 496\nFunction: fallback\nNode: \nEXPRESSION require(bool)(withinLimit(msg.value))\nIRS: \nTMP_463 = SOLIDITY_CALL require(bool)(TMP_462)\"",
                        "\"BlockID: 332\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                },
                {
                    "path": [
                        "\"BlockID: 496\nFunction: fallback\nNode: \nEXPRESSION require(bool)(withinLimit(msg.value))\nIRS: \nTMP_463 = SOLIDITY_CALL require(bool)(TMP_462)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitSignature",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "submitSignature",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 496\nFunction: fallback\nNode: \nEXPRESSION require(bool)(withinLimit(msg.value))\nIRS: \nTMP_463 = SOLIDITY_CALL require(bool)(TMP_462)\"",
                        "\"BlockID: 338\nFunction: setNumMessagesSigned\nNode: \nEXPRESSION uintStorage[keccak256()(abi.encodePacked(numMessagesSigned,_message))] = _number\nIRS: \nREF_126 := _number\""
                    ],
                    "state_variable": "uintStorage"
                }
            ]
        }
    ]
}