INFO:Slither:Compilation warnings/errors on /sb/ProjectKudos_1.sol:
/sb/ProjectKudos_1.sol:84:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ProjectKudos() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:105:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.kudosLimit > 0) throw;
                                 ^---^
/sb/ProjectKudos_1.sol:129:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (giver.kudosGiven + kudos > giver.kudosLimit) throw;
                                                         ^---^
/sb/ProjectKudos_1.sol:160:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            grantReason != GrantReason.Twitter) throw;
                                                ^---^
/sb/ProjectKudos_1.sol:165:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.isJudge) throw;
                          ^---^
/sb/ProjectKudos_1.sol:168:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.grant[reason]) throw;
                                ^---^
/sb/ProjectKudos_1.sol:315:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (bytes(str).length > 32) throw;
                                    ^---^
/sb/ProjectKudos_1.sol:331:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < votePeriod.start) throw;
                                    ^---^
/sb/ProjectKudos_1.sol:332:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= votePeriod.end) throw;
                                   ^---^
/sb/ProjectKudos_1.sol:340:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/ProjectKudos_1.sol:204:57: Warning: This declaration shadows an existing declaration.
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
                                                        ^-------------^
/sb/ProjectKudos_1.sol:61:5: The shadowed declaration is here:
    mapping(address => UserInfo) users;
    ^--------------------------------^

/sb/ProjectKudos_1.sol:225:66: Warning: This declaration shadows an existing declaration.
    function getKudosPerProject(address giver) constant returns (bytes32[] projects, uint[] kudos) {
                                                                 ^----------------^
/sb/ProjectKudos_1.sol:68:5: The shadowed declaration is here:
    mapping(bytes32 => ProjectInfo) projects;
    ^--------------------------------------^

/sb/ProjectKudos_1.sol:103:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[userAddres];
        ^-----------^
/sb/ProjectKudos_1.sol:127:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo giver = users[msg.sender];
        ^------------^
/sb/ProjectKudos_1.sol:132:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos_1.sol:155:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[userToGrant];
        ^-----------^
/sb/ProjectKudos_1.sol:191:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos_1.sol:206:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos_1.sol:226:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserIndex idx = usersIndex[giver];
        ^-----------^
/sb/ProjectKudos_1.sol:238:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[addr];
        ^-----------^
/sb/ProjectKudos_1.sol:249:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[addr];
        ^-----------^
/sb/ProjectKudos_1.sol:266:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserIndex idx = usersIndex[msg.sender];
        ^-----------^
/sb/ProjectKudos_1.sol:141:26: Warning: "sha3" has been deprecated in favour of "keccak256"
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos_1.sol:141:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos_1.sol:141:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos_1.sol:141:9: Warning: Invoking events without "emit" prefix is deprecated.
        Vote(msg.sender, sha3(projectCode), kudos);
        ^----------------------------------------^
/sb/ProjectKudos_1.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function ProjectKudos() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:101:5: Warning: No visibility specified. Defaulting to "public". 
    function register(address userAddres, bool isJudge) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function giveKudos(string projectCode, uint kudos) duringVote {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:153:5: Warning: No visibility specified. Defaulting to "public". 
    function grantKudos(address userToGrant, uint reason) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:189:5: Warning: No visibility specified. Defaulting to "public". 
    function getProjectKudos(string projectCode) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:204:5: Warning: No visibility specified. Defaulting to "public". 
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:225:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosPerProject(address giver) constant returns (bytes32[] projects, uint[] kudos) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:237:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosLeft(address addr) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:248:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosGiven(address addr) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:190:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 code = strToBytes(projectCode);
                       ^---------------------^
/sb/ProjectKudos_1.sol:205:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 code = strToBytes(projectCode);
                       ^---------------------^
/sb/ProjectKudos_1.sol:287:5: Warning: Function state mutability can be restricted to pure
    function grantUintToReason(uint reason) private returns (GrantReason result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:299:5: Warning: Function state mutability can be restricted to pure
    function grantReasonToUint(GrantReason reason) private returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos_1.sol:313:5: Warning: Function state mutability can be restricted to pure
    function strToBytes(string str) private returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
ProjectKudos.getProjectKudosByUsers.users (local variable @ /sb/ProjectKudos_1.sol#204) shadows:
	- ProjectKudos.users (state variable @ /sb/ProjectKudos_1.sol#61)
ProjectKudos.getKudosPerProject.projects (local variable @ /sb/ProjectKudos_1.sol#225) shadows:
	- ProjectKudos.projects (state variable @ /sb/ProjectKudos_1.sol#68)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
ProjectKudos.strToBytes uses assembly (/sb/ProjectKudos_1.sol#313-320)
	- /sb/ProjectKudos_1.sol#317-320
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ProjectKudos.KUDOS_LIMIT_JUDGE should be constant (/sb/ProjectKudos_1.sol#13)
ProjectKudos.KUDOS_LIMIT_USER should be constant (/sb/ProjectKudos_1.sol#16)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/ProjectKudos_1.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#141:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#165:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#315:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#331:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#332:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/ProjectKudos_1.sol#340:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ProjectKudos.register (/sb/ProjectKudos_1.sol#101-115) should be declared external
ProjectKudos.giveKudos (/sb/ProjectKudos_1.sol#125-142) should be declared external
ProjectKudos.grantKudos (/sb/ProjectKudos_1.sol#153-175) should be declared external
ProjectKudos.getProjectKudos (/sb/ProjectKudos_1.sol#189-193) should be declared external
ProjectKudos.getProjectKudosByUsers (/sb/ProjectKudos_1.sol#204-214) should be declared external
ProjectKudos.getKudosPerProject (/sb/ProjectKudos_1.sol#225-229) should be declared external
ProjectKudos.getKudosLeft (/sb/ProjectKudos_1.sol#237-240) should be declared external
ProjectKudos.getKudosGiven (/sb/ProjectKudos_1.sol#248-251) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/ProjectKudos_1.sol:
	- pragma solidity^0.4.0 (/sb/ProjectKudos_1.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ProjectKudos.ProjectKudos' (/sb/ProjectKudos_1.sol#84-92) is not in mixedCase
Variable 'ProjectKudos.KUDOS_LIMIT_JUDGE' (/sb/ProjectKudos_1.sol#13) is not in mixedCase
Variable 'ProjectKudos.KUDOS_LIMIT_USER' (/sb/ProjectKudos_1.sol#16) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/ProjectKudos_1.sol analyzed (1 contracts), 26 result(s) found
