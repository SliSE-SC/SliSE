WARNING:root:You are using solc version 0.6.10, The latest supported version is 0.4.19
INFO:CryticCompile:Compilation warnings/errors on /sb/PayableProxyController_1.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /sb/PayableProxyController_1.sol

Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
    --> /sb/PayableProxyController_1.sol:2431:1:
     |
2431 | contract PayableProxyController is ReentrancyGuard {
     | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
    --> /sb/PayableProxyController_1.sol:2449:5:
     |
2449 |     fallback() external payable {
     |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /sb/PayableProxyController_1.sol:1636:1:
     |
1636 | contract Controller is Initializable, OwnableUpgradeSafe, ReentrancyGuardUpgradeSafe {
     | ^ (Relevant source part starts here and spans across multiple lines).


incomplete push instruction at 4007
incomplete push instruction at 1455
incomplete push instruction at 50
incomplete push instruction at 76
encoding/hex: invalid byte: U+005F '_'
INFO:root:contract /sb/PayableProxyController_1.sol:Address:
INFO:symExec:	============ Results ===========
Traceback (most recent call last):
  File "/oyente/oyente/oyente.py", line 232, in <module>
    main()
  File "/oyente/oyente/oyente.py", line 227, in main
    exit_code = analyze_solidity()
  File "/oyente/oyente/oyente.py", line 110, in analyze_solidity
    results, exit_code = run_solidity_analysis(inputs)
  File "/oyente/oyente/oyente.py", line 87, in run_solidity_analysis
    result, return_code = symExec.run(disasm_file=inp['disasm_file'], source_map=inp['source_map'], source_file=inp['source'])
  File "/oyente/oyente/symExec.py", line 2458, in run
    analyze()
  File "/oyente/oyente/symExec.py", line 2441, in analyze
    run_build_cfg_and_analyze(timeout_cb=timeout_cb)
  File "/oyente/oyente/symExec.py", line 2398, in run_build_cfg_and_analyze
    build_cfg_and_analyze()
  File "/oyente/oyente/symExec.py", line 228, in build_cfg_and_analyze
    full_sym_exec()  # jump targets are constructed on the fly
  File "/oyente/oyente/symExec.py", line 547, in full_sym_exec
    return sym_exec_block(params, 0, 0, 0, -1, 'fallback')
  File "/oyente/oyente/symExec.py", line 612, in sym_exec_block
    sym_exec_ins(params, block, instr, func_call, current_func_name)
  File "/oyente/oyente/symExec.py", line 1858, in sym_exec_ins
    stack.pop(0)
IndexError: pop from empty list
