WARNING:root:You are using solc version 0.4.26, The latest supported version is 0.4.19
INFO:CryticCompile:Compilation warnings/errors on /sb/PromissoryToken_2.sol:
/sb/PromissoryToken_2.sol:90:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PromissoryToken( bytes32 _founderHash, address _cofounderAddress, uint _numOfBackers){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/PromissoryToken_2.sol:104:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != cofounder) throw;
                                     ^---^
/sb/PromissoryToken_2.sol:122:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(sha3(_founderHash) != founderHash) throw;
                                              ^---^
/sb/PromissoryToken_2.sol:140:128: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.sender != cofounder || sha3(_newFounderAddr, founderHash, _oneTimesharedPhrase) != tempHashes[_newFounderAddr]) throw;
                                                                                                                               ^---^
/sb/PromissoryToken_2.sol:166:75: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            _tokenAmount + prepaidUnits + claimedUnits > promissoryUnits) throw;
                                                                          ^---^
/sb/PromissoryToken_2.sol:167:85: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (earlyBackerList.length == numOfBackers && backers[_backer].length == 0) throw ;
                                                                                    ^---^
/sb/PromissoryToken_2.sol:207:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/sb/PromissoryToken_2.sol:221:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastPrice == 0) throw;
                            ^---^
/sb/PromissoryToken_2.sol:228:74: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenAmount + claimedUnits + prepaidUnits > promissoryUnits) throw;
                                                                         ^---^
/sb/PromissoryToken_2.sol:296:84: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if(!withdrawals[_withdrawalID].destination[i].send(amountPerAddr)) throw;
                                                                                   ^---^
/sb/PromissoryToken_2.sol:318:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (this.balance < _totalAmount) throw;
                                         ^---^
/sb/PromissoryToken_2.sol:386:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != founder) throw;
                                   ^---^
/sb/PromissoryToken_2.sol:391:144: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(backers[msg.sender].length == 0 || withdrawals[_withdrawalID].spent == true || withdrawalsVotes[msg.sender][_withdrawalID] == true) throw;
                                                                                                                                               ^---^
/sb/PromissoryToken_2.sol:396:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if(earlyBackerList.length < numOfBackers) throw;
                                                 ^---^
/sb/PromissoryToken_2.sol:404:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/sb/PromissoryToken_2.sol:415:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/PromissoryToken_2.sol:92:23: Warning: "sha3" has been deprecated in favour of "keccak256"
        founderHash = sha3(_founderHash);
                      ^----------------^
/sb/PromissoryToken_2.sol:92:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        founderHash = sha3(_founderHash);
                      ^----------------^
/sb/PromissoryToken_2.sol:92:23: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        founderHash = sha3(_founderHash);
                      ^----------------^
/sb/PromissoryToken_2.sol:107:9: Warning: Invoking events without "emit" prefix is deprecated.
        CofounderSwitchedEvent(_newCofounderAddr);
        ^---------------------------------------^
/sb/PromissoryToken_2.sol:122:12: Warning: "sha3" has been deprecated in favour of "keccak256"
        if(sha3(_founderHash) != founderHash) throw;
           ^----------------^
/sb/PromissoryToken_2.sol:122:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(sha3(_founderHash) != founderHash) throw;
           ^----------------^
/sb/PromissoryToken_2.sol:122:12: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if(sha3(_founderHash) != founderHash) throw;
           ^----------------^
/sb/PromissoryToken_2.sol:124:34: Warning: "sha3" has been deprecated in favour of "keccak256"
        tempHashes[msg.sender] = sha3(msg.sender, founderHash, _oneTimesharedPhrase);
                                 ^-------------------------------------------------^
/sb/PromissoryToken_2.sol:124:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tempHashes[msg.sender] = sha3(msg.sender, founderHash, _oneTimesharedPhrase);
                                 ^-------------------------------------------------^
/sb/PromissoryToken_2.sol:125:9: Warning: Invoking events without "emit" prefix is deprecated.
        FounderSwitchRequestEvent(msg.sender);
        ^-----------------------------------^
/sb/PromissoryToken_2.sol:140:39: Warning: "sha3" has been deprecated in favour of "keccak256"
        if(msg.sender != cofounder || sha3(_newFounderAddr, founderHash, _oneTimesharedPhrase) != tempHashes[_newFounderAddr]) throw;
                                      ^------------------------------------------------------^
/sb/PromissoryToken_2.sol:140:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(msg.sender != cofounder || sha3(_newFounderAddr, founderHash, _oneTimesharedPhrase) != tempHashes[_newFounderAddr]) throw;
                                      ^------------------------------------------------------^
/sb/PromissoryToken_2.sol:144:9: Warning: Invoking events without "emit" prefix is deprecated.
        FounderSwitchedEvent(_newFounderAddr);
        ^-----------------------------------^
/sb/PromissoryToken_2.sol:172:69: Warning: "sha3" has been deprecated in favour of "keccak256"
        backers[_backer].push(backerData(_tokenPrice, _tokenAmount, sha3(_privatePhrase, _backer), true, false, _backerRank));
                                                                    ^---------------------------^
/sb/PromissoryToken_2.sol:172:69: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        backers[_backer].push(backerData(_tokenPrice, _tokenAmount, sha3(_privatePhrase, _backer), true, false, _backerRank));
                                                                    ^---------------------------^
/sb/PromissoryToken_2.sol:177:9: Warning: Invoking events without "emit" prefix is deprecated.
        AddedPrepaidTokensEvent(_backer, backers[_backer].length - 1, _tokenPrice, _tokenAmount);
        ^--------------------------------------------------------------------------------------^
/sb/PromissoryToken_2.sol:199:55: Warning: "sha3" has been deprecated in favour of "keccak256"
           backers[msg.sender][_index].privateHash == sha3( _privatePhrase, msg.sender) &&
                                                      ^-------------------------------^
/sb/PromissoryToken_2.sol:199:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
           backers[msg.sender][_index].privateHash == sha3( _privatePhrase, msg.sender) &&
                                                      ^-------------------------------^
/sb/PromissoryToken_2.sol:205:13: Warning: Invoking events without "emit" prefix is deprecated.
            PrepaidTokensClaimedEvent(msg.sender, _index, _boughtTokensPrice, _tokenAmount);
            ^-----------------------------------------------------------------------------^
/sb/PromissoryToken_2.sol:233:73: Warning: "sha3" has been deprecated in favour of "keccak256"
        backers[msg.sender].push(backerData(discountPrice, tokenAmount, sha3(msg.sender), false, true, 0));
                                                                        ^--------------^
/sb/PromissoryToken_2.sol:233:73: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        backers[msg.sender].push(backerData(discountPrice, tokenAmount, sha3(msg.sender), false, true, 0));
                                                                        ^--------------^
/sb/PromissoryToken_2.sol:233:73: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        backers[msg.sender].push(backerData(discountPrice, tokenAmount, sha3(msg.sender), false, true, 0));
                                                                        ^--------------^
/sb/PromissoryToken_2.sol:237:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensClaimedEvent(msg.sender, backers[msg.sender].length - 1, discountPrice, tokenAmount);
        ^----------------------------------------------------------------------------------------^
/sb/PromissoryToken_2.sol:279:9: Warning: Invoking events without "emit" prefix is deprecated.
        WithdrawalVotedEvent(_withdrawalID, msg.sender, backerStake, withdrawals[_withdrawalID].totalStake);
        ^-------------------------------------------------------------------------------------------------^
/sb/PromissoryToken_2.sol:299:13: Warning: Invoking events without "emit" prefix is deprecated.
            WithdrawalApproved(_withdrawalID,
            ^ (Relevant source part starts here and spans across multiple lines).
/sb/PromissoryToken_2.sol:318:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (this.balance < _totalAmount) throw;
            ^----------^
/sb/PromissoryToken_2.sol:328:9: Warning: Invoking events without "emit" prefix is deprecated.
        WithdrawalCreatedEvent(withdrawalID, _totalAmount, _reason);
        ^---------------------------------------------------------^
/sb/PromissoryToken_2.sol:355:13: Warning: Invoking events without "emit" prefix is deprecated.
            RedeemEvent(_backerAddr, totalTokens);
            ^-----------------------------------^
/sb/PromissoryToken_2.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function PromissoryToken( bytes32 _founderHash, address _cofounderAddress, uint _numOfBackers){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/PromissoryToken_2.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function founderSwitchRequest(bytes32 _founderHash, bytes32 _oneTimesharedPhrase) returns (bool success){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/PromissoryToken_2.sol:251:5: Warning: No visibility specified. Defaulting to "public". 
    function checkBalance(address _backerAddress, uint index) constant returns (uint, uint, bytes32, bool, bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/PromissoryToken_2.sol:338:5: Warning: No visibility specified. Defaulting to "public". 
    function redeem(uint _amount, address _backerAddr) returns(bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/PromissoryToken_2.sol:414:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:root:contract /sb/PromissoryToken_2.sol:PromissoryToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 56.8%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/sb/PromissoryToken_2.sol:376:9: Warning: Integer Underflow.
        return (
        ^
Spanning multiple lines.
Integer Underflow occurs if:
    _withdrawalID = 0
    return (
            withdrawals[_withdrawalID].Amount,
            withdrawals[_withdrawalID].approved,
            withdrawals[_withdrawalID].reason,
            withdrawals[_withdrawalID].backerApprovals,
            withdrawals[_withdrawalID].totalStake,
            withdrawals[_withdrawalID].destination) = 1
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:172:69: Warning: Integer Underflow.
        backers[_backer].push(backerData(_tokenPrice, _tokenAmount, sha3(_privatePhrase, _backer)
Integer Underflow occurs if:
    _tokenAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[_backer].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    numOfBackers = 0
    earlyBackerList.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    promissoryUnits = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    claimedUnits = 0
    prepaidUnits = 0
    _tokenPrice = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    founder = 0
    claimedPrepaidUnits = 0
/sb/PromissoryToken_2.sol:79:5: Warning: Integer Underflow.
    withdrawalData[] public withdrawals
/sb/PromissoryToken_2.sol:199:55: Warning: Integer Underflow.
           backers[msg.sender][_index].privateHash == sha3( _privatePhrase, msg.sender)
Integer Underflow occurs if:
    backers[msg.sender][_index].prepaid = 255
    _index = 0
    earlyBackerList.length = 0
    backers[msg.sender][_index] = 1
    numOfBackers = 0
    _boughtTokensPrice = 0
    backers[msg.sender][_index].tokenPrice = 0
    _tokenAmount = 0
    backers[msg.sender][_index].tokenAmount = 0
INFO:symExec:/sb/PromissoryToken_2.sol:377:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID]
Integer Overflow occurs if:
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:378:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID]
Integer Overflow occurs if:
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:378:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID].approved
Integer Overflow occurs if:
    _withdrawalID = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:379:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID]
Integer Overflow occurs if:
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:379:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID].reason
Integer Overflow occurs if:
    _withdrawalID = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:380:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID]
Integer Overflow occurs if:
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:380:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID].backerApprovals
Integer Overflow occurs if:
    _withdrawalID = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:381:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID]
Integer Overflow occurs if:
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:381:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID].totalStake
Integer Overflow occurs if:
    _withdrawalID = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:382:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID]
Integer Overflow occurs if:
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:382:13: Warning: Integer Overflow.
            withdrawals[_withdrawalID].destination
Integer Overflow occurs if:
    _withdrawalID = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:65:5: Warning: Integer Overflow.
    address[] public backersAddresses
/sb/PromissoryToken_2.sol:320:29: Warning: Integer Overflow.
        uint withdrawalID = withdrawals.length++
Integer Overflow occurs if:
    withdrawals.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    _totalAmount = 0
    founder = 0
/sb/PromissoryToken_2.sol:172:69: Warning: Integer Overflow.
        backers[_backer].push(backerData(_tokenPrice, _tokenAmount, sha3(_privatePhrase, _backer)
Integer Overflow occurs if:
    _tokenAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[_backer].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    numOfBackers = 0
    earlyBackerList.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    promissoryUnits = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    claimedUnits = 0
    prepaidUnits = 0
    _tokenPrice = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    founder = 0
    claimedPrepaidUnits = 0
/sb/PromissoryToken_2.sol:253:13: Warning: Integer Overflow.
            backers[_backerAddress][index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    backers[_backerAddress][index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/sb/PromissoryToken_2.sol:254:13: Warning: Integer Overflow.
            backers[_backerAddress][index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    backers[_backerAddress][index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/sb/PromissoryToken_2.sol:254:13: Warning: Integer Overflow.
            backers[_backerAddress][index].tokenAmount
Integer Overflow occurs if:
    index = 0
    backers[_backerAddress][index] = 1
/sb/PromissoryToken_2.sol:255:13: Warning: Integer Overflow.
            backers[_backerAddress][index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    backers[_backerAddress][index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/sb/PromissoryToken_2.sol:255:13: Warning: Integer Overflow.
            backers[_backerAddress][index].privateHash
Integer Overflow occurs if:
    index = 0
    backers[_backerAddress][index] = 1
/sb/PromissoryToken_2.sol:256:13: Warning: Integer Overflow.
            backers[_backerAddress][index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    backers[_backerAddress][index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/sb/PromissoryToken_2.sol:256:13: Warning: Integer Overflow.
            backers[_backerAddress][index].prepaid
Integer Overflow occurs if:
    index = 0
    backers[_backerAddress][index] = 1
/sb/PromissoryToken_2.sol:257:13: Warning: Integer Overflow.
            backers[_backerAddress][index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    backers[_backerAddress][index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/sb/PromissoryToken_2.sol:257:13: Warning: Integer Overflow.
            backers[_backerAddress][index].claimed
Integer Overflow occurs if:
    index = 0
    backers[_backerAddress][index] = 1
/sb/PromissoryToken_2.sol:79:5: Warning: Integer Overflow.
    withdrawalData[] public withdrawals
/sb/PromissoryToken_2.sol:66:5: Warning: Integer Overflow.
    mapping(address => backerData[]) public backers
/sb/PromissoryToken_2.sol:346:17: Warning: Integer Overflow.
            if (backers[_backerAddr][i].claimed
Integer Overflow occurs if:
    backers[_backerAddr].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backersRedeemed[_backerAddr] = 0
/sb/PromissoryToken_2.sol:349:28: Warning: Integer Overflow.
            totalTokens += backers[_backerAddr][i].tokenAmount
Integer Overflow occurs if:
    backers[_backerAddr][i].claimed = 65280
    backers[_backerAddr].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backersRedeemed[_backerAddr] = 0
/sb/PromissoryToken_2.sol:346:17: Warning: Integer Overflow.
            if (backers[_backerAddr][i]
Integer Overflow occurs if:
    backers[_backerAddr].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[_backerAddr][i].claimed = 65280
    backersRedeemed[_backerAddr] = 0
/sb/PromissoryToken_2.sol:349:28: Warning: Integer Overflow.
            totalTokens += backers[_backerAddr][i]
Integer Overflow occurs if:
    backers[_backerAddr].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[_backerAddr][i].claimed = 65280
    backers[_backerAddr][i].claimed = 65280
    backersRedeemed[_backerAddr] = 0
/sb/PromissoryToken_2.sol:349:13: Warning: Integer Overflow.
            totalTokens += backers[_backerAddr][i].tokenAmount
Integer Overflow occurs if:
    backers[_backerAddr].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[_backerAddr][i].tokenAmount = 1
    backers[_backerAddr][i].tokenAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[_backerAddr][i].claimed = 65280
    backers[_backerAddr][i].claimed = 65280
    backersRedeemed[_backerAddr] = 0
/sb/PromissoryToken_2.sol:44:5: Warning: Integer Overflow.
    address [] public previousFounders
/sb/PromissoryToken_2.sol:274:28: Warning: Integer Overflow.
            backerStake += backers[msg.sender][i].tokenAmount
Integer Overflow occurs if:
    _withdrawalID = 0
    withdrawalsVotes[msg.sender][_withdrawalID] = 0
    withdrawals[_withdrawalID].spent = 0
    withdrawals[_withdrawalID] = 1
    backers[msg.sender].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/sb/PromissoryToken_2.sol:276:9: Warning: Integer Overflow.
        withdrawals[_withdrawalID]
Integer Overflow occurs if:
    backers[msg.sender].length = 1
    _withdrawalID = 19298681539552699258185503286070253854997628854965648752103403391503744456022
    withdrawalsVotes[msg.sender][_withdrawalID] = 0
    withdrawals[_withdrawalID].spent = 0
    withdrawals[_withdrawalID] = 19298681539552699258185503286070253854997628854965648752103403391503744456023
/sb/PromissoryToken_2.sol:276:9: Warning: Integer Overflow.
        withdrawals[_withdrawalID].backerApprovals
Integer Overflow occurs if:
    backers[msg.sender].length = 1
    _withdrawalID = 0
    withdrawalsVotes[msg.sender][_withdrawalID] = 0
    withdrawals[_withdrawalID].spent = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:274:28: Warning: Integer Overflow.
            backerStake += backers[msg.sender][i]
Integer Overflow occurs if:
    backers[msg.sender].length = 115792089236894946256896756261896235742535302936364983657855387562895885729791
    _withdrawalID = 0
    withdrawalsVotes[msg.sender][_withdrawalID] = 0
    withdrawals[_withdrawalID].spent = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:274:13: Warning: Integer Overflow.
            backerStake += backers[msg.sender][i].tokenAmount
Integer Overflow occurs if:
    backers[msg.sender].length = 115792089237312904414456342596603597914904869964630598567726316848186432421887
    _withdrawalID = 0
    backers[msg.sender][i].tokenAmount = 1
    backers[msg.sender][i].tokenAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    withdrawalsVotes[msg.sender][_withdrawalID] = 0
    withdrawals[_withdrawalID].spent = 0
    withdrawals[_withdrawalID] = 1
/sb/PromissoryToken_2.sol:64:5: Warning: Integer Overflow.
    address[] public earlyBackerList
/sb/PromissoryToken_2.sol:202:13: Warning: Integer Overflow.
            backers[msg.sender][_index]
Integer Overflow occurs if:
    _index = 115792089237303031387112415360350668099809525861600547410027604696471978377215
    backers[msg.sender][_index].prepaid = 255
    earlyBackerList.length = 0
    backers[msg.sender][_index] = 115792089237303031387112415360350668099809525861600547410027604696471978377216
    numOfBackers = 0
    _backerRank = 0
    backers[msg.sender][_index].backerRank = 0
    backers[msg.sender][_index].privateHash = 0
    _boughtTokensPrice = 0
    backers[msg.sender][_index].tokenPrice = 0
    _tokenAmount = 0
    backers[msg.sender][_index].tokenAmount = 0
/sb/PromissoryToken_2.sol:202:13: Warning: Integer Overflow.
            backers[msg.sender][_index].claimed
Integer Overflow occurs if:
    backers[msg.sender][_index].prepaid = 255
    _index = 0
    earlyBackerList.length = 0
    backers[msg.sender][_index] = 1
    numOfBackers = 0
    _backerRank = 0
    backers[msg.sender][_index].backerRank = 0
    backers[msg.sender][_index].privateHash = 0
    _boughtTokensPrice = 0
    backers[msg.sender][_index].tokenPrice = 0
    _tokenAmount = 0
    backers[msg.sender][_index].tokenAmount = 0
/sb/PromissoryToken_2.sol:203:13: Warning: Integer Overflow.
            claimedPrepaidUnits += _tokenAmount
Integer Overflow occurs if:
    backers[msg.sender][_index].prepaid = 255
    _index = 0
    claimedPrepaidUnits = 1
    earlyBackerList.length = 0
    _tokenAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    backers[msg.sender][_index] = 1
    numOfBackers = 0
    _backerRank = 0
    backers[msg.sender][_index].backerRank = 0
    backers[msg.sender][_index].privateHash = 0
    _boughtTokensPrice = 0
    backers[msg.sender][_index].tokenPrice = 0
    backers[msg.sender][_index].tokenAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/sb/PromissoryToken_2.sol:205:13: Warning: Integer Overflow.
            PrepaidTokensClaimedEvent(msg.sender, _index, _boughtTokensPrice, _tokenAmount)
Integer Overflow occurs if:
    backers[msg.sender][_index].prepaid = 255
    _index = 0
    earlyBackerList.length = 0
    backers[msg.sender][_index] = 1
    numOfBackers = 0
    _backerRank = 0
    backers[msg.sender][_index].backerRank = 0
    backers[msg.sender][_index].privateHash = 0
    _boughtTokensPrice = 0
    backers[msg.sender][_index].tokenPrice = 0
    _tokenAmount = 0
    backers[msg.sender][_index].tokenAmount = 0
INFO:symExec:	====== Analysis Completed ======
