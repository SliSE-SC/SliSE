{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 12,
            "contract": "Math",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c171d8ae5d29bbe04734051b900be743019a8f91b1f7ae69c3f521b1052b068264736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "all_contract/FixedRateSwap_2.sol",
            "function": "constructor",
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Low"
        },
        {
            "address": 12,
            "contract": "SafeERC20",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5a887d92ffac882252ccb95b11b19f5557f9086d920cc9c00d6413a6de01ceb64736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "all_contract/FixedRateSwap_2.sol",
            "function": "constructor",
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Low"
        },
        {
            "address": 13,
            "contract": "ERC20",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801562000010575f80fd5b5060405162001756380380620017568339818101604052810190620000369190620001e7565b8160039081620000479190620004a1565b508060049081620000599190620004a1565b50505062000585565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c3826200007b565b810181811067ffffffffffffffff82111715620000e557620000e46200008b565b5b80604052505050565b5f620000f962000062565b9050620001078282620000b8565b919050565b5f67ffffffffffffffff8211156200012957620001286200008b565b5b62000134826200007b565b9050602081019050919050565b5f5b838110156200016057808201518184015260208101905062000143565b5f8484015250505050565b5f620001816200017b846200010c565b620000ee565b905082815260208101848484011115620001a0576200019f62000077565b5b620001ad84828562000141565b509392505050565b5f82601f830112620001cc57620001cb62000073565b5b8151620001de8482602086016200016b565b91505092915050565b5f80604083850312156200020057620001ff6200006b565b5b5f83015167ffffffffffffffff81111562000220576200021f6200006f565b5b6200022e85828601620001b5565b925050602083015167ffffffffffffffff8111156200025257620002516200006f565b5b6200026085828601620001b5565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002b957607f821691505b602082108103620002cf57620002ce62000274565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f6565b6200033f8683620002f6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000389620003836200037d8462000357565b62000360565b62000357565b9050919050565b5f819050919050565b620003a48362000369565b620003bc620003b38262000390565b84845462000302565b825550505050565b5f90565b620003d2620003c4565b620003df81848462000399565b505050565b5b818110156200040657620003fa5f82620003c8565b600181019050620003e5565b5050565b601f82111562000455576200041f81620002d5565b6200042a84620002e7565b810160208510156200043a578190505b620004526200044985620002e7565b830182620003e4565b50505b505050565b5f82821c905092915050565b5f620004775f19846008026200045a565b1980831691505092915050565b5f62000491838362000466565b9150826002028217905092915050565b620004ac826200026a565b67ffffffffffffffff811115620004c857620004c76200008b565b5b620004d48254620002a1565b620004e18282856200040a565b5f60209050601f83116001811462000517575f841562000502578287015190505b6200050e858262000484565b8655506200057d565b601f1984166200052786620002d5565b5f5b82811015620005505784890151825560018201915060208501945060208101905062000529565b868310156200057057848901516200056c601f89168262000466565b8355505b6001600288020188555050505b505050505050565b6111c380620005935f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea2646970667358221220644354c3888c1ca212a594b72ec69e8e9bccceb41ddaaf96a0efb210d8c65fb364736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "all_contract/FixedRateSwap_2.sol",
            "function": "constructor",
            "line": 827,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 13,
            "contract": "FixedRateSwap",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x60e060405234801562000010575f80fd5b506040516200433038038062004330833981810160405281019062000036919062000487565b8282816003908162000049919062000780565b5080600490816200005b919062000780565b5050508473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508060ff1660c08160ff16815250508060ff168573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000122573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000148919062000864565b60ff16146200018e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018590620008f2565b60405180910390fd5b8060ff168473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001dc573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000202919062000864565b60ff161462000248576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200023f9062000960565b60405180910390fd5b505050505062000980565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200028f8262000264565b9050919050565b5f620002a28262000283565b9050919050565b620002b48162000296565b8114620002bf575f80fd5b50565b5f81519050620002d281620002a9565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200032882620002e0565b810181811067ffffffffffffffff821117156200034a5762000349620002f0565b5b80604052505050565b5f6200035e62000253565b90506200036c82826200031d565b919050565b5f67ffffffffffffffff8211156200038e576200038d620002f0565b5b6200039982620002e0565b9050602081019050919050565b5f5b83811015620003c5578082015181840152602081019050620003a8565b5f8484015250505050565b5f620003e6620003e08462000371565b62000353565b905082815260208101848484011115620004055762000404620002dc565b5b62000412848285620003a6565b509392505050565b5f82601f830112620004315762000430620002d8565b5b815162000443848260208601620003d0565b91505092915050565b5f60ff82169050919050565b62000463816200044c565b81146200046e575f80fd5b50565b5f81519050620004818162000458565b92915050565b5f805f805f60a08688031215620004a357620004a26200025c565b5b5f620004b288828901620002c2565b9550506020620004c588828901620002c2565b945050604086015167ffffffffffffffff811115620004e957620004e862000260565b5b620004f7888289016200041a565b935050606086015167ffffffffffffffff8111156200051b576200051a62000260565b5b62000529888289016200041a565b92505060806200053c8882890162000471565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200059857607f821691505b602082108103620005ae57620005ad62000553565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005d5565b6200061e8683620005d5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000668620006626200065c8462000636565b6200063f565b62000636565b9050919050565b5f819050919050565b620006838362000648565b6200069b62000692826200066f565b848454620005e1565b825550505050565b5f90565b620006b1620006a3565b620006be81848462000678565b505050565b5b81811015620006e557620006d95f82620006a7565b600181019050620006c4565b5050565b601f8211156200073457620006fe81620005b4565b6200070984620005c6565b8101602085101562000719578190505b620007316200072885620005c6565b830182620006c3565b50505b505050565b5f82821c905092915050565b5f620007565f198460080262000739565b1980831691505092915050565b5f62000770838362000745565b9150826002028217905092915050565b6200078b8262000549565b67ffffffffffffffff811115620007a757620007a6620002f0565b5b620007b3825462000580565b620007c0828285620006e9565b5f60209050601f831160018114620007f6575f8415620007e1578287015190505b620007ed858262000763565b8655506200085c565b601f1984166200080686620005b4565b5f5b828110156200082f5784890151825560018201915060208501945060208101905062000808565b868310156200084f57848901516200084b601f89168262000745565b8355505b6001600288020188555050505b505050505050565b5f602082840312156200087c576200087b6200025c565b5b5f6200088b8482850162000471565b91505092915050565b5f82825260208201905092915050565b7f4652533a20746f6b656e3020646563696d616c73206d69736d617463680000005f82015250565b5f620008da601d8362000894565b9150620008e782620008a4565b602082019050919050565b5f6020820190508181035f8301526200090b81620008cc565b9050919050565b7f4652533a20746f6b656e3120646563696d616c73206d69736d617463680000005f82015250565b5f62000948601d8362000894565b9150620009558262000912565b602082019050919050565b5f6020820190508181035f83015262000979816200093a565b9050919050565b60805160a05160c05161391562000a1b5f395f61077501525f818161097801528181610ae301528181610c4801528181610e3801528181611025015281816110ad0152818161130b015281816113e00152611e1301525f81816105b0015281816108c801528181610a8f01528181610c6901528181610e1701528181611004015281816112b7015281816114010152611d7801526139155ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c806370a08231116100b6578063a9059cbb1161007a578063a9059cbb146103ed578063bd5b56421461041d578063d21220a71461044d578063dc7c75401461046b578063dd62ed3e1461049c578063e9b4cfc7146104cc57610140565b806370a082311461030e5780638999541a1461033e57806393bd3cd51461036e57806395d89b411461039f578063a457c2d7146103bd57610140565b806323b872dd1161010857806323b872dd146101fe5780632e1a7d4d1461022e578063313ce5671461025f5780633576f6cc1461027d57806339509351146102ae578063404a1f8a146102de57610140565b806306fdde0314610144578063095ea7b3146101625780630dfe16811461019257806318160ddd146101b05780631e1401f8146101ce575b5f80fd5b61014c6104fc565b6040516101599190612665565b60405180910390f35b61017c60048036038101906101779190612716565b61058c565b604051610189919061276e565b60405180910390f35b61019a6105ae565b6040516101a791906127e2565b60405180910390f35b6101b86105d2565b6040516101c5919061280a565b60405180910390f35b6101e860048036038101906101e3919061285e565b6105db565b6040516101f5919061280a565b60405180910390f35b610218600480360381019061021391906128ae565b61072b565b604051610225919061276e565b60405180910390f35b610248600480360381019061024391906128fe565b610759565b604051610256929190612929565b60405180910390f35b610267610772565b604051610274919061296b565b60405180910390f35b61029760048036038101906102929190612984565b610799565b6040516102a5929190612929565b60405180910390f35b6102c860048036038101906102c39190612716565b610b30565b6040516102d5919061276e565b60405180910390f35b6102f860048036038101906102f39190612984565b610b66565b604051610305919061280a565b60405180910390f35b610328600480360381019061032391906129c2565b610cf0565b604051610335919061280a565b60405180910390f35b61035860048036038101906103539190612984565b610d35565b604051610365919061280a565b60405180910390f35b610388600480360381019061038391906129ed565b610ebf565b604051610396929190612929565b60405180910390f35b6103a7610ed7565b6040516103b49190612665565b60405180910390f35b6103d760048036038101906103d29190612716565b610f67565b6040516103e4919061276e565b60405180910390f35b61040760048036038101906104029190612716565b610fdc565b604051610414919061276e565b60405180910390f35b610437600480360381019061043291906128fe565b610ffe565b604051610444919061280a565b60405180910390f35b6104556110ab565b60405161046291906127e2565b60405180910390f35b61048560048036038101906104809190612a2b565b6110cf565b604051610493929190612929565b60405180910390f35b6104b660048036038101906104b19190612a7b565b611358565b6040516104c3919061280a565b60405180910390f35b6104e660048036038101906104e191906128fe565b6113da565b6040516104f3919061280a565b60405180910390f35b60606003805461050b90612ae6565b80601f016020809104026020016040519081016040528092919081815260200182805461053790612ae6565b80156105825780601f1061055957610100808354040283529160200191610582565b820191905f5260205f20905b81548152906001019060200180831161056557829003601f168201915b5050505050905090565b5f80610596611487565b90506105a381858561148e565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f808473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106169190612b25565b602060405180830381865afa158015610631573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106559190612b52565b90505f8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106919190612b25565b602060405180830381865afa1580156106ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106d09190612b52565b905080841115610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90612bc7565b60405180910390fd5b610720828286611651565b925050509392505050565b5f80610735611487565b9050610742858285611736565b61074d8585856117c1565b60019150509392505050565b5f806107658333610799565b8092508193505050915091565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f805f84116107dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d490612c2f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290612c97565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090612cff565b60405180910390fd5b5f6108c26105d2565b905080857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161091f9190612b25565b602060405180830381865afa15801561093a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095e9190612b52565b6109689190612d4a565b6109729190612db8565b925080857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109cf9190612b25565b602060405180830381865afa1580156109ea573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0e9190612b52565b610a189190612d4a565b610a229190612db8565b9150610a2e3386611a2d565b3373ffffffffffffffffffffffffffffffffffffffff167f650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e848488604051610a7893929190612de8565b60405180910390a25f831115610ad457610ad384847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611bf09092919063ffffffff16565b5b5f821115610b2857610b2784837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611bf09092919063ffffffff16565b5b509250929050565b5f80610b3a611487565b9050610b5b818585610b4c8589611358565b610b569190612e1d565b61148e565b600191505092915050565b5f3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcc90612e9a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90612f02565b60405180910390fd5b610c8f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008585611c76565b90503373ffffffffffffffffffffffffffffffffffffffff167f803540962ed9acbf87226c32486d71e1c86c2bdb208e771bab2fd8a626f61e8982610cd390612f29565b85604051610ce2929190612f7e565b60405180910390a292915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b90612e9a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0990612f02565b60405180910390fd5b610e5e7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008585611c76565b90503373ffffffffffffffffffffffffffffffffffffffff167f803540962ed9acbf87226c32486d71e1c86c2bdb208e771bab2fd8a626f61e898483610ea390612f29565b604051610eb1929190612f7e565b60405180910390a292915050565b5f80610ecc8433856110cf565b915091509250929050565b606060048054610ee690612ae6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1290612ae6565b8015610f5d5780601f10610f3457610100808354040283529160200191610f5d565b820191905f5260205f20905b815481529060010190602001808311610f4057829003601f168201915b5050505050905090565b5f80610f71611487565b90505f610f7e8286611358565b905083811015610fc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fba90613015565b60405180910390fd5b610fd0828686840361148e565b60019250505092915050565b5f80610fe6611487565b9050610ff38185856117c1565b600191505092915050565b5f61104b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008433611c76565b90503373ffffffffffffffffffffffffffffffffffffffff167f803540962ed9acbf87226c32486d71e1c86c2bdb208e771bab2fd8a626f61e89838361109090612f29565b60405161109e929190612f7e565b60405180910390a2919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f8511611113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110a90612c2f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117890612c97565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e690612cff565b60405180910390fd5b670de0b6b3a764000083111561123a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112319061307d565b60405180910390fd5b6112448584611d68565b80925081935050506112563386611a2d565b3373ffffffffffffffffffffffffffffffffffffffff167f650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e8383886040516112a093929190612de8565b60405180910390a25f8211156112fc576112fb84837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611bf09092919063ffffffff16565b5b5f8111156113505761134f84827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611bf09092919063ffffffff16565b5b935093915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f6114277f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008433611c76565b90503373ffffffffffffffffffffffffffffffffffffffff167f803540962ed9acbf87226c32486d71e1c86c2bdb208e771bab2fd8a626f61e898261146b90612f29565b8460405161147a929190612f7e565b60405180910390a2919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f39061310b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361156a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156190613199565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611644919061280a565b60405180910390a3505050565b5f8083850190505f8186670de0b6b3a7640000028161167357611672612d8b565b5b0490505f82858801670de0b6b3a7640000028161169357611692612d8b565b5b0490505f85670de0b6b3a76400000290505f81856116b085611fa8565b672ef1cef240e848b8026116c387611fa8565b672ef1cef240e848b8028886670de05bc096e9c00002816116e7576116e6612d8b565b5b04010302816116f9576116f8612d8b565b5b049050670de0b6b3a764000061171782670de0b6b3a7640000612071565b88028161172757611726612d8b565b5b04955050505050509392505050565b5f6117418484611358565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117bb57818110156117ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a490613201565b60405180910390fd5b6117ba848484840361148e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361182f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118269061328f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361189d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118949061331d565b60405180910390fd5b6118a8838383612089565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561192b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611922906133ab565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a14919061280a565b60405180910390a3611a2784848461208e565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9290613439565b60405180910390fd5b611aa6825f83612089565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611b29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b20906134c7565b60405180910390fd5b8181035f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160025f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611bd8919061280a565b60405180910390a3611beb835f8461208e565b505050565b611c718363a9059cbb60e01b8484604051602401611c0f9291906134e5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612093565b505050565b5f808311611cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb090613556565b60405180910390fd5b611cc48585856105db565b90505f8111611d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cff906135be565b60405180910390fd5b611d353330858873ffffffffffffffffffffffffffffffffffffffff16612158909392919063ffffffff16565b611d6082828673ffffffffffffffffffffffffffffffffffffffff16611bf09092919063ffffffff16565b949350505050565b5f805f611d736105d2565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611dcf9190612b25565b602060405180830381865afa158015611dea573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e0e9190612b52565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e6a9190612b25565b602060405180830381865afa158015611e85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ea99190612b52565b90505f838884611eb99190612d4a565b611ec39190612db8565b90505f848984611ed39190612d4a565b611edd9190612db8565b90505f8183611eec9190612e1d565b670de0b6b3a764000084611f009190612d4a565b611f0a9190612db8565b905080891015611f4457611f3783838588611f2591906135dc565b8588611f3191906135dc565b8d6121e1565b8098508199505050611f9b565b80891115611f8f57611f8282848487611f5d91906135dc565b8689611f6991906135dc565b8d670de0b6b3a7640000611f7d91906135dc565b6121e1565b8099508198505050611f9a565b828280985081995050505b5b5050505050509250929050565b5f670656e7dd8da1c9cf821115611fcb57670656e7dd8da1c9cf82039050611fd9565b81670656e7dd8da1c9cf0390505b670de0b6b3a764000081820281611ff357611ff2612d8b565b5b0490505f670de0b6b3a76400008283028161201157612010612d8b565b5b049050670de0b6b3a76400008182028161202e5761202d612d8b565b5b049050670de0b6b3a76400008182028161204b5761204a612d8b565b5b049050670de0b6b3a76400008183028161206857612067612d8b565b5b04915050919050565b5f81831061207f5781612081565b825b905092915050565b505050565b505050565b5f6120f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124049092919063ffffffff16565b90505f8151111561215357808060200190518101906121139190613639565b612152576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612149906136d4565b60405180910390fd5b5b505050565b6121db846323b872dd60e01b858585604051602401612179939291906136f2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612093565b50505050565b5f805f851415806121f257505f8414155b612231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222890613771565b60405180910390fd5b5f8303612258575f61224486868a611651565b8761224f9190612e1d565b915091506123fa565b5f83670de0b6b3a764000061226d91906135dc565b90505f670de0b6b3a764000085896122859190612d4a565b86670de0b6b3a764000061229991906135dc565b8b6122a49190612d4a565b6122ae91906135dc565b6122b89190612db8565b90505f6103e86103e6836122cc9190612d4a565b6122d69190612db8565b90505f6122fd6103e86103ea856122ed9190612d4a565b6122f79190612db8565b8c612071565b90505f61230b8a8a86611651565b90505f612330858e61231d91906135dc565b838e6123299190612e1d565b8b8961241b565b90505b826001856123419190612e1d565b10156123d7575f81131561237157849350600283866123609190612e1d565b61236a9190612db8565b94506123a1565b5f81121561239b578492506002858561238a9190612e1d565b6123949190612db8565b94506123a0565b6123d7565b5b6123ac8b8b87611651565b91506123d0858e6123bd91906135dc565b838e6123c99190612e1d565b8b8961241b565b9050612333565b848d6123e391906135dc565b828d6123ef9190612e1d565b975097505050505050505b9550959350505050565b606061241284845f8561242d565b90509392505050565b5f828402828602039050949350505050565b606082471015612472576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612469906137ff565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff16858760405161249a9190613861565b5f6040518083038185875af1925050503d805f81146124d4576040519150601f19603f3d011682016040523d82523d5f602084013e6124d9565b606091505b50915091506124ea878383876124f6565b92505050949350505050565b60608315612557575f83510361254f5761250f8561256a565b61254e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612545906138c1565b60405180910390fd5b5b829050612562565b612561838361258c565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f8251111561259e5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125d29190612665565b60405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156126125780820151818401526020810190506125f7565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612637826125db565b61264181856125e5565b93506126518185602086016125f5565b61265a8161261d565b840191505092915050565b5f6020820190508181035f83015261267d818461262d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6126b282612689565b9050919050565b6126c2816126a8565b81146126cc575f80fd5b50565b5f813590506126dd816126b9565b92915050565b5f819050919050565b6126f5816126e3565b81146126ff575f80fd5b50565b5f81359050612710816126ec565b92915050565b5f806040838503121561272c5761272b612685565b5b5f612739858286016126cf565b925050602061274a85828601612702565b9150509250929050565b5f8115159050919050565b61276881612754565b82525050565b5f6020820190506127815f83018461275f565b92915050565b5f819050919050565b5f6127aa6127a56127a084612689565b612787565b612689565b9050919050565b5f6127bb82612790565b9050919050565b5f6127cc826127b1565b9050919050565b6127dc816127c2565b82525050565b5f6020820190506127f55f8301846127d3565b92915050565b612804816126e3565b82525050565b5f60208201905061281d5f8301846127fb565b92915050565b5f61282d826126a8565b9050919050565b61283d81612823565b8114612847575f80fd5b50565b5f8135905061285881612834565b92915050565b5f805f6060848603121561287557612874612685565b5b5f6128828682870161284a565b93505060206128938682870161284a565b92505060406128a486828701612702565b9150509250925092565b5f805f606084860312156128c5576128c4612685565b5b5f6128d2868287016126cf565b93505060206128e3868287016126cf565b92505060406128f486828701612702565b9150509250925092565b5f6020828403121561291357612912612685565b5b5f61292084828501612702565b91505092915050565b5f60408201905061293c5f8301856127fb565b61294960208301846127fb565b9392505050565b5f60ff82169050919050565b61296581612950565b82525050565b5f60208201905061297e5f83018461295c565b92915050565b5f806040838503121561299a57612999612685565b5b5f6129a785828601612702565b92505060206129b8858286016126cf565b9150509250929050565b5f602082840312156129d7576129d6612685565b5b5f6129e4848285016126cf565b91505092915050565b5f8060408385031215612a0357612a02612685565b5b5f612a1085828601612702565b9250506020612a2185828601612702565b9150509250929050565b5f805f60608486031215612a4257612a41612685565b5b5f612a4f86828701612702565b9350506020612a60868287016126cf565b9250506040612a7186828701612702565b9150509250925092565b5f8060408385031215612a9157612a90612685565b5b5f612a9e858286016126cf565b9250506020612aaf858286016126cf565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612afd57607f821691505b602082108103612b1057612b0f612ab9565b5b50919050565b612b1f816126a8565b82525050565b5f602082019050612b385f830184612b16565b92915050565b5f81519050612b4c816126ec565b92915050565b5f60208284031215612b6757612b66612685565b5b5f612b7484828501612b3e565b91505092915050565b7f696e70757420616d6f756e7420697320746f6f206269670000000000000000005f82015250565b5f612bb16017836125e5565b9150612bbc82612b7d565b602082019050919050565b5f6020820190508181035f830152612bde81612ba5565b9050919050565b7f456d707479207769746864726177616c206973206e6f7420616c6c6f776564005f82015250565b5f612c19601f836125e5565b9150612c2482612be5565b602082019050919050565b5f6020820190508181035f830152612c4681612c0d565b9050919050565b7f5769746864726177616c20746f207468697320697320666f7262696464656e005f82015250565b5f612c81601f836125e5565b9150612c8c82612c4d565b602082019050919050565b5f6020820190508181035f830152612cae81612c75565b9050919050565b7f5769746864726177616c20746f207a65726f20697320666f7262696464656e005f82015250565b5f612ce9601f836125e5565b9150612cf482612cb5565b602082019050919050565b5f6020820190508181035f830152612d1681612cdd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612d54826126e3565b9150612d5f836126e3565b9250828202612d6d816126e3565b91508282048414831517612d8457612d83612d1d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612dc2826126e3565b9150612dcd836126e3565b925082612ddd57612ddc612d8b565b5b828204905092915050565b5f606082019050612dfb5f8301866127fb565b612e0860208301856127fb565b612e1560408301846127fb565b949350505050565b5f612e27826126e3565b9150612e32836126e3565b9250828201905080821115612e4a57612e49612d1d565b5b92915050565b7f5377617020746f207468697320697320666f7262696464656e000000000000005f82015250565b5f612e846019836125e5565b9150612e8f82612e50565b602082019050919050565b5f6020820190508181035f830152612eb181612e78565b9050919050565b7f5377617020746f207a65726f20697320666f7262696464656e000000000000005f82015250565b5f612eec6019836125e5565b9150612ef782612eb8565b602082019050919050565b5f6020820190508181035f830152612f1981612ee0565b9050919050565b5f819050919050565b5f612f3382612f20565b91507f80000000000000000000000000000000000000000000000000000000000000008203612f6557612f64612d1d565b5b815f039050919050565b612f7881612f20565b82525050565b5f604082019050612f915f830185612f6f565b612f9e6020830184612f6f565b9392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f612fff6025836125e5565b915061300a82612fa5565b604082019050919050565b5f6020820190508181035f83015261302c81612ff3565b9050919050565b7f526174696f2073686f756c6420626520696e205b302c20315d000000000000005f82015250565b5f6130676019836125e5565b915061307282613033565b602082019050919050565b5f6020820190508181035f8301526130948161305b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6130f56024836125e5565b91506131008261309b565b604082019050919050565b5f6020820190508181035f830152613122816130e9565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6131836022836125e5565b915061318e82613129565b604082019050919050565b5f6020820190508181035f8301526131b081613177565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f6131eb601d836125e5565b91506131f6826131b7565b602082019050919050565b5f6020820190508181035f830152613218816131df565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6132796025836125e5565b91506132848261321f565b604082019050919050565b5f6020820190508181035f8301526132a68161326d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6133076023836125e5565b9150613312826132ad565b604082019050919050565b5f6020820190508181035f830152613334816132fb565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f6133956026836125e5565b91506133a08261333b565b604082019050919050565b5f6020820190508181035f8301526133c281613389565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f6134236021836125e5565b915061342e826133c9565b604082019050919050565b5f6020820190508181035f83015261345081613417565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f6134b16022836125e5565b91506134bc82613457565b604082019050919050565b5f6020820190508181035f8301526134de816134a5565b9050919050565b5f6040820190506134f85f830185612b16565b61350560208301846127fb565b9392505050565b7f496e70757420616d6f756e742073686f756c64206265203e20300000000000005f82015250565b5f613540601a836125e5565b915061354b8261350c565b602082019050919050565b5f6020820190508181035f83015261356d81613534565b9050919050565b7f456d7074792073776170206973206e6f7420616c6c6f776564000000000000005f82015250565b5f6135a86019836125e5565b91506135b382613574565b602082019050919050565b5f6020820190508181035f8301526135d58161359c565b9050919050565b5f6135e6826126e3565b91506135f1836126e3565b925082820390508181111561360957613608612d1d565b5b92915050565b61361881612754565b8114613622575f80fd5b50565b5f815190506136338161360f565b92915050565b5f6020828403121561364e5761364d612685565b5b5f61365b84828501613625565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f6136be602a836125e5565b91506136c982613664565b604082019050919050565b5f6020820190508181035f8301526136eb816136b2565b9050919050565b5f6060820190506137055f830186612b16565b6137126020830185612b16565b61371f60408301846127fb565b949350505050565b7f416d6f756e74206578636565647320746f74616c2062616c616e6365000000005f82015250565b5f61375b601c836125e5565b915061376682613727565b602082019050919050565b5f6020820190508181035f8301526137888161374f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f6137e96026836125e5565b91506137f48261378f565b604082019050919050565b5f6020820190508181035f830152613816816137dd565b9050919050565b5f81519050919050565b5f81905092915050565b5f61383b8261381d565b6138458185613827565b93506138558185602086016125f5565b80840191505092915050565b5f61386c8284613831565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f6138ab601d836125e5565b91506138b682613877565b602082019050919050565b5f6020820190508181035f8301526138d88161389f565b905091905056fea26469706673582212203ca6f5d66d98c3812ee4293fdd04cc828fba9ff4f7b12894cfd82979d81eb1ad64736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "all_contract/FixedRateSwap_2.sol",
            "function": "constructor",
            "line": 1322,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 14,
            "contract": "Address",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x61069661004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063dbc40fb914610038575b5f80fd5b610052600480360381019061004d9190610414565b610068565b60405161005f9190610516565b60405180910390f35b60605f808573ffffffffffffffffffffffffffffffffffffffff16856040516100919190610570565b5f60405180830381855afa9150503d805f81146100c9576040519150601f19603f3d011682016040523d82523d5f602084013e6100ce565b606091505b50915091506100df868383876100ea565b925050509392505050565b6060831561014b575f835103610143576101038561015e565b610142576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610139906105e0565b60405180910390fd5b5b829050610156565b6101558383610180565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f825111156101925781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c69190610640565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610209826101e0565b9050919050565b610219816101ff565b8114610223575f80fd5b50565b5f8135905061023481610210565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61028882610242565b810181811067ffffffffffffffff821117156102a7576102a6610252565b5b80604052505050565b5f6102b96101cf565b90506102c5828261027f565b919050565b5f67ffffffffffffffff8211156102e4576102e3610252565b5b6102ed82610242565b9050602081019050919050565b828183375f83830152505050565b5f61031a610315846102ca565b6102b0565b9050828152602081018484840111156103365761033561023e565b5b6103418482856102fa565b509392505050565b5f82601f83011261035d5761035c61023a565b5b813561036d848260208601610308565b91505092915050565b5f67ffffffffffffffff8211156103905761038f610252565b5b61039982610242565b9050602081019050919050565b5f6103b86103b384610376565b6102b0565b9050828152602081018484840111156103d4576103d361023e565b5b6103df8482856102fa565b509392505050565b5f82601f8301126103fb576103fa61023a565b5b813561040b8482602086016103a6565b91505092915050565b5f805f6060848603121561042b5761042a6101d8565b5b5f61043886828701610226565b935050602084013567ffffffffffffffff811115610459576104586101dc565b5b61046586828701610349565b925050604084013567ffffffffffffffff811115610486576104856101dc565b5b610492868287016103e7565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156104d35780820151818401526020810190506104b8565b5f8484015250505050565b5f6104e88261049c565b6104f281856104a6565b93506105028185602086016104b6565b61050b81610242565b840191505092915050565b5f6020820190508181035f83015261052e81846104de565b905092915050565b5f81905092915050565b5f61054a8261049c565b6105548185610536565b93506105648185602086016104b6565b80840191505092915050565b5f61057b8284610540565b915081905092915050565b5f82825260208201905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f6105ca601d83610586565b91506105d582610596565b602082019050919050565b5f6020820190508181035f8301526105f7816105be565b9050919050565b5f81519050919050565b5f610612826105fe565b61061c8185610586565b935061062c8185602086016104b6565b61063581610242565b840191505092915050565b5f6020820190508181035f8301526106588184610608565b90509291505056fea264697066735822122059af93fc15caf056abd1198ff14793652ca50d0bdd37ea0c4f437fb3b408cf7064736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "all_contract/FixedRateSwap_2.sol",
            "function": "constructor",
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Low"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
