{"error": null, "issues": [{"address": 12, "contract": "Address", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "2908:7729:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201038a6b7627f9166711fb1373078d52ae8330484e85e017e0ee10feee10a55df64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "SafeERC20", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "11097:3270:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d906bf8754d7e0b022b027734ae0950bbd2e8ab063bcce0f8aef8635340005764736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 13, "code": "constructor(address _stakingToken, address _rewardToken, uint256 _rewardTokenDecimal) {\n        owner = msg.sender;\n        stakingToken = _stakingToken;\n        rewardToken = _rewardToken;\n        rewardTokenDecimal = _rewardTokenDecimal;\n    }", "contract": "PikaStaking", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/PikaStaking_1.sol", "function": "constructor", "lineno": 609, "max_gas_used": 134, "min_gas_used": 39, "severity": "Medium", "sourceMap": "21373:245", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801562000010575f80fd5b5060405162002073380380620020738339818101604052810190620000369190620001c3565b60015f819055505f60015f6101000a81548160ff021916908315150217905550336001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055505050506200021c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000155826200012a565b9050919050565b620001678162000149565b811462000172575f80fd5b50565b5f8151905062000185816200015c565b92915050565b5f819050919050565b6200019f816200018b565b8114620001aa575f80fd5b50565b5f81519050620001bd8162000194565b92915050565b5f805f60608486031215620001dd57620001dc62000126565b5b5f620001ec8682870162000175565b9350506020620001ff8682870162000175565b92505060406200021286828701620001ad565b9150509250925092565b611e49806200022a5f395ff3fe608060405260043610610101575f3560e01c806372f702f311610094578063a694fc3a11610063578063a694fc3a1461031e578063aaf5eb6814610346578063b88a802f14610370578063cf7462d514610386578063f7c618c1146103b057610108565b806372f702f3146102785780637faed202146102a2578063835c2840146102ca5780638da5cb5b146102f457610108565b80635c975abb116100d05780635c975abb146101ae5780635ff329af146101d8578063632447c91461021457806370a082311461023c57610108565b806313af40351461010a57806318160ddd146101325780631980cd351461015c5780632e1a7d4d1461018657610108565b3661010857005b005b348015610115575f80fd5b50610130600480360381019061012b9190611529565b6103da565b005b34801561013d575f80fd5b506101466104ab565b604051610153919061156c565b60405180910390f35b348015610167575f80fd5b506101706104b4565b60405161017d9190611594565b60405180910390f35b348015610191575f80fd5b506101ac60048036038101906101a791906115d7565b6104d9565b005b3480156101b9575f80fd5b506101c261067e565b6040516101cf919061161c565b60405180910390f35b3480156101e3575f80fd5b506101fe60048036038101906101f99190611529565b610693565b60405161020b919061156c565b60405180910390f35b34801561021f575f80fd5b5061023a60048036038101906102359190611529565b610875565b005b348015610247575f80fd5b50610262600480360381019061025d9190611529565b610ace565b60405161026f919061156c565b60405180910390f35b348015610283575f80fd5b5061028c610b14565b6040516102999190611594565b60405180910390f35b3480156102ad575f80fd5b506102c860048036038101906102c39190611529565b610b39565b005b3480156102d5575f80fd5b506102de610c0a565b6040516102eb919061156c565b60405180910390f35b3480156102ff575f80fd5b50610308610c10565b6040516103159190611594565b60405180910390f35b348015610329575f80fd5b50610344600480360381019061033f91906115d7565b610c34565b005b348015610351575f80fd5b5061035a610e23565b604051610367919061156c565b60405180910390f35b34801561037b575f80fd5b50610384610e2f565b005b348015610391575f80fd5b5061039a610f2d565b6040516103a7919061156c565b60405180910390f35b3480156103bb575f80fd5b506103c4610f33565b6040516103d19190611594565b60405180910390f35b60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f9061168f565b60405180910390fd5b806001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f600754905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f540361051d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610514906116f7565b60405180910390fd5b60025f819055505f8111610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055d9061175f565b60405180910390fd5b61056f33610875565b8060075f82825461058091906117aa565b925050819055508060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105d391906117aa565b92505081905550610626338260045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f589092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161066c919061156c565b60405180910390a260015f8190555050565b5f60015f9054906101000a900460ff16905090565b5f8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f600754036106e75780915050610870565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e20c3b46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610752573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077691906117f1565b90505f600754670de0b6b3a764000083610790919061181c565b61079a919061188a565b6006546107a791906118ba565b90505f81036107bb57829350505050610870565b670de0b6b3a7640000600a5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548261080d91906117aa565b60085f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610855919061181c565b61085f919061188a565b8361086a91906118ba565b93505050505b919050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160315610acb575f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ea8c3a76040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610915573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093991906117f1565b90505f600754111561097e57600754670de0b6b3a76400008261095c919061181c565b610966919061188a565b60065f82825461097691906118ba565b925050819055505b5f6006540361098d5750610acb565b670de0b6b3a7640000600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546006546109e191906117aa565b60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a29919061181c565b610a33919061188a565b60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a7e91906118ba565b92505081905550600654600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b50565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe9061168f565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065481565b60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f5403610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f906116f7565b60405180910390fd5b60025f81905550610c8761067e565b15610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611937565b60405180910390fd5b5f8111610d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d009061199f565b60405180910390fd5b610d1233610875565b8060075f828254610d2391906118ba565b925050819055508060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7691906118ba565b92505081905550610dcb33308360045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fde909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d82604051610e11919061156c565b60405180910390a260015f8190555050565b670de0b6b3a764000081565b610e3833610875565b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f811115610f2a57610ecd3382611067565b7faee3654837b73cc93e61b5d33f82d45b1df4dbe682913819f5ce40de23518e723360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683604051610f21939291906119bd565b60405180910390a15b50565b60055481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fd98363a9059cbb60e01b8484604051602401610f779291906119f2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611178565b505050565b611061846323b872dd60e01b858585604051602401610fff939291906119bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611178565b50505050565b5f8114806110a057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b611174575f73ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361112657611121818373ffffffffffffffffffffffffffffffffffffffff1661123d90919063ffffffff16565b611173565b611172828260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f589092919063ffffffff16565b5b5b5050565b5f6111d9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661132d9092919063ffffffff16565b90505f8151111561123857808060200190518101906111f89190611a43565b611237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122e90611ade565b60405180910390fd5b5b505050565b80471015611280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127790611b46565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516112a590611b91565b5f6040518083038185875af1925050503d805f81146112df576040519150601f19603f3d011682016040523d82523d5f602084013e6112e4565b606091505b5050905080611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f90611c15565b60405180910390fd5b505050565b606061133b84845f85611344565b90509392505050565b606082471015611389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138090611ca3565b60405180910390fd5b61139285611454565b6113d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c890611d0b565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516113f99190611d8b565b5f6040518083038185875af1925050503d805f8114611433576040519150601f19603f3d011682016040523d82523d5f602084013e611438565b606091505b5091509150611448828286611465565b92505050949350505050565b5f80823b90505f8111915050919050565b60608315611475578290506114c4565b5f835111156114875782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bb9190611df3565b60405180910390fd5b9392505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114f8826114cf565b9050919050565b611508816114ee565b8114611512575f80fd5b50565b5f81359050611523816114ff565b92915050565b5f6020828403121561153e5761153d6114cb565b5b5f61154b84828501611515565b91505092915050565b5f819050919050565b61156681611554565b82525050565b5f60208201905061157f5f83018461155d565b92915050565b61158e816114ee565b82525050565b5f6020820190506115a75f830184611585565b92915050565b6115b681611554565b81146115c0575f80fd5b50565b5f813590506115d1816115ad565b92915050565b5f602082840312156115ec576115eb6114cb565b5b5f6115f9848285016115c3565b91505092915050565b5f8115159050919050565b61161681611602565b82525050565b5f60208201905061162f5f83018461160d565b92915050565b5f82825260208201905092915050565b7f216f776e657200000000000000000000000000000000000000000000000000005f82015250565b5f611679600683611635565b915061168482611645565b602082019050919050565b5f6020820190508181035f8301526116a68161166d565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6116e1601f83611635565b91506116ec826116ad565b602082019050919050565b5f6020820190508181035f83015261170e816116d5565b9050919050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f611749601183611635565b915061175482611715565b602082019050919050565b5f6020820190508181035f8301526117768161173d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117b482611554565b91506117bf83611554565b92508282039050818111156117d7576117d661177d565b5b92915050565b5f815190506117eb816115ad565b92915050565b5f60208284031215611806576118056114cb565b5b5f611813848285016117dd565b91505092915050565b5f61182682611554565b915061183183611554565b925082820261183f81611554565b915082820484148315176118565761185561177d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61189482611554565b915061189f83611554565b9250826118af576118ae61185d565b5b828204905092915050565b5f6118c482611554565b91506118cf83611554565b92508282019050808211156118e7576118e661177d565b5b92915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611921601083611635565b915061192c826118ed565b602082019050919050565b5f6020820190508181035f83015261194e81611915565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f611989600e83611635565b915061199482611955565b602082019050919050565b5f6020820190508181035f8301526119b68161197d565b9050919050565b5f6060820190506119d05f830186611585565b6119dd6020830185611585565b6119ea604083018461155d565b949350505050565b5f604082019050611a055f830185611585565b611a12602083018461155d565b9392505050565b611a2281611602565b8114611a2c575f80fd5b50565b5f81519050611a3d81611a19565b92915050565b5f60208284031215611a5857611a576114cb565b5b5f611a6584828501611a2f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f611ac8602a83611635565b9150611ad382611a6e565b604082019050919050565b5f6020820190508181035f830152611af581611abc565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e63650000005f82015250565b5f611b30601d83611635565b9150611b3b82611afc565b602082019050919050565b5f6020820190508181035f830152611b5d81611b24565b9050919050565b5f81905092915050565b50565b5f611b7c5f83611b64565b9150611b8782611b6e565b5f82019050919050565b5f611b9b82611b71565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c20725f8201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b5f611bff603a83611635565b9150611c0a82611ba5565b604082019050919050565b5f6020820190508181035f830152611c2c81611bf3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f611c8d602683611635565b9150611c9882611c33565b604082019050919050565b5f6020820190508181035f830152611cba81611c81565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f611cf5601d83611635565b9150611d0082611cc1565b602082019050919050565b5f6020820190508181035f830152611d2281611ce9565b9050919050565b5f81519050919050565b5f5b83811015611d50578082015181840152602081019050611d35565b5f8484015250505050565b5f611d6582611d29565b611d6f8185611b64565b9350611d7f818560208601611d33565b80840191505092915050565b5f611d968284611d5b565b915081905092915050565b5f81519050919050565b5f601f19601f8301169050919050565b5f611dc582611da1565b611dcf8185611635565b9350611ddf818560208601611d33565b611de881611dab565b840191505092915050565b5f6020820190508181035f830152611e0b8184611dbb565b90509291505056fea264697066735822122065517fb33013745d4b1bd7d4889e7d25eecea4ae97eefcbfe46e60d16fdd2f5764736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}], "success": true}
