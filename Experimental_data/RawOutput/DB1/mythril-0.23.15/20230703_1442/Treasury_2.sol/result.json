{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 12,
            "contract": "Treasury",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b506040516108ff3803806108ff833981810160405281019061003191906100d4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f80fd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6107f38061010c5f395ff3fe608060405260043610610037575f3560e01c80634650c3081461003a5780638522d1b214610062578063e1f21c671461008a57610038565b5b005b348015610045575f80fd5b50610060600480360381019061005b919061051c565b6100b2565b005b34801561006d575f80fd5b50610088600480360381019061008391906105ac565b6101ac565b005b348015610095575f80fd5b506100b060048036038101906100ab91906105fc565b61034b565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610136906106a6565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168282604051610166929190610700565b5f604051808303815f865af19150503d805f811461019f576040519150601f19603f3d011682016040523d82523d5f602084013e6101a4565b606091505b505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610230906106a6565b60405180910390fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102c9578073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f193505050501580156102c3573d5f803e3d5ffd5b50610346565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610304929190610736565b6020604051808303815f875af1158015610320573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103449190610792565b505b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf906106a6565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b8152600401610413929190610736565b6020604051808303815f875af115801561042f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104539190610792565b50505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61048a82610461565b9050919050565b61049a81610480565b81146104a4575f80fd5b50565b5f813590506104b581610491565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126104dc576104db6104bb565b5b8235905067ffffffffffffffff8111156104f9576104f86104bf565b5b602083019150836001820283011115610515576105146104c3565b5b9250929050565b5f805f6040848603121561053357610532610459565b5b5f610540868287016104a7565b935050602084013567ffffffffffffffff8111156105615761056061045d565b5b61056d868287016104c7565b92509250509250925092565b5f819050919050565b61058b81610579565b8114610595575f80fd5b50565b5f813590506105a681610582565b92915050565b5f805f606084860312156105c3576105c2610459565b5b5f6105d0868287016104a7565b93505060206105e186828701610598565b92505060406105f2868287016104a7565b9150509250925092565b5f805f6060848603121561061357610612610459565b5b5f610620868287016104a7565b9350506020610631868287016104a7565b925050604061064286828701610598565b9150509250925092565b5f82825260208201905092915050565b7f21676f7665726e616e63650000000000000000000000000000000000000000005f82015250565b5f610690600b8361064c565b915061069b8261065c565b602082019050919050565b5f6020820190508181035f8301526106bd81610684565b9050919050565b5f81905092915050565b828183375f83830152505050565b5f6106e783856106c4565b93506106f48385846106ce565b82840190509392505050565b5f61070c8284866106dc565b91508190509392505050565b61072181610480565b82525050565b61073081610579565b82525050565b5f6040820190506107495f830185610718565b6107566020830184610727565b9392505050565b5f8115159050919050565b6107718161075d565b811461077b575f80fd5b50565b5f8151905061078c81610768565b92915050565b5f602082840312156107a7576107a6610459565b5b5f6107b48482850161077e565b9150509291505056fea2646970667358221220fa7b0eb63f456aae8d353633613fdc30a54e8a93ae4b37db6f4e5bba4c81b21b64736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "all_contract/Treasury_2.sol",
            "function": "constructor",
            "line": 64,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 213,
            "contract": "Treasury",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata
                        "input": "
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "all_contract/Treasury_2.sol",
            "function": "constructor",
            "line": 64,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
