{"error": null, "issues": [{"address": 12, "contract": "AddressUpgradeable", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "11663:8087:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209b33b80e99bcea8eaaf440cd067c4c3d858c5d56249ac64870da3433e788a91f64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "ExtendedMath", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "25401:1069:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e4b3c8b1ff43eece63f1c6fc41d413358f9b3cee33cd08c1739546c7d976f01d64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "SafeERC20Upgradeable", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "31130:3847:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ca35eb347f3e6fd9fdae5ba6844961b224cad799d89b2b12aaf007ba8eef55264736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "Sigmoid", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "38300:4051:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561000f575f80fd5b50610a888061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80636893baf814610038578063d6cec5b714610068575b5f80fd5b610052600480360381019061004d919061062f565b610098565b60405161005f91906106d0565b60405180910390f35b610082600480360381019061007d919061062f565b610155565b60405161008f91906106d0565b60405180910390f35b5f8082846100a69190610716565b90505f6100b5898989856101f5565b6100c18a8a8a86610296565b6100cd8b8b8b876102cc565b6100d98c8c8c88610302565b6100e58d8d8d89610340565b6100f18e8e8e8a61039c565b6100fd8f8f8f8b6103e1565b6101079190610716565b6101119190610757565b61011b9190610757565b6101259190610757565b61012f9190610757565b61013991906107c4565b905085816101479190610757565b925050509695505050505050565b5f8082856101639190610757565b90505f610182876101738a6103f5565b61017d9190610716565b61046b565b8961018d919061082c565b90505f81836101b98a6101aa878e6101a59190610757565b6103f5565b6101b49190610716565b61046b565b6101c39190610716565b8b6101ce919061082c565b6101d89190610757565b905080866101e69190610757565b93505050509695505050505050565b5f6101ff826103f5565b600261020b919061082c565b828587600461021a919061082c565b610224919061082c565b61022e919061082c565b84610238886103f5565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe610263919061082c565b61026d919061082c565b6102779190610757565b6102819190610716565b8561028c919061082c565b9050949350505050565b5f6102a0826103f5565b848660016102ae919061082c565b6102b8919061082c565b6102c2919061082c565b9050949350505050565b5f81836102d8876103f5565b60026102e4919061082c565b6102ee919061082c565b6102f8919061082c565b9050949350505050565b5f8161030d856103f5565b610316876103f5565b6002610322919061082c565b61032c919061082c565b610336919061082c565b9050949350505050565b5f61035d8361034e866103f5565b6103589190610716565b61046b565b8285610368886103f5565b6002610374919061082c565b61037e919061082c565b610388919061082c565b610392919061082c565b9050949350505050565b5f6103b9836103aa866103f5565b6103b49190610716565b61046b565b6103c2836103f5565b866103cd919061082c565b6103d7919061082c565b9050949350505050565b5f6103eb82610525565b9050949350505050565b5f808203610405575f9050610466565b5f8283610412919061082c565b905082838261042191906107c4565b14610461576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610458906108fc565b60405180910390fd5b809150505b919050565b5f808212156104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a690610964565b60405180910390fd5b6003821315610513578190505f60016002846104cb91906107c4565b6104d59190610716565b90505b8181121561050d5780915060028182856104f291906107c4565b6104fc9190610716565b61050691906107c4565b90506104d8565b50610520565b5f821461051f57600190505b5b919050565b5f808203610535575f90506105f3565b5f8283610542919061082c565b905082838261055191906107c4565b14610591576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610588906109cc565b60405180910390fd5b5f838261059e919061082c565b90508184826105ad91906107c4565b146105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490610a34565b60405180910390fd5b80925050505b919050565b5f80fd5b5f819050919050565b61060e816105fc565b8114610618575f80fd5b50565b5f8135905061062981610605565b92915050565b5f805f805f8060c08789031215610649576106486105f8565b5b5f61065689828a0161061b565b965050602061066789828a0161061b565b955050604061067889828a0161061b565b945050606061068989828a0161061b565b935050608061069a89828a0161061b565b92505060a06106ab89828a0161061b565b9150509295509295509295565b5f819050919050565b6106ca816106b8565b82525050565b5f6020820190506106e35f8301846106c1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610720826105fc565b915061072b836105fc565b92508282019050828112155f8312168382125f841215161715610751576107506106e9565b5b92915050565b5f610761826105fc565b915061076c836105fc565b925082820390508181125f8412168282135f851215161715610791576107906106e9565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6107ce826105fc565b91506107d9836105fc565b9250826107e9576107e8610797565b5b60015f0383147f800000000000000000000000000000000000000000000000000000000000000083141615610821576108206106e9565b5b828205905092915050565b5f610836826105fc565b9150610841836105fc565b925082820261084f816105fc565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615610886576108856106e9565b5b828205841483151761089b5761089a6106e9565b5b5092915050565b5f82825260208201905092915050565b7f457874656e6465644d6174683a207371756172696e67206f766572666c6f77005f82015250565b5f6108e6601f836108a2565b91506108f1826108b2565b602082019050919050565b5f6020820190508181035f830152610913816108da565b9050919050565b7f4e656761746976652073717274000000000000000000000000000000000000005f82015250565b5f61094e600d836108a2565b91506109598261091a565b602082019050919050565b5f6020820190508181035f83015261097b81610942565b9050919050565b7f457874656e6465644d6174683a20637562696e67206f766572666c6f773200005f82015250565b5f6109b6601e836108a2565b91506109c182610982565b602082019050919050565b5f6020820190508181035f8301526109e3816109aa565b9050919050565b7f457874656e6465644d6174683a20637562696e67206f766572666c6f773300005f82015250565b5f610a1e601e836108a2565b9150610a29826109ea565b602082019050919050565b5f6020820190508181035f830152610a4b81610a12565b905091905056fea26469706673582212204666277fa75fae4ef4c97281569b0fcc37c32e9ea6954ea2137a58d72a2b196d64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 12, "contract": "SigmoidCuratorVault", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "42885:5908:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561000f575f80fd5b5061267f8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806367e9dbcb1161006457806367e9dbcb146101585780636893baf8146101885780638334278d146101b8578063c9ff430c146101e8578063d6cec5b7146102185761009c565b806317e1816c146100a05780631f2a8b06146100d057806323115b99146101005780633ab76e9f1461011e578063485cc9551461013c575b5f80fd5b6100ba60048036038101906100b591906115fd565b610248565b6040516100c79190611670565b60405180910390f35b6100ea60048036038101906100e59190611689565b61025f565b6040516100f79190611670565b60405180910390f35b610108610549565b604051610115919061176d565b60405180910390f35b61012661056e565b60405161013391906117a6565b60405180910390f35b610156600480360381019061015191906117fa565b610593565b005b610172600480360381019061016d919061186d565b610745565b60405161017f9190611670565b60405180910390f35b6101a2600480360381019061019d919061193d565b610b7c565b6040516101af9190611670565b60405180910390f35b6101d260048036038101906101cd91906119c6565b610c39565b6040516101df9190611670565b60405180910390f35b61020260048036038101906101fd91906119c6565b610c4e565b60405161020f9190611670565b60405180910390f35b610232600480360381019061022d919061193d565b610c63565b60405161023f9190611670565b60405180910390f35b5f61025585858585610d03565b9050949350505050565b5f610268610d3d565b5f83116102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a190611a4b565b60405180910390fd5b5f6102b788888888610d03565b905060365f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5298aca3383876040518463ffffffff1660e01b815260040161031793929190611a78565b5f604051808303815f87803b15801561032e575f80fd5b505af1158015610340573d5f803e3d5ffd5b505050505f805f60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b27bcea16040518163ffffffff1660e01b81526004016020604051808303815f875af11580156103b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d69190611ae8565b73ffffffffffffffffffffffffffffffffffffffff1663c03ac3ea6040518163ffffffff1660e01b81526004016060604051808303815f875af115801561041f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104439190611b27565b9250925092505f61047a84848460345f8a81526020019081526020015f205460355f8b81526020019081526020015f20548d610c63565b90508060355f8781526020019081526020015f205f82825461049c9190611ba4565b925050819055508760345f8781526020019081526020015f205f8282546104c39190611ba4565b925050819055506104f587828b73ffffffffffffffffffffffffffffffffffffffff16610d8c9092919063ffffffff16565b847fdfafe7ef66b19c68e35d3237d07d7c4bf90008019e12ea9e2adb12fdfdeb7917828a604051610527929190611bd7565b60405180910390a2809550505050505061053f610e12565b9695505050505050565b60365f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060019054906101000a900460ff161590508080156105c2575060015f8054906101000a900460ff1660ff16105b806105ee57506105d130610e1b565b1580156105ed575060015f8054906101000a900460ff1660ff16145b5b61062d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062490611c6e565b60405180910390fd5b60015f806101000a81548160ff021916908360ff16021790555080156106685760015f60016101000a81548160ff0219169083151502179055505b8260335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160365f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610740575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516107379190611cd1565b60405180910390a15b505050565b5f60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b81526004016020604051808303815f875af11580156107b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d49190611d25565b73ffffffffffffffffffffffffffffffffffffffff16638e975b35336040518263ffffffff1660e01b815260040161080c9190611d50565b602060405180830381865afa158015610827573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084b9190611d7d565b61088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088190611df2565b60405180910390fd5b5f61089789898989610d03565b90506108c63330878973ffffffffffffffffffffffffffffffffffffffff16610e3d909392919063ffffffff16565b5f805f60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b27bcea16040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610934573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109589190611ae8565b73ffffffffffffffffffffffffffffffffffffffff1663c03ac3ea6040518163ffffffff1660e01b81526004016060604051808303815f875af11580156109a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c59190611b27565b9250925092505f6109fc84848460345f8a81526020019081526020015f205460355f8b81526020019081526020015f20548e610b7c565b90508860355f8781526020019081526020015f205f828254610a1e9190611e10565b925050819055508060345f8781526020019081526020015f205f828254610a459190611e10565b9250508190555060365f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663731133e98987845f67ffffffffffffffff811115610aa657610aa5611e43565b5b6040519080825280601f01601f191660200182016040528015610ad85781602001600182028036833780820191505090505b506040518563ffffffff1660e01b8152600401610af89493929190611efa565b5f604051808303815f87803b158015610b0f575f80fd5b505af1158015610b21573d5f803e3d5ffd5b50505050847f7ef62f60fd6b2d809eedbc8d39b5707298923d32fa9b56d3446ae566780b8f108e8e8e8e8e878e604051610b619796959493929190611f73565b60405180910390a28095505050505050979650505050505050565b5f808284610b8a9190611fe0565b90505f610b9989898985610ec6565b610ba58a8a8a86610f67565b610bb18b8b8b87610f9d565b610bbd8c8c8c88610fd3565b610bc98d8d8d89611011565b610bd58e8e8e8a61106d565b610be18f8f8f8b6110b2565b610beb9190611fe0565b610bf59190612021565b610bff9190612021565b610c099190612021565b610c139190612021565b610c1d919061208e565b90508581610c2b9190612021565b925050509695505050505050565b6035602052805f5260405f205f915090505481565b6034602052805f5260405f205f915090505481565b5f808285610c719190612021565b90505f610c9087610c818a6110c6565b610c8b9190611fe0565b61113c565b89610c9b91906120f6565b90505f8183610cc78a610cb8878e610cb39190612021565b6110c6565b610cc29190611fe0565b61113c565b610cd19190611fe0565b8b610cdc91906120f6565b610ce69190612021565b90508086610cf49190612021565b93505050509695505050505050565b5f84848484604051602001610d1b949392919061216c565b604051602081830303815290604052805190602001205f1c9050949350505050565b600260015403610d82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d79906121f9565b60405180910390fd5b6002600181905550565b610e0d8363a9059cbb60e01b8484604051602401610dab929190612217565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111f6565b505050565b60018081905550565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b610ec0846323b872dd60e01b858585604051602401610e5e9392919061223e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111f6565b50505050565b5f610ed0826110c6565b6002610edc91906120f6565b8285876004610eeb91906120f6565b610ef591906120f6565b610eff91906120f6565b84610f09886110c6565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe610f3491906120f6565b610f3e91906120f6565b610f489190612021565b610f529190611fe0565b85610f5d91906120f6565b9050949350505050565b5f610f71826110c6565b84866001610f7f91906120f6565b610f8991906120f6565b610f9391906120f6565b9050949350505050565b5f8183610fa9876110c6565b6002610fb591906120f6565b610fbf91906120f6565b610fc991906120f6565b9050949350505050565b5f81610fde856110c6565b610fe7876110c6565b6002610ff391906120f6565b610ffd91906120f6565b61100791906120f6565b9050949350505050565b5f61102e8361101f866110c6565b6110299190611fe0565b61113c565b8285611039886110c6565b600261104591906120f6565b61104f91906120f6565b61105991906120f6565b61106391906120f6565b9050949350505050565b5f61108a8361107b866110c6565b6110859190611fe0565b61113c565b611093836110c6565b8661109e91906120f6565b6110a891906120f6565b9050949350505050565b5f6110bc826112bb565b9050949350505050565b5f8082036110d6575f9050611137565b5f82836110e391906120f6565b90508283826110f2919061208e565b14611132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611129906122bd565b60405180910390fd5b809150505b919050565b5f80821215611180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117790612325565b60405180910390fd5b60038213156111e4578190505f600160028461119c919061208e565b6111a69190611fe0565b90505b818112156111de5780915060028182856111c3919061208e565b6111cd9190611fe0565b6111d7919061208e565b90506111a9565b506111f1565b5f82146111f057600190505b5b919050565b5f611257826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661138e9092919063ffffffff16565b90505f815111156112b657808060200190518101906112769190611d7d565b6112b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ac906123b3565b60405180910390fd5b5b505050565b5f8082036112cb575f9050611389565b5f82836112d891906120f6565b90508283826112e7919061208e565b14611327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131e9061241b565b60405180910390fd5b5f838261133491906120f6565b9050818482611343919061208e565b14611383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137a90612483565b60405180910390fd5b80925050505b919050565b606061139c84845f856113a5565b90509392505050565b6060824710156113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190612511565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516114129190612569565b5f6040518083038185875af1925050503d805f811461144c576040519150601f19603f3d011682016040523d82523d5f602084013e611451565b606091505b50915091506114628783838761146e565b92505050949350505050565b606083156114cf575f8351036114c75761148785610e1b565b6114c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bd906125c9565b60405180910390fd5b5b8290506114da565b6114d983836114e2565b5b949350505050565b5f825111156114f45781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115289190612629565b60405180910390fd5b5f80fd5b5f819050919050565b61154781611535565b8114611551575f80fd5b50565b5f813590506115628161153e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61159182611568565b9050919050565b6115a181611587565b81146115ab575f80fd5b50565b5f813590506115bc81611598565b92915050565b5f6115cc82611587565b9050919050565b6115dc816115c2565b81146115e6575f80fd5b50565b5f813590506115f7816115d3565b92915050565b5f805f806080858703121561161557611614611531565b5b5f61162287828801611554565b9450506020611633878288016115ae565b935050604061164487828801611554565b9250506060611655878288016115e9565b91505092959194509250565b61166a81611535565b82525050565b5f6020820190506116835f830184611661565b92915050565b5f805f805f8060c087890312156116a3576116a2611531565b5b5f6116b089828a01611554565b96505060206116c189828a016115ae565b95505060406116d289828a01611554565b94505060606116e389828a016115e9565b93505060806116f489828a01611554565b92505060a061170589828a016115ae565b9150509295509295509295565b5f819050919050565b5f61173561173061172b84611568565b611712565b611568565b9050919050565b5f6117468261171b565b9050919050565b5f6117578261173c565b9050919050565b6117678161174d565b82525050565b5f6020820190506117805f83018461175e565b92915050565b5f6117908261173c565b9050919050565b6117a081611786565b82525050565b5f6020820190506117b95f830184611797565b92915050565b5f6117c982611587565b9050919050565b6117d9816117bf565b81146117e3575f80fd5b50565b5f813590506117f4816117d0565b92915050565b5f80604083850312156118105761180f611531565b5b5f61181d858286016115ae565b925050602061182e858286016117e6565b9150509250929050565b5f8115159050919050565b61184c81611838565b8114611856575f80fd5b50565b5f8135905061186781611843565b92915050565b5f805f805f805f60e0888a03121561188857611887611531565b5b5f6118958a828b01611554565b97505060206118a68a828b016115ae565b96505060406118b78a828b01611554565b95505060606118c88a828b016115e9565b94505060806118d98a828b01611554565b93505060a06118ea8a828b016115ae565b92505060c06118fb8a828b01611859565b91505092959891949750929550565b5f819050919050565b61191c8161190a565b8114611926575f80fd5b50565b5f8135905061193781611913565b92915050565b5f805f805f8060c0878903121561195757611956611531565b5b5f61196489828a01611929565b965050602061197589828a01611929565b955050604061198689828a01611929565b945050606061199789828a01611929565b93505060806119a889828a01611929565b92505060a06119b989828a01611929565b9150509295509295509295565b5f602082840312156119db576119da611531565b5b5f6119e884828501611554565b91505092915050565b5f82825260208201905092915050565b7f496e76616c6964203020696e70757400000000000000000000000000000000005f82015250565b5f611a35600f836119f1565b9150611a4082611a01565b602082019050919050565b5f6020820190508181035f830152611a6281611a29565b9050919050565b611a7281611587565b82525050565b5f606082019050611a8b5f830186611a69565b611a986020830185611661565b611aa56040830184611661565b949350505050565b5f611ab782611587565b9050919050565b611ac781611aad565b8114611ad1575f80fd5b50565b5f81519050611ae281611abe565b92915050565b5f60208284031215611afd57611afc611531565b5b5f611b0a84828501611ad4565b91505092915050565b5f81519050611b218161153e565b92915050565b5f805f60608486031215611b3e57611b3d611531565b5b5f611b4b86828701611b13565b9350506020611b5c86828701611b13565b9250506040611b6d86828701611b13565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bae82611535565b9150611bb983611535565b9250828203905081811115611bd157611bd0611b77565b5b92915050565b5f604082019050611bea5f830185611661565b611bf76020830184611661565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f611c58602e836119f1565b9150611c6382611bfe565b604082019050919050565b5f6020820190508181035f830152611c8581611c4c565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f611cbb611cb6611cb184611c8c565b611712565b611c95565b9050919050565b611ccb81611ca1565b82525050565b5f602082019050611ce45f830184611cc2565b92915050565b5f611cf482611587565b9050919050565b611d0481611cea565b8114611d0e575f80fd5b50565b5f81519050611d1f81611cfb565b92915050565b5f60208284031215611d3a57611d39611531565b5b5f611d4784828501611d11565b91505092915050565b5f602082019050611d635f830184611a69565b92915050565b5f81519050611d7781611843565b92915050565b5f60208284031215611d9257611d91611531565b5b5f611d9f84828501611d69565b91505092915050565b7f4e6f742041646d696e00000000000000000000000000000000000000000000005f82015250565b5f611ddc6009836119f1565b9150611de782611da8565b602082019050919050565b5f6020820190508181035f830152611e0981611dd0565b9050919050565b5f611e1a82611535565b9150611e2583611535565b9250828201905080821115611e3d57611e3c611b77565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ea7578082015181840152602081019050611e8c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611ecc82611e70565b611ed68185611e7a565b9350611ee6818560208601611e8a565b611eef81611eb2565b840191505092915050565b5f608082019050611f0d5f830187611a69565b611f1a6020830186611661565b611f276040830185611661565b8181036060830152611f398184611ec2565b905095945050505050565b5f611f4e8261173c565b9050919050565b611f5e81611f44565b82525050565b611f6d81611838565b82525050565b5f60e082019050611f865f83018a611661565b611f936020830189611a69565b611fa06040830188611661565b611fad6060830187611f55565b611fba6080830186611661565b611fc760a0830185611661565b611fd460c0830184611f64565b98975050505050505050565b5f611fea8261190a565b9150611ff58361190a565b92508282019050828112155f8312168382125f84121516171561201b5761201a611b77565b5b92915050565b5f61202b8261190a565b91506120368361190a565b925082820390508181125f8412168282135f85121516171561205b5761205a611b77565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6120988261190a565b91506120a38361190a565b9250826120b3576120b2612061565b5b60015f0383147f8000000000000000000000000000000000000000000000000000000000000000831416156120eb576120ea611b77565b5b828205905092915050565b5f6121008261190a565b915061210b8361190a565b92508282026121198161190a565b91507f800000000000000000000000000000000000000000000000000000000000000084145f841216156121505761214f611b77565b5b828205841483151761216557612164611b77565b5b5092915050565b5f60808201905061217f5f830187611661565b61218c6020830186611a69565b6121996040830185611661565b6121a66060830184611f55565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6121e3601f836119f1565b91506121ee826121af565b602082019050919050565b5f6020820190508181035f830152612210816121d7565b9050919050565b5f60408201905061222a5f830185611a69565b6122376020830184611661565b9392505050565b5f6060820190506122515f830186611a69565b61225e6020830185611a69565b61226b6040830184611661565b949350505050565b7f457874656e6465644d6174683a207371756172696e67206f766572666c6f77005f82015250565b5f6122a7601f836119f1565b91506122b282612273565b602082019050919050565b5f6020820190508181035f8301526122d48161229b565b9050919050565b7f4e656761746976652073717274000000000000000000000000000000000000005f82015250565b5f61230f600d836119f1565b915061231a826122db565b602082019050919050565b5f6020820190508181035f83015261233c81612303565b9050919050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f61239d602a836119f1565b91506123a882612343565b604082019050919050565b5f6020820190508181035f8301526123ca81612391565b9050919050565b7f457874656e6465644d6174683a20637562696e67206f766572666c6f773200005f82015250565b5f612405601e836119f1565b9150612410826123d1565b602082019050919050565b5f6020820190508181035f830152612432816123f9565b9050919050565b7f457874656e6465644d6174683a20637562696e67206f766572666c6f773300005f82015250565b5f61246d601e836119f1565b915061247882612439565b602082019050919050565b5f6020820190508181035f83015261249a81612461565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f6124fb6026836119f1565b9150612506826124a1565b604082019050919050565b5f6020820190508181035f830152612528816124ef565b9050919050565b5f81905092915050565b5f61254382611e70565b61254d818561252f565b935061255d818560208601611e8a565b80840191505092915050565b5f6125748284612539565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f6125b3601d836119f1565b91506125be8261257f565b602082019050919050565b5f6020820190508181035f8301526125e0816125a7565b9050919050565b5f81519050919050565b5f6125fb826125e7565b61260581856119f1565b9350612615818560208601611e8a565b61261e81611eb2565b840191505092915050565b5f6020820190508181035f83015261264181846125f1565b90509291505056fea2646970667358221220cbb1cd3c9f28d803b9c4048517da8fddf08bcbfa40f0797dfc4ccd4fc695218564736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}], "success": true}
