from executor.instructions.arithmetic import *
from executor.instructions.blockchain_context import *
from executor.instructions.closures import *
from executor.instructions.comparison import *
from executor.instructions.contract_context import *
from executor.instructions.crypto import *
from executor.instructions.logging import *
from executor.instructions.pushes import *
from executor.instructions.rattle_instructions import *
from executor.instructions.storage_execution import *

instructions_functions = {
    'STOP': inst_stop,
    'ADD': inst_add,
    'MUL': inst_mul,
    'SUB': inst_sub,
    'DIV': inst_div,
    'SDIV': inst_sdiv,
    'MOD': inst_mod,
    'SMOD': inst_smod,
    'ADDMOD': inst_addmod,
    'MULMOD': inst_mulmod,
    'EXP': inst_exp,
    'SIGNEXTEND': inst_signextend,
    'LT': inst_lt,
    'GT': inst_gt,
    'SLT': inst_slt,
    'SGT': inst_sgt,
    'EQ': inst_eq,
    'ISZERO': inst_iszero,
    'AND': inst_and,
    'OR': inst_or,
    'XOR': inst_xor,
    'NOT': inst_not,
    'BYTE': inst_byte,
    'SHL': inst_shl,
    'SHR': inst_shr,
    'SAR': inst_sar,
    'SHA3': inst_sha3,
    'ADDRESS': inst_address,
    'BALANCE': inst_balance,
    'ORIGIN': inst_origin,
    'CALLER': inst_caller,
    'CALLVALUE': inst_callvalue,
    'CALLDATALOAD': inst_calldataload,
    'CALLDATASIZE': inst_calldatasize,
    'CALLDATACOPY': inst_calldatacopy,
    'CODESIZE': inst_codesize,
    'CODECOPY': inst_codecopy,
    'GASPRICE': inst_gasprice,
    'EXTCODESIZE': inst_extcodesize,
    'EXTCODECOPY': inst_extcodecopy,
    'RETURNDATASIZE': inst_returndatasize,
    'RETURNDATACOPY': inst_returndatacopy,
    'EXTCODEHASH': inst_extcodehash,
    'BLOCKHASH': inst_blockhash,
    'COINBASE': inst_coinbase,
    'TIMESTAMP': inst_timestamp,
    'NUMBER': inst_number,
    'DIFFICULTY': inst_difficulty,
    'GASLIMIT': inst_gaslimit,
    'MLOAD': inst_mload,
    'MSTORE': inst_mstore,
    'MSTORE8': inst_mstore8,
    'SLOAD': inst_sload,
    'SSTORE': inst_sstore,
    'JUMP': inst_jump,
    'JUMPI': inst_jumpi,
    'GETPC': inst_pc,
    'MSIZE': inst_msize,
    'GAS': inst_gas,
    'JUMPDEST': inst_jumpdest,
    'PUSH': inst_push,
    'LOG0': inst_log0,
    'LOG1': inst_log1,
    'LOG2': inst_log2,
    'LOG3': inst_log3,
    'LOG4': inst_log4,
    'CREATE': inst_create,
    'CALL': inst_call,
    'CALLCODE': inst_callcode,
    'RETURN': inst_return,
    'DELEGATECALL': inst_delegatecall,
    'CREATE2': inst_create2,
    'STATICCALL': inst_staticcall,
    'REVERT': inst_revert,
    'INVALID': inst_invalid,
    'SELFDESTRUCT': inst_selfdestruct,
    'CONDICALL': inst_condicall,
    'ICALL': inst_icall,
    'PHI': inst_phi,
    'SELFBALANCE': inst_selfbalance,
    'CHAINID': inst_chainid
}
